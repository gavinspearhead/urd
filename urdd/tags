!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ETA	group_functions.php	/^            $ETA = floor((($total - $cnt) * ($t_time - $s_time) \/ $cnt) \/ .75);$/;"	v
ETA	group_functions.php	/^        $ETA = floor((($total - $cnt) * ($t_time - $s_time) \/ $cnt));$/;"	v
ETA	nntp.class.php	/^        $ETA = round($articlestodo \/ $avgdownloadspeed);$/;"	v
GREATEST	group_functions.php	/^    $GREATEST = $db->get_greatest_function();$/;"	v
GREATEST	nntp.class.php	/^        $GREATEST = $this->db->get_greatest_function();$/;"	v
ID	nntp.class.php	/^                        $ID = get_group_by_name($this->db, $gr);$/;"	v
ID	nntp.class.php	/^                    $ID = $this->grouparray["$gr"];$/;"	v
ID	nntp.class.php	/^                    $ID = insert_group($this->db, $gr, $desc, $this->expire_time, $msg_count, $adult);$/;"	v
LIBXML_PARSEHUGE	urdd.php	/^    define ('LIBXML_PARSEHUGE', 0);$/;"	d
ORIGINAL_PAGE	urdd.php	/^define('ORIGINAL_PAGE', 'URDD');$/;"	d
Qcomplete	group_functions.php	/^        $Qcomplete = "OR (\\"articlesmax\\" != 0 AND floor(\\"binaries\\" * 100 \/ $GREATEST(1, \\"articlesmax\\")) < '$expire_percentage' AND \\"date\\" < '$expire_incomplete' )";$/;"	v
Qcomplete	group_functions.php	/^    $Qcomplete = '';$/;"	v
Qsetid	group_functions.php	/^    $Qsetid = " AND binaries_$groupID.\\"setID\\" = $setID_filter ";$/;"	v
Qsetid1	group_functions.php	/^    $Qsetid1 = " AND \\"ID\\" = $setID_filter ";$/;"	v
Qsource	urdd_functions.php	/^        $Qsource = ' AND "source" = ?';$/;"	v
Qsource	urdd_functions.php	/^    $Qsource = '';$/;"	v
RAR_MARKHEADER_SIGN_	download_type.class.php	/^define ('RAR_MARKHEADER_SIGN_', 'Rar!' . chr(0x1a) . chr(0x07) . chr(0x00)); \/\/ nasty$/;"	d
TableBinaries	group_functions.php	/^class TableBinaries$/;"	c
TableGroups	group_functions.php	/^class TableGroups$/;"	c
TableParts	group_functions.php	/^class TableParts$/;"	c
TableSetData	group_functions.php	/^class TableSetData$/;"	c
URD_NNTP	nntp.class.php	/^class URD_NNTP$/;"	c
__construct	action.php	/^    public function __construct ($cmd, $args,  $userid, $paused=FALSE, $priority=DEFAULT_PRIORITY)$/;"	f
__construct	nntp.class.php	/^    public function __construct (DatabaseConnection $db, $server, $connection_type=NULL, $port=0, $timeout=socket::DEFAULT_SOCKET_TIMEOUT)$/;"	f
__construct	queue.php	/^    public function __construct($max_size=0)$/;"	f
__construct	schedule.php	/^    public function __construct()$/;"	f
__construct	schedule.php	/^    public function __construct(action $action, $time, $recurrence=0)$/;"	f
__construct	server_data.php	/^    public function __construct($queue_size, $nntp_threads, $total_threads, $db_intensive_threads)$/;"	f
__construct	thread.php	/^    public function __construct ($pid, action $action)$/;"	f
__construct	thread.php	/^    public function __construct ()$/;"	f
__construct	urdd_client.php	/^    public function __construct(DatabaseConnection $db, $hostname, $port, $userid = 0, $timeout=socket::DEFAULT_SOCKET_TIMEOUT)$/;"	f
__construct	urdd_command.php	/^    public function __construct ($cmd, $do_function, $auth, $admin, $code, $need_nntp, $syntax='', $help_message='', $arg_str='', $primary_nntp=FALSE, $db_intensive= FALSE, $need_posting=FALSE, $type=urd_modules::URD_CLASS_GENERIC, $rights = '')$/;"	f
__construct	urdd_command.php	/^    public function __construct(array $settings)$/;"	f
__construct	urdd_connection.php	/^    public function __construct($sock)$/;"	f
__construct	urdd_connection.php	/^    public function __construct($timeout)$/;"	f
__construct	urdd_rss.php	/^    public function __construct(DatabaseConnection $db)$/;"	f
__construct	urdd_sockets.php	/^    public function __construct ()$/;"	f
__construct	urdd_test.php	/^    public function __construct ($name, $result, $message)$/;"	f
__construct	urdd_test.php	/^    public function __construct()$/;"	f
__construct	urdd_usenet_servers.php	/^    public function __construct ($id, $maxt, $port, $hostname, $encr, $username, $pw, $prio, $posting)$/;"	f
__construct	urdd_usenet_servers.php	/^    public function __construct()$/;"	f
__destruct	nntp.class.php	/^    public function __destruct ()$/;"	f
__destruct	queue.php	/^    public function __destruct()$/;"	f
__destruct	server_data.php	/^    public function __destruct()$/;"	f
__destruct	urdd_client.php	/^    public function __destruct ()$/;"	f
__destruct	urdd_command.php	/^    public function __destruct()$/;"	f
__destruct	urdd_usenet_servers.php	/^    public function __destruct()$/;"	f
_blacklist_counter	nntp.class.php	/^        $_blacklist_counter = 0;$/;"	v
a	schedule.php	/^            $a = $j->get_action();$/;"	v
a	spots_functions.php	/^            $a = glob ($image_dir . '*');$/;"	v
a	thread.php	/^            $a = $t->get_action();$/;"	v
ace_arg	download_functions.php	/^    $ace_arg = get_config($db, 'unace_pars', '');$/;"	v
ace_cmd	download_functions.php	/^    $ace_cmd = get_config($db, 'unace_path', '');$/;"	v
action	action.php	/^class action$/;"	c
action	schedule.php	/^            $action = $j->get_action();$/;"	v
action	schedule.php	/^        $action = $job->get_action();$/;"	v
action	schedule.php	/^        $this->action = $action;$/;"	v
action	schedule.php	/^    private $action;$/;"	v
action	server_data.php	/^        $action = $job->get_action();$/;"	v
action	server_data.php	/^        $action = $thread->get_action();$/;"	v
action	show_functions.php	/^            $action = $queue->addChild('action');$/;"	v
action	thread.php	/^        $this->action = $action;$/;"	v
action	thread.php	/^    private $action;$/;"	v
action	urdd.php	/^        $action = $job->get_action();$/;"	v
actions	show_functions.php	/^    $actions = $servers->get_queue();$/;"	v
active	group_functions.php	/^    $active = group_subscribed($db, $groupID);$/;"	v
active	post_functions.php	/^        $active = $res[0]['cnt'];$/;"	v
active_server	action.php	/^        $this->active_server = $id;$/;"	v
active_server	action.php	/^        $this->active_server = (int) 0;$/;"	v
active_server	action.php	/^        $this->active_server = 0;$/;"	v
active_server	action.php	/^    private $active_server; \/\/ if it is set, we either will try to run it only on this server, or it already runs on this one$/;"	v
add	schedule.php	/^    public function add(DatabaseConnection $db, job $job)$/;"	f
add	thread.php	/^    public function add(thread $thread)$/;"	f
add	urdd_test.php	/^    public function add(test_result $r)$/;"	f
add_bin_data	urdd_client.php	/^    public function add_bin_data($dlid, $groupid, $binid, $preview=FALSE)$/;"	f
add_buffer	urdd_connection.php	/^    public function add_buffer($buf)$/;"	f
add_buffer	urdd_connection.php	/^    public function add_buffer($sock, $line)$/;"	f
add_connection	urdd_connection.php	/^    public function add_connection($sock)$/;"	f
add_db_intensive_slot	server_data.php	/^    private function add_db_intensive_slot()$/;"	f
add_download	download_functions.php	/^function add_download(DatabaseConnection $db, $userid, $unpar, $unrar, $subdl, $delete_files, $status, $destination, $dl_type, $first_run, $download_par)$/;"	f
add_dummy_thread	thread.php	/^    public function add_dummy_thread($pid)$/;"	f
add_failed_servers	action.php	/^    public function add_failed_servers($id)$/;"	f
add_ids	do_functions.php	/^    $add_ids = array();$/;"	v
add_nntp_slot	server_data.php	/^    private function add_nntp_slot()$/;"	f
add_parameters	download_functions.php	/^        $add_parameters = "$userid $urd_path";$/;"	v
add_parameters	download_functions.php	/^        $add_parameters = '';$/;"	v
add_parts	group_functions.php	/^function add_parts(DatabaseConnection $db, array $tables, $groupID)$/;"	f
add_prio	queue.php	/^    protected function add_prio(action $item, DatabaseConnection $db, $increase_counter=TRUE)$/;"	f
add_schedule	server_data.php	/^    public function add_schedule(DatabaseConnection $db, job $job)$/;"	f
add_server	server_data.php	/^    public function add_server(usenet_server $server)$/;"	f
add_server	urdd_usenet_servers.php	/^    public function add_server(usenet_server $server)$/;"	f
add_set_data	group_functions.php	/^function add_set_data(DatabaseConnection $db, $groupID, $setID_filter)$/;"	f
add_set_data	urdd_client.php	/^    public function add_set_data($dlid, $setid, $preview=FALSE)$/;"	f
add_setname	do_functions.php	/^        $add_setname = get_pref($db, 'add_setname', $item->get_userid());$/;"	v
add_setname	urdd_functions.php	/^        $add_setname = 1;$/;"	v
add_sets	group_functions.php	/^function add_sets(DatabaseConnection $db, array $sets)$/;"	f
add_slot	server_data.php	/^    private function add_slot()$/;"	f
add_spot	spots_functions.php	/^    public static function add_spot(DatabaseConnection $db, array $spot_data)$/;"	f
add_spot_data	urdd_client.php	/^    public function add_spot_data($dlid, $spotid)$/;"	f
add_thread	server_data.php	/^    public function add_thread(thread $thread, $server_id=FALSE)$/;"	f
add_thread	thread.php	/^    public function add_thread(thread $thread, $server_id)$/;"	f
add_thread	urdd_usenet_servers.php	/^    public function add_thread($id)$/;"	f
add_thread	urdd_usenet_servers.php	/^    public function add_thread()$/;"	f
add_tried_servers	action.php	/^    public function add_tried_servers($id)$/;"	f
add_username	urdd_connection.php	/^    public function add_username($sock, $username)$/;"	f
addedsubs	download_functions.php	/^    $addedsubs = 'downloaded_subtitles';$/;"	v
addr	spots_functions.php	/^        $addr = explode('@', $from);$/;"	v
adult	do_functions.php	/^            $adult = (isset($arg_list[5]) && is_numeric($arg_list[5])) ? $arg_list[5] : ADULT_OFF;$/;"	v
adult	nntp.class.php	/^                $adult = check_xrated($gr);$/;"	v
af	urdd_sockets.php	/^        $af = $ipv6 ? AF_INET6 : AF_INET;$/;"	v
age	do_functions.php	/^    $age = get_config($db, 'clean_dir_age') * 24 * 3600; \/\/ db age is saved in days... convert to seconds$/;"	v
age	do_functions.php	/^    $age = get_config($db, 'users_clean_age', 0);$/;"	v
all_files	do_functions.php	/^    $all_files = array();$/;"	v
all_files	urdd_functions.php	/^    $all_files = array();$/;"	v
all_servers	download_functions.php	/^            $all_servers = get_config($db, 'nntp_all_servers', 0);$/;"	v
archive_types	download_functions.php	/^    $archive_types = array ( \/\/ command, options, password option, nopassword$/;"	v
arg	do_functions.php	/^            $arg = implode (' ', $arg_list);$/;"	v
arg	do_functions.php	/^            $arg = isset ($arg_list[1]) ? $arg_list[1] : '';$/;"	v
arg	do_functions.php	/^            $arg = isset($arg_list[1])? $arg_list[1] : '';$/;"	v
arg	do_functions.php	/^        $arg = strtolower($arg_list[0]);$/;"	v
arg	do_functions.php	/^        $arg = strtolower($item->get_args());$/;"	v
arg	do_functions.php	/^    $arg = $item->get_args();$/;"	v
arg	do_functions.php	/^    $arg = isset($arg_list[0]) ? strtoupper($arg_list[0]) : '';$/;"	v
arg	do_functions.php	/^    $arg = isset($format[0]) ? $format[0] : '';$/;"	v
arg	queue_functions.php	/^        $arg = isset($arg_list[0]) ? $arg_list[0] : '';$/;"	v
arg	server_data.php	/^            $arg = (isset($c[1])) ? $c[1] : '';$/;"	v
arg	urdd.php	/^                                $arg = array ("{$m}");$/;"	v
arg	urdd_command.php	/^        $arg = isset($arg_list[0]) ? $arg_list[0] : '';$/;"	v
arg1	do_functions.php	/^                $arg1 = strtoupper($arg_list[1]);$/;"	v
arg_list	do_functions.php	/^    $arg_list = $item->get_args();$/;"	v
arg_list	do_functions.php	/^    $arg_list = split_args($args);$/;"	v
arg_list	urdd_command.php	/^            $arg_list = split_args($args);$/;"	v
arg_list	urdd_command.php	/^        $arg_list = split_args($args);$/;"	v
arg_str	urdd_command.php	/^        $this->arg_str = $arg_str;$/;"	v
arg_str	urdd_command.php	/^    private $arg_str;   \/\/ argument string format$/;"	v
args	action.php	/^        $this->args = $action->get_args();$/;"	v
args	action.php	/^        $this->args = $args;$/;"	v
args	action.php	/^    private $args; \/\/ the arguments passed as one string$/;"	v
args	do_functions.php	/^        $args = $item->get_args();$/;"	v
args	do_functions.php	/^        $args = preg_split('\/[\\s]+\/', $item->get_args());$/;"	v
args	do_functions.php	/^    $args = $item->get_args();$/;"	v
args	do_functions.php	/^    $args = explode (' ', $item->get_args());$/;"	v
args	do_functions.php	/^    $args = implode(' ', $arg_list);$/;"	v
args	do_functions.php	/^    $args = preg_split('\/[\\s]+\/', $item->get_args());$/;"	v
args	post_functions.php	/^        $args = $item->get_args();$/;"	v
args	post_functions.php	/^    $args = $item->get_args();$/;"	v
args	urdd.php	/^                        $args = split_args($item->get_args());$/;"	v
args	urdd.php	/^                    $args = split_args($item->get_args());$/;"	v
args	urdd.php	/^                $args = commands_list::get_arg_list($cmd);$/;"	v
args	urdd.php	/^                $args = split_args($item->get_args());$/;"	v
args	urdd_command.php	/^        $args = (isset($elems[1])) ? $elems[1] : NULL;$/;"	v
args	urdd_functions.php	/^        $args = $item->get_args();$/;"	v
args	urdd_functions.php	/^    $args = $item->get_args();$/;"	v
args	urdd_options.php	/^            $args = read_argv();$/;"	v
arguments	do_functions.php	/^    $arguments = $parts[0];$/;"	v
arguments	do_functions.php	/^    $arguments = implode(' ', $arguments);$/;"	v
arguments	do_functions.php	/^    $arguments = split_args($arguments);$/;"	v
arj_arg	download_functions.php	/^    $arj_arg = get_config($db, 'unarj_pars', '');$/;"	v
arj_cmd	download_functions.php	/^    $arj_cmd = get_config($db, 'unarj_path', '');$/;"	v
art	do_functions.php	/^                        $art = $nzb->get_article($article['messageID']);$/;"	v
art	do_functions.php	/^                        $art = implode("\\n", $art);$/;"	v
art	download_functions.php	/^                    $art = implode("\\n", $art);$/;"	v
art	download_functions.php	/^            $art = $nzb->get_article($msg_id);$/;"	v
art	nntp.class.php	/^            $art = gmp_init($this->nntp->select_next_article());$/;"	v
art	urdd_extsetdata.php	/^            $art = $nzb->get_article($msg_id);$/;"	v
art	urdd_extsetdata.php	/^            $art = extset_uudecode($art);$/;"	v
art	urdd_extsetdata.php	/^            $art = gzinflate($art);$/;"	v
art_status	post_functions.php	/^                    $art_status = POST_FAILED;$/;"	v
art_status	post_functions.php	/^                    $art_status = POST_FINISHED;$/;"	v
article	do_functions.php	/^                    $article = $nntp->get_article($nzb);$/;"	v
article	do_functions.php	/^            $article = $nntp->get_article($art);$/;"	v
article	do_functions.php	/^        $article = wordwrap($message, 70, "\\r\\n", FALSE);$/;"	v
article	post_functions.php	/^                $article = file_get_contents($filename) . "\\r\\n";$/;"	v
articleid	post_functions.php	/^                    $articleid = $nntp->post_article(array($header, $article));$/;"	v
articleid	post_functions.php	/^                    $articleid = '';$/;"	v
articles	do_functions.php	/^                $articles = unserialize(substr($row['image'], 9));$/;"	v
articlesmax	group_functions.php	/^        $articlesmax = $r[0]['articlesmax'];$/;"	v
articlesmax	group_functions.php	/^    $articlesmax = 0;$/;"	v
articlesmax	group_functions.php	/^    public $articlesmax;$/;"	v
articlestodo	nntp.class.php	/^        $articlestodo = $totalarticles - $articlesdone;$/;"	v
arts_processed	nntp.class.php	/^            $arts_processed = gmp_sub($stop, $start);$/;"	v
auth	nntp.class.php	/^        $this->auth = $auth;$/;"	v
auth	nntp.class.php	/^        $this->auth = FALSE;$/;"	v
auth	nntp.class.php	/^    private $auth;              \/\/ we need authentication?$/;"	v
auth	urdd_usenet_servers.php	/^                        $auth = TRUE;$/;"	v
auth	urdd_usenet_servers.php	/^                    $auth = ($this->username != '') && ($this->password != '');$/;"	v
auth	urdd_usenet_servers.php	/^                $auth = ($this->username != '') && ($this->password != '');$/;"	v
auth	urdd_usenet_servers.php	/^            $auth = ($this->username != '') && ($this->password != '');$/;"	v
avgdownloadspeed	nntp.class.php	/^            $avgdownloadspeed = 0.01;$/;"	v
avgdownloadspeed	nntp.class.php	/^        $avgdownloadspeed = array_sum($this->downloadspeedArr) \/ count($this->downloadspeedArr);$/;"	v
avgdownloadspeed	nntp.class.php	/^        $avgdownloadspeed = floor($avgdownloadspeed);$/;"	v
avgdownloadspeed_b	nntp.class.php	/^            $avgdownloadspeed_b = 0.01;$/;"	v
avgdownloadspeed_b	nntp.class.php	/^        $avgdownloadspeed_b = array_sum($this->downloadspeedArr_b) \/ count($this->downloadspeedArr_b);$/;"	v
avgdownloadspeed_b	nntp.class.php	/^        $avgdownloadspeed_b = floor($avgdownloadspeed_b);$/;"	v
b_time	download_functions.php	/^        $b_time = microtime(TRUE);$/;"	v
b_time	post_functions.php	/^        $b_time = microtime(TRUE);$/;"	v
base	urdd_functions.php	/^                        $base = get_base($entry, $ext);$/;"	v
base	urdd_functions.php	/^            $base = get_base($entry, $mt); \/\/ try and find the base of the filename, which we use to match all the files against, to collect a set$/;"	v
base_dlpath	urdd_functions.php	/^        $base_dlpath = $base_dlpath . DONE_PATH . $username . DIRECTORY_SEPARATOR;$/;"	v
base_dlpath	urdd_functions.php	/^        $base_dlpath = get_dlpath($db);$/;"	v
basename	do_functions.php	/^    $basename = $file_name;$/;"	v
basename	urdd_extsetdata.php	/^    $basename = trim(basename($filename));$/;"	v
basename	urdd_functions.php	/^    $basename = substr($filename, 0, $pos);$/;"	v
batch_size	download_functions.php	/^    $batch_size = ($factor * batch_size::DL_BATCH_SIZE) + mt_rand(0, batch_size::DL_BATCH_SIZE);$/;"	v
batch_size	download_functions.php	/^    $batch_size = get_batchsize($item->get_preview(), $total_ready);$/;"	v
before	queue.php	/^        $before = $after = array();$/;"	v
begin	yydecode.php	/^                $begin = $match_begin[1] - 1;$/;"	v
begin	yydecode.php	/^                $begin = 0;$/;"	v
begin	yydecode.php	/^    static $begin = 0;$/;"	v
bin_data	do_functions.php	/^        $bin_data = $res[0];$/;"	v
bin_id	do_functions.php	/^            $bin_id = $row['binaryID'];$/;"	v
bin_table	group_functions.php	/^        $bin_table = "binaries_$groupid" ;$/;"	v
binaries	do_functions.php	/^            $binaries = 'binaries_' . $groupid;$/;"	v
binaries	group_functions.php	/^    $binaries = array();$/;"	v
binaries	group_functions.php	/^    public $binaries;$/;"	v
binarieslist	group_functions.php	/^                $binarieslist = '';$/;"	v
binarieslist	group_functions.php	/^                $binarieslist = rtrim($binarieslist, ', ');$/;"	v
binarieslist	group_functions.php	/^            $binarieslist = rtrim($binarieslist, ', ');$/;"	v
binarieslist	group_functions.php	/^    $binarieslist = '';$/;"	v
binaryID	do_functions.php	/^                $binaryID = $row['binaryID'];$/;"	v
binaryID	do_functions.php	/^        $binaryID = create_binary_id($cleansubject, $poster);$/;"	v
binaryID	group_functions.php	/^    public $binaryID;$/;"	v
binary_id	nntp.class.php	/^        $binary_id = array();$/;"	v
binary_ids	do_functions.php	/^        $binary_ids = ($res === FALSE) ? array() : $res;$/;"	v
binid	do_functions.php	/^            $binid = $args[3];$/;"	v
blacklist	do_functions.php	/^    $blacklist = load_blacklist($db, blacklist::BLACKLIST_EXTERNAL, NULL, TRUE);$/;"	v
blacklist_counter	nntp.class.php	/^        $blacklist_counter = gmp_add($blacklist_counter, $_blacklist_counter);$/;"	v
blacklist_counter	nntp.class.php	/^        $blacklist_counter = gmp_init(0);$/;"	v
blacklist_url	do_functions.php	/^    $blacklist_url = get_config($db, 'spots_blacklist', '');$/;"	v
blacklist_url	spots_functions.php	/^        $blacklist_url = get_config($db, 'spots_blacklist', '');$/;"	v
blocked_threads	urdd_usenet_servers.php	/^                $this->blocked_threads = max(0, $maxt - 1);$/;"	v
blocked_threads	urdd_usenet_servers.php	/^        $this->blocked_threads = (int) 0;$/;"	v
blocked_threads	urdd_usenet_servers.php	/^        $this->blocked_threads = 0;$/;"	v
blocked_threads	urdd_usenet_servers.php	/^    private $blocked_threads;$/;"	v
body	spots_functions.php	/^                        $body = substr($body, 0, 1024 * 10); \/\/ body can only be 10kB long$/;"	v
body	spots_functions.php	/^                    $body = $comment['body'] = array_map('utf8_encode', $body);$/;"	v
body	spots_functions.php	/^                    $body = $nzb->get_article($msg_id);$/;"	v
body	spots_functions.php	/^                    $body = db_compress($body);$/;"	v
body	spots_functions.php	/^                    $body = implode("\\n", $body);$/;"	v
bufcnt	download_type.class.php	/^        $bufcnt = array_push(self::$chunk_buffer, ($dir . $filename), $fileoffset, $filechunksize); \/\/ Save chunk metadata last in queue buffer for later use$/;"	v
buffer	urdd_connection.php	/^            $this->buffer = $lines[1];$/;"	v
buffer	urdd_connection.php	/^        $this->buffer = '';$/;"	v
buffer	urdd_connection.php	/^    private $buffer;$/;"	v
buffer_size	download_type.class.php	/^    private static $buffer_size = self::RARSCAN_QUEUESIZE;$/;"	v
bytes	group_functions.php	/^    public $bytes;$/;"	v
bytes	nntp.class.php	/^                $bytes		= $msg[$this->xover_bytes];$/;"	v
bytes	nntp.class.php	/^            $bytes = $this->msg_length($msgs);$/;"	v
bytes	post_functions.php	/^                    $bytes = strlen($article);$/;"	v
c	server_data.php	/^            $c = explode(' ', $command, 2);$/;"	v
c	show_functions.php	/^    $c = 1;$/;"	v
c	urdd_help.php	/^                $c = match_command($args[0]);$/;"	v
c	urdd_sockets.php	/^                    $c = $conn_list->add_connection($conn);$/;"	v
cache_dir	urdd_rss.php	/^        $this->cache_dir = get_magpie_cache_dir($db);$/;"	v
cache_dir	urdd_rss.php	/^    private $cache_dir;$/;"	v
calculate_spotter_id	spots_functions.php	/^    static private function calculate_spotter_id($userkey)$/;"	f
call_function	urdd_command.php	/^    public function call_function(DatabaseConnection $db, $arg_list, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid, $priority, $internal)$/;"	f
can_connect	urdd_client.php	/^            $this->can_connect = FALSE;$/;"	v
can_connect	urdd_client.php	/^            $this->can_connect = TRUE;$/;"	v
can_connect	urdd_client.php	/^    private $can_connect;$/;"	v
can_connect	urdd_client.php	/^    public function can_connect()$/;"	f
cancel	urdd_client.php	/^    public function cancel($msg_id)$/;"	f
cancelled_status	do_functions.php	/^    $cancelled_status = DOWNLOAD_CANCELLED;$/;"	v
cases	nntp.class.php	/^            $cases = 0;$/;"	v
cfg	show_functions.php	/^        $cfg = $xml->addChild('config');$/;"	v
ch_str	urdd_usenet_servers.php	/^                            $ch_str = $comp_headers ? 'Compressed headers supported' : '';$/;"	v
check_all_dl_done	download_functions.php	/^function check_all_dl_done(DatabaseConnection $db, action $item)$/;"	f
check_authorised	urdd_connection.php	/^    public function check_authorised($sock)$/;"	f
check_buffer	urdd_connection.php	/^    public function check_buffer($sock) \/\/ update the last receive time$/;"	f
check_conn_time	server_data.php	/^    public function check_conn_time()$/;"	f
check_db_intensive	server_data.php	/^    protected function check_db_intensive(action $item)$/;"	f
check_for_encrypted_rar	download_type.class.php	/^    public static function check_for_encrypted_rar(array $art, $dir)$/;"	f
check_for_rar_encryption	download_functions.php	/^        $check_for_rar_encryption = FALSE;$/;"	v
check_for_rar_encryption	download_functions.php	/^    $check_for_rar_encryption = get_pref($db, 'cancel_crypted_rars', $userid, FALSE);$/;"	v
check_for_rar_encryption	urdd.php	/^                $check_for_rar_encryption = get_pref($db, 'cancel_crypted_rars', $item->get_userid(), FALSE);$/;"	v
check_link	urdd_rss.php	/^    private static function check_link(DatabaseConnection $db, $id, $link)$/;"	f
check_nntp_connections	server_data.php	/^        $this->check_nntp_connections = ($on ? TRUE : FALSE);$/;"	v
check_nntp_connections	server_data.php	/^        $this->check_nntp_connections = FALSE;$/;"	v
check_nntp_connections	server_data.php	/^    private $check_nntp_connections; \/\/ whether to check the max # nntp connenctions a server can have$/;"	v
check_nntp_connections_enabled	server_data.php	/^    public function check_nntp_connections_enabled()$/;"	f
check_pid_file	urdd_config.php	/^function check_pid_file($pid_file)$/;"	f
check_queue	urdd.php	/^function check_queue(DatabaseConnection& $par_db, conn_list &$conn_list, server_data &$servers)$/;"	f
check_schedule	urdd.php	/^function check_schedule(DatabaseConnection $db, conn_list &$conn_list, server_data &$servers)$/;"	f
check_state	urdd_connection.php	/^    public function check_state($state)$/;"	f
check_username	urdd_connection.php	/^    public function check_username($username)$/;"	f
check_version	urdd_client.php	/^    public function check_version()$/;"	f
child_db	urdd.php	/^        $child_db = connect_db(TRUE);$/;"	v
chunk_buffer	download_type.class.php	/^    private static $chunk_buffer = array();$/;"	v
chunksizeread	download_type.class.php	/^        $chunksizeread = strlen($data);$/;"	v
cksfv	do_functions.php	/^            $cksfv = $unpar = $unrar = $uudecode = 0;$/;"	v
cksfv	do_functions.php	/^        $cksfv = $unpar = $concat = $delete_files = $first_run = $dl_subs = 0;$/;"	v
cksfv	do_functions.php	/^        $cksfv = $unpar = $res[0]['unpar'];$/;"	v
cksfv	do_functions.php	/^        $cksfv = $unpar = $unrar = $uudecode = $concat = 0;$/;"	v
cksfv_failed	do_functions.php	/^    $cksfv_failed = DOWNLOAD_CKSFV_FAILED;$/;"	v
cleandb	urdd_client.php	/^    public function cleandb($arg='')$/;"	f
cleandbage	do_functions.php	/^                $cleandbage = $arg * 24 * 60 * 60;$/;"	v
cleandbage	do_functions.php	/^                $cleandbage = 1;$/;"	v
cleandbage	do_functions.php	/^                $cleandbage = get_config($db, 'clean_db_age') * 24 * 60 * 60; \/\/ db age is saved in days... convert to seconds$/;"	v
cleandir	urdd_client.php	/^    public function cleandir($dir)$/;"	f
cleansubject	do_functions.php	/^        $cleansubject = utf8_encode($name);$/;"	v
cleanup	urdd_client.php	/^    private function cleanup()$/;"	f
cleanup_download_articles	urdd_functions.php	/^function cleanup_download_articles(DatabaseConnection $db, $dlid)$/;"	f
cleanup_post	post_functions.php	/^function cleanup_post(DatabaseConnection $db, $postid)$/;"	f
clear_server	action.php	/^    public function clear_server($store=FALSE)$/;"	f
clear_tried_servers	action.php	/^    public function clear_tried_servers(array $not_those_servers)$/;"	f
close	urdd_connection.php	/^    public function close($sock) \/\/ close a socket and remove from list$/;"	f
close	urdd_connection.php	/^    public function close()$/;"	f
close_all	urdd_connection.php	/^    public function close_all()$/;"	f
close_timedout	urdd_connection.php	/^    public function close_timedout()  \/\/ close all timed out connection;$/;"	f
cmd	do_functions.php	/^            $cmd = $arg_list[0];$/;"	v
cmd	do_functions.php	/^        $cmd = "\/bin\/sh -c '$gzip $gzip_pars ' ";$/;"	v
cmd	do_functions.php	/^        $cmd = $arg_list[1];$/;"	v
cmd	do_functions.php	/^    $cmd = array_shift($arguments);$/;"	v
cmd	download_functions.php	/^                $cmd = my_escapeshellcmd($archive_types[$type][0]);$/;"	v
cmd	download_functions.php	/^            $cmd = $scripts_path . $script . " $dlpath $dlid $dl_status $add_parameters";$/;"	v
cmd	download_functions.php	/^        $cmd = "\/bin\/sh -c '$subdownloader_cmd $subdownloader_pars --lang=$l 2>> $log_file >>$log_file'";$/;"	v
cmd	download_functions.php	/^    $cmd = "\/bin\/sh -c '$yydecode $yydecode_pars ' ";$/;"	v
cmd	queue.php	/^                $cmd = $q->get_command();$/;"	v
cmd	queue_functions.php	/^        $cmd == get_command_code(urdd_protocol::COMMAND_EXPIRE)) {$/;"	v
cmd	queue_functions.php	/^        $cmd == get_command_code(urdd_protocol::COMMAND_EXPIRE_RSS)) {$/;"	v
cmd	queue_functions.php	/^        $cmd == get_command_code(urdd_protocol::COMMAND_PURGE) ||$/;"	v
cmd	queue_functions.php	/^        $cmd == get_command_code(urdd_protocol::COMMAND_PURGE_RSS) ||$/;"	v
cmd	schedule.php	/^        $cmd = $action->get_command() . ' ' . $action->get_args();$/;"	v
cmd	server_data.php	/^                $cmd = $item->get_command();$/;"	v
cmd	server_data.php	/^            $cmd = $c[0];$/;"	v
cmd	urdd.php	/^                    $cmd = $item->get_command();$/;"	v
cmd	urdd.php	/^                $cmd = $args[0];$/;"	v
cmd	urdd.php	/^                $cmd = $row['description'];$/;"	v
cmd	urdd.php	/^        $cmd = do_command($db, $line, $response, $conn_list, $s=NULL, $servers, $action->get_userid(), NULL, FALSE);$/;"	v
cmd	urdd_client.php	/^        $cmd = FALSE;$/;"	v
cmd	urdd_command.php	/^            $cmd = match_command($cmd_str);$/;"	v
cmd	urdd_command.php	/^        $cmd = match_command($cmd_str);$/;"	v
cmd	urdd_config.php	/^                $cmd = "ps ax | grep '^ *$pid '|grep -i 'php.*urdd\\.php'";$/;"	v
cmd	urdd_functions.php	/^    $cmd = $item->get_command();$/;"	v
cmd	urdd_sockets.php	/^                    $cmd = do_command($db, $line, $response, $conn_list, $s, $servers, NULL, NULL, FALSE);$/;"	v
cmd_code	urdd.php	/^    $cmd_code = $item->get_command_code();$/;"	v
cmd_eq	action.php	/^            $cmd_eq = ($cmd == $this->command_code);$/;"	v
cmd_eq	action.php	/^            $cmd_eq = strcasecmp($cmd, $this->command) == 0;$/;"	v
cmd_line	download_functions.php	/^                $cmd_line = "nice -$niceval $cmd $options $pw_opt .\/$filename >>$log_file 2>&1";$/;"	v
cmd_line	post_functions.php	/^        $cmd_line = "$yyencode_cmd $yyencode_opt $yy_path $yy_rarfile > \/dev\/null 2>&1";$/;"	v
cmd_line	post_functions.php	/^        $cmd_line = "nice -$niceval $par2_cmd c -q -r$recovery_par $par2_file $dl_path1\/*  > \/dev\/null 2>&1";$/;"	v
cmd_line	post_functions.php	/^        $cmd_line = "nice -$niceval $rar_cmd $rar_opt $rar_size_option $rar_file $dir\/*  > \/dev\/null 2>&1";$/;"	v
cmd_str	urdd_command.php	/^        $cmd_str = strtoupper($elems[0]);$/;"	v
cmd_table	urdd.php	/^    static $cmd_table = array($/;"	v
cmt	do_functions.php	/^    $cmt = '';$/;"	v
cnt	do_functions.php	/^        $cnt = $rss->rss_update($db, $rss_info);$/;"	v
cnt	do_functions.php	/^        $cnt = 0;$/;"	v
cnt	do_functions.php	/^    $cnt = $res[0]['cnt'];$/;"	v
cnt	do_functions.php	/^    $cnt = 0;$/;"	v
cnt	download_type.class.php	/^        $cnt = 0;$/;"	v
cnt	group_functions.php	/^        $cnt = $res[0]['cnt'];$/;"	v
cnt	group_functions.php	/^    $cnt = 0;   \/\/ Number of binaries that are done$/;"	v
cnt	group_functions.php	/^    $cnt = 0;$/;"	v
cnt	nntp.class.php	/^        $cnt = 0;$/;"	v
cnt	nntp.class.php	/^        $cnt = gmp_add($cnt1, $cnt2);$/;"	v
cnt	queue.php	/^        $cnt = 0;$/;"	v
cnt	server_data.php	/^        $cnt = 0;$/;"	v
cnt	spots_functions.php	/^            $cnt = $res[0]['cnt'];$/;"	v
cnt	spots_functions.php	/^            $cnt = 0;$/;"	v
cnt	spots_functions.php	/^            $cnt = count($a);$/;"	v
cnt	spots_functions.php	/^            $cnt = count($rating);$/;"	v
cnt	spots_functions.php	/^        $cnt = 0;$/;"	v
cnt	urdd.php	/^        $cnt = 0;$/;"	v
cnt	urdd_client.php	/^                $cnt = 0;$/;"	v
cnt	urdd_client.php	/^        $cnt = 0;$/;"	v
cnt	urdd_extsetdata.php	/^        $cnt = $sql[1];$/;"	v
cnt	urdd_functions.php	/^    $cnt = $item->get_counter();$/;"	v
cnt	urdd_help.php	/^                $cnt = 0;$/;"	v
cnt	urdd_help.php	/^        $cnt = 0;$/;"	v
cnt	urdd_rss.php	/^            $cnt = $res[0]['cnt'];$/;"	v
cnt	urdd_rss.php	/^        $cnt = $res[0]['cnt'];$/;"	v
cnt	urdd_rss.php	/^        $cnt = 0;$/;"	v
cnt1	do_functions.php	/^    $cnt1 = $cnt2 = $cnt3 = $cnt4 = 0;$/;"	v
cnt1	nntp.class.php	/^                $cnt1 = gmp_div(gmp_mul($cnt1, ($expire * 24 * 3600)), $now - $first_date);$/;"	v
cnt1	nntp.class.php	/^            $cnt1 = $this->estimate_headers($first1, $last1, $expire);$/;"	v
cnt1	nntp.class.php	/^        $cnt1 = $cnt2 = $cnt = gmp_init(0);$/;"	v
cnt1	nntp.class.php	/^        $cnt1 = gmp_sub($last, $first);$/;"	v
cnt2	nntp.class.php	/^            $cnt2 = $this->estimate_headers($first2, $last2, $expire);$/;"	v
cntFull	group_functions.php	/^            $cntFull = get_set_size($subject);$/;"	v
cntr	do_functions.php	/^        $cntr = $mtime = 0;$/;"	v
code	nntp.class.php	/^                    $code = $e->getCode();$/;"	v
code	nntp.class.php	/^            $code = $e->getCode();$/;"	v
code	nntp.class.php	/^            $code = $e->getcode();$/;"	v
code	nntp.class.php	/^        $code = 0;$/;"	v
code	urdd.php	/^        $code = $e->getCode();$/;"	v
code	urdd.php	/^        $code = $e->getcode();$/;"	v
code	urdd_client.php	/^        $code = (int) (substr($lines[0], 0, 3));$/;"	v
code	urdd_command.php	/^        $this->code = (int) $code;$/;"	v
code	urdd_command.php	/^    private $code; \/\/ the numeral code of the command$/;"	v
cols	do_functions.php	/^        $cols = array('spotter_id', 'source', 'status', 'userid');$/;"	v
cols	do_functions.php	/^    $cols = array('downloadID', 'groupID', 'partnumber', 'name', 'status', 'messageID', 'binaryID', 'size');$/;"	v
cols	group_functions.php	/^    static $cols = array ('ID', 'groupID', 'subject', 'articlesmax', 'binaries', 'date', 'size');$/;"	v
cols	group_functions.php	/^    static $cols = array('binaryID', 'messageID', 'subject', 'fromname', 'date', 'partnumber', 'size');$/;"	v
cols	group_functions.php	/^    static $cols = array('binaryID', 'subject', 'date', 'bytes', 'totalParts', 'setID', 'dirty');$/;"	v
cols	post_functions.php	/^        $cols = array ('postid', 'filename', 'file_idx', 'rarfile', 'rar_idx', 'status');$/;"	v
cols	spots_functions.php	/^            $cols = array('spotid', 'from', 'comment', 'userid', 'stamp');$/;"	v
cols	spots_functions.php	/^        static $cols = array ($/;"	v
cols_nfo	group_functions.php	/^    static $cols_nfo = array('setID', 'groupID', 'binaryID');$/;"	v
command	action.php	/^            $this->command = $cmd;$/;"	v
command	action.php	/^            $this->command = NULL;$/;"	v
command	action.php	/^            $this->command = get_command($cmd);$/;"	v
command	action.php	/^        $this->command = $action->get_command();$/;"	v
command	action.php	/^    private $command; \/\/ the string representing the command$/;"	v
command	queue.php	/^        $command = $item->get_command_code();$/;"	v
command	server_data.php	/^            $command = $sched['command'];$/;"	v
command	urdd.php	/^    $command = $item->get_command_code();$/;"	v
command	urdd_command.php	/^        $this->command = $cmd;$/;"	v
command	urdd_command.php	/^    private $command;  \/\/ command string$/;"	v
command	urdd_command.php	/^class command$/;"	c
command	urdd_functions.php	/^        $command = $item->get_command();$/;"	v
command	urdd_functions.php	/^    $command = $item->get_command();$/;"	v
command_adddata	urdd_command.php	/^    public static function command_adddata(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_addspotdata	urdd_command.php	/^    public static function command_addspotdata(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_cancel	urdd_command.php	/^    public static function command_cancel(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_check_version	urdd_command.php	/^    public static function command_check_version(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_cleandb	urdd_command.php	/^    public static function command_cleandb(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_cleandir	urdd_command.php	/^    public static function command_cleandir(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_code	action.php	/^            $this->command_code = $cmd;$/;"	v
command_code	action.php	/^            $this->command_code = NULL;$/;"	v
command_code	action.php	/^            $this->command_code = get_command_code($cmd);$/;"	v
command_code	action.php	/^        $this->command_code = $action->get_command_code();$/;"	v
command_code	action.php	/^    private $command_code; \/\/ the code of the command$/;"	v
command_continue	urdd_command.php	/^    public static function command_continue(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_delete_set	urdd_command.php	/^    public static function command_delete_set(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_delete_set_rss	urdd_command.php	/^    public static function command_delete_set_rss(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_delete_spot	urdd_command.php	/^    public static function command_delete_spot(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_diskfree	urdd_command.php	/^    public static function command_diskfree(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_download	urdd_command.php	/^    public static function command_download(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_download_action	urdd_command.php	/^    public static function command_download_action(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_echo	urdd_command.php	/^    public static function command_echo(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_expire	urdd_command.php	/^    public static function command_expire(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_expire_rss	urdd_command.php	/^    public static function command_expire_rss(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_expire_spots	urdd_command.php	/^    public static function command_expire_spots(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_findservers	urdd_command.php	/^    public static function command_findservers(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_gensets	urdd_command.php	/^    public static function command_gensets(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_getblacklist	urdd_command.php	/^    public static function command_getblacklist(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_getnfo	urdd_command.php	/^    public static function command_getnfo(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_getsetinfo	urdd_command.php	/^    public static function command_getsetinfo(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_getspot_comments	urdd_command.php	/^    public static function command_getspot_comments(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_getspot_images	urdd_command.php	/^    public static function command_getspot_images(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_getspot_reports	urdd_command.php	/^    public static function command_getspot_reports(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_getspots	urdd_command.php	/^    public static function command_getspots(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_getwhitelist	urdd_command.php	/^    public static function command_getwhitelist(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_group	urdd_command.php	/^    public static function command_group(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_groups	urdd_command.php	/^    public static function command_groups(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_help	urdd_command.php	/^    public static function command_help(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_make_nzb	urdd_command.php	/^    public static function command_make_nzb(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_merge_sets	urdd_command.php	/^    public static function command_merge_sets(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_move	urdd_command.php	/^    public static function command_move(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_noop	urdd_command.php	/^    public static function command_noop(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_optimise	urdd_command.php	/^    public static function command_optimise(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_parse_nzb	urdd_command.php	/^    public static function command_parse_nzb(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_pass	urdd_command.php	/^    public static function command_pass(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_pause	urdd_command.php	/^    public static function command_pause(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_post	urdd_command.php	/^    public static function command_post(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_post_action	urdd_command.php	/^    public static function command_post_action(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_post_message	urdd_command.php	/^    public static function command_post_message(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_preempt	urdd_command.php	/^    public static function command_preempt(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_priority	urdd_command.php	/^    public static function command_priority(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_purge	urdd_command.php	/^    public static function command_purge(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_purge_rss	urdd_command.php	/^    public static function command_purge_rss(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_purge_spots	urdd_command.php	/^    public static function command_purge_spots(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_quit	urdd_command.php	/^    public static function command_quit(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_repeat_last_command	urdd_command.php	/^    public static function command_repeat_last_command(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_restart	urdd_command.php	/^    public static function command_restart(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_schedule	urdd_command.php	/^    public static function command_schedule(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_sendsetinfo	urdd_command.php	/^    public static function command_sendsetinfo(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_set	urdd_command.php	/^    public static function command_set(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_show	urdd_command.php	/^    public static function command_show(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_shutdown	urdd_command.php	/^    public static function command_shutdown(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_stop	urdd_command.php	/^    public static function command_stop(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_subscribe	urdd_command.php	/^    public static function command_subscribe(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_subscribe_rss	urdd_command.php	/^    public static function command_subscribe_rss(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_time	urdd_command.php	/^    public static function command_time(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_unpar_unrar	urdd_command.php	/^    public static function command_unpar_unrar(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_unschedule	urdd_command.php	/^    public static function command_unschedule(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_update	urdd_command.php	/^    public static function command_update(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_update_rss	urdd_command.php	/^    public static function command_update_rss(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_user	urdd_command.php	/^    public static function command_user(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
command_whoami	urdd_command.php	/^    public static function command_whoami(DatabaseConnection $db, $args, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
commands	urdd_command.php	/^        $commands = array();$/;"	v
commands	urdd_command.php	/^    private $commands = array();$/;"	v
commands	urdd_help.php	/^        $commands = $commands_list->get_commands();$/;"	v
commands_list	urdd_command.php	/^$commands_list = new commands_list($modules);$/;"	v
commands_list	urdd_command.php	/^class commands_list$/;"	c
comment	do_functions.php	/^            $comment = $e->getMessage();$/;"	v
comment	do_functions.php	/^            $comment = 'error_nzbfailed';$/;"	v
comment	do_functions.php	/^        $comment = "$update updated and $insert new groups";$/;"	v
comment	do_functions.php	/^        $comment = $e->getMessage();$/;"	v
comment	do_functions.php	/^        $comment = '';$/;"	v
comment	do_functions.php	/^        $comment = 'Complete';$/;"	v
comment	do_functions.php	/^        $comment = 'PAR2 not run ';$/;"	v
comment	do_functions.php	/^    $comment = "Newest version is $version";$/;"	v
comment	do_functions.php	/^    $comment = '';$/;"	v
comment	download_functions.php	/^                    $comment = "Processed $cnt batches";$/;"	v
comment	download_functions.php	/^                    $comment = $e->getMessage();$/;"	v
comment	download_functions.php	/^        $comment = 'Cksfv complete ';$/;"	v
comment	download_functions.php	/^        $comment = 'Cksfv failed ';$/;"	v
comment	download_functions.php	/^        $comment = 'PAR2 complete ';$/;"	v
comment	download_functions.php	/^        $comment = 'PAR2 failed ';$/;"	v
comment	download_functions.php	/^    $comment = '';$/;"	v
comment	download_functions.php	/^    $comment = 'Connection failed';$/;"	v
comment	spots_functions.php	/^                    $comment = self::parse_spot_comment($header, $spots_blacklist);$/;"	v
comment	urdd.php	/^                $comment = 'error_encryptedrar';$/;"	v
comment	urdd_extsetdata.php	/^    $comment = '';$/;"	v
comment_cnt	spots_functions.php	/^            $comment_cnt = $res[0]['cnt'];$/;"	v
comment_count	do_functions.php	/^        $comment_count = urd_spots::load_spot_comments($db, $nzb, $item, $groupArr_comments['expire']);$/;"	v
comment_count	do_functions.php	/^        $comment_count = urd_spots::load_spot_reports($db, $nzb, $item, $groupArr_reports['expire']);$/;"	v
comments_group	do_functions.php	/^        $comments_group = get_config($db, 'spots_comments_group');$/;"	v
comments_groupid	spots_functions.php	/^        $comments_groupid = group_by_name($db, $group_comments);$/;"	v
comp_error	do_functions.php	/^                $comp_error = TRUE;$/;"	v
comp_headers	urdd_usenet_servers.php	/^                            $comp_headers = $conn->test_compressed_headers_nntp($group, $code);$/;"	v
comp_headers	urdd_usenet_servers.php	/^                    $comp_headers = FALSE;$/;"	v
compare_command	urdd_command.php	/^    public function compare_command($str, $cmd)$/;"	f
compare_command	urdd_command.php	/^function compare_command($str, $cmd)$/;"	f
complete_download	download_functions.php	/^function complete_download(DatabaseConnection $db, server_data &$servers, action $item, $status)$/;"	f
complete_post	post_functions.php	/^function complete_post(DatabaseConnection $db, server_data &$servers, action $item, $status)$/;"	f
compressed_headers	nntp.class.php	/^        $compressed_headers = $groupArr['compressed_headers'];$/;"	v
compression	do_functions.php	/^                $compression = FALSE;$/;"	v
compression	do_functions.php	/^        $compression = FALSE;$/;"	v
compression	do_functions.php	/^    $compression = (bool) get_config($db, 'compress_nzb');$/;"	v
con	urdd_options.php	/^            $con  = new get_opt;$/;"	v
concat	do_functions.php	/^        $concat = $unrar = $res[0]['unrar'];$/;"	v
concat_files	download_functions.php	/^function concat_files(DatabaseConnection $db, pr_list $files, $dlid, $dir, &$error, &$dl_status)$/;"	f
conn	nntp.class.php	/^                $conn = FALSE;$/;"	v
conn	nntp.class.php	/^            $conn = $this->connection . ':';$/;"	v
conn	nntp.class.php	/^        $conn = '';$/;"	v
conn	nntp.class.php	/^        $conn = strtolower($connection_type);$/;"	v
conn	urdd_command.php	/^        $conn =& $conn_list->get_conn($sock);$/;"	v
conn	urdd_connection.php	/^        $conn = $this->conns[] = new connection($sock);$/;"	v
conn	urdd_sockets.php	/^                $conn = & $conn_list->get_conn($s);$/;"	v
conn	urdd_sockets.php	/^                $conn = socket_accept($s);$/;"	v
conn	urdd_usenet_servers.php	/^                    $conn = new URD_NNTP($db, $hostname, $e, $p, $timeout);$/;"	v
conn	urdd_usenet_servers.php	/^            $conn = new URD_NNTP($db, $this->hostname, $this->encryption, $this->port, $timeout);$/;"	v
conn_check_time	server_data.php	/^                $this->conn_check_time = $now + self::CONNECT_CHECK_TIME;$/;"	v
conn_check_time	server_data.php	/^                $this->conn_check_time = time() + self::CONNECT_CHECK_TIME;$/;"	v
conn_check_time	server_data.php	/^            $this->conn_check_time = 0;$/;"	v
conn_check_time	server_data.php	/^            $this->conn_check_time = time() + self::CONNECT_CHECK_TIME;$/;"	v
conn_check_time	server_data.php	/^        $this->conn_check_time = (int) 0;$/;"	v
conn_check_time	server_data.php	/^    private $conn_check_time; \/\/ time after which connections must be reset;$/;"	v
conn_list	urdd.php	/^    $conn_list = new conn_list(get_config($db, 'urdd_timeout', socket::DEFAULT_SOCKET_TIMEOUT));$/;"	v
conn_list	urdd_connection.php	/^class conn_list$/;"	c
conn_states	urdd_connection.php	/^    private static $conn_states = array($/;"	v
connect	nntp.class.php	/^    public function connect($auth, $username='', $password='')$/;"	f
connect	urdd_client.php	/^    public function connect($hostname, $port=URDD_PORT, $username='', $password='', $timeout=socket::DEFAULT_SOCKET_TIMEOUT)$/;"	f
connect_nntp	urdd_functions.php	/^function connect_nntp(DatabaseConnection $db, $id = FALSE)$/;"	f
connected	download_functions.php	/^                $connected = FALSE;$/;"	v
connected	download_functions.php	/^                $connected = TRUE;$/;"	v
connected	download_functions.php	/^        $connected = FALSE;$/;"	v
connected	urdd_client.php	/^                $this->connected = TRUE;$/;"	v
connected	urdd_client.php	/^        $this->connected = FALSE;$/;"	v
connected	urdd_client.php	/^        $this->connected = TRUE;$/;"	v
connected	urdd_client.php	/^    private $connected;$/;"	v
connection	nntp.class.php	/^        $this->connection = $conn;$/;"	v
connection	urdd_connection.php	/^class connection$/;"	c
connections	urdd_sockets.php	/^        $connections = array_merge($this->listen_sock, $connections);$/;"	v
conns	urdd_connection.php	/^    private $conns = array();$/;"	v
conns	urdd_usenet_servers.php	/^        $conns = array();$/;"	v
contents	download_functions.php	/^                    $contents = file_get_contents($dir . $f);$/;"	v
continue_cmd	urdd_client.php	/^    public function continue_cmd($msg_id)$/;"	f
continue_old	nntp.class.php	/^        $continue_old = FALSE;$/;"	v
copy	action.php	/^    public function copy(action $action)$/;"	f
count	do_functions.php	/^            $count = 0;$/;"	v
count	do_functions.php	/^        $count = $res[0]['cnt'];$/;"	v
count	do_functions.php	/^        $count = $totalsize = $fs = 0;$/;"	v
count	do_functions.php	/^        $count = 0;$/;"	v
count	do_functions.php	/^        $count = get_unfetched_spot_images_count($db);$/;"	v
count	do_functions.php	/^        $count = urd_spots::purge_spots($db, $item->get_dbid());$/;"	v
count	do_functions.php	/^    $count = $rss->expire_rss($db, $args, $item->get_dbid());$/;"	v
count	do_functions.php	/^    $count = $totalsize = $fs = 0;$/;"	v
count	do_functions.php	/^    $count = expire_binaries($db, $groupid, $item->get_dbid());$/;"	v
count	do_functions.php	/^    $count = urd_spots::expire_spots($db, $item->get_dbid());$/;"	v
count	download_functions.php	/^    $count = $succ = 0;$/;"	v
count	urdd_usenet_servers.php	/^        $count = count($this->servers);$/;"	v
counter	action.php	/^        $this->counter = (int) 0;$/;"	v
counter	action.php	/^    private $counter; \/\/ number of times it has been queued$/;"	v
counter	do_functions.php	/^        $counter = 0;$/;"	v
counter	urdd_extsetdata.php	/^    $counter = 0;$/;"	v
create_download	download_functions.php	/^function create_download(DatabaseConnection $db, server_data &$servers, $userid, $preview = FALSE, $priority=NULL)$/;"	f
create_download	urdd_client.php	/^    public function create_download()$/;"	f
create_download_threads	download_functions.php	/^function create_download_threads(DatabaseConnection $db, server_data &$servers, action $item)$/;"	f
create_make_nzb	do_functions.php	/^function create_make_nzb(DatabaseConnection $db, server_data &$servers, $userid, $priority)$/;"	f
create_par_files	post_functions.php	/^function create_par_files(DatabaseConnection $db, action $item, $postid, $recovery_par, $dl_path1, $userid, $dir, $name)$/;"	f
create_post_threads	download_functions.php	/^function create_post_threads(DatabaseConnection $db, server_data &$servers, action $item)$/;"	f
create_preview	urdd_client.php	/^     function create_preview()$/;"	f
create_rar_files	post_functions.php	/^function create_rar_files(DatabaseConnection $db, action $item, $postid, $filesize_rar, &$dl_path1, $userid, $dir, $name)$/;"	f
create_yenc_files	post_functions.php	/^function create_yenc_files(DatabaseConnection $db, action $item, $postid, array $file_list1, $userid, $dir, $name)$/;"	f
ctime	server_data.php	/^            $ctime = time();$/;"	v
cur_euid	urdd.php	/^    $cur_euid = posix_geteuid();$/;"	v
cur_uid	urdd.php	/^    $cur_uid = posix_getuid();$/;"	v
curl_mod	queue_functions.php	/^    $curl_mod = extension_loaded('curl');$/;"	v
curr	queue.php	/^                    $curr = $q;$/;"	v
curr_count	urdd_usenet_servers.php	/^        $curr_count = $current * $tp_count * $e_count;$/;"	v
current	urdd_usenet_servers.php	/^        $current = 0;$/;"	v
current_level	urdd_error.php	/^    $current_level = error_reporting();$/;"	v
d	nzb_poller.class.php	/^                    $d = dir($path);$/;"	v
d	urdd_functions.php	/^    $d = dir($directory);$/;"	v
d1	nntp.class.php	/^            $d1 = gmp_sub($orig_stop, gmp_add($start, $done));$/;"	v
d2	nntp.class.php	/^            $d2 = (gmp_cmp($total_max, 0) > 0) ? gmp_min($total_max, $total) : $total;$/;"	v
daemonise	urdd.php	/^function daemonise() \/\/ changes cwd to root!$/;"	f
data	do_functions.php	/^    $data = '';$/;"	v
data	download_type.class.php	/^        $data = file_get_contents($filename, FALSE, NULL, $fileoffset, $filechunksize + 50); \/\/ OK to add compensating 50 since it won't read past EOF anyway$/;"	v
data	nntp.class.php	/^                $data = $this->select_group_name($group_name, $code);$/;"	v
data	nntp.class.php	/^            $data = $this->nntp->select_group($name);$/;"	v
data	nntp.class.php	/^            $data = $this->select_group_name($group, $code);$/;"	v
data	nntp.class.php	/^            $data = $this->select_group_name($groupArr['name'], $code);$/;"	v
data	urdd_client.php	/^            $data = NULL;$/;"	v
data	urdd_client.php	/^            $data = array_slice($lines, 1);$/;"	v
dataoffset	download_type.class.php	/^            $dataoffset = strpos($data, self::RAR_MARKHEADER_SIGN, $dataoffset + 7); \/\/ Continue searching right after last "Rar!...", there may be more. Also, fake Rar!... headers won't fool us :P$/;"	v
dataoffset	download_type.class.php	/^        $dataoffset = strpos($data, self::RAR_MARKHEADER_SIGN);$/;"	v
date	do_functions.php	/^    $date = $bin_data['unixdate'];$/;"	v
date	group_functions.php	/^    public $date;$/;"	v
date	nntp.class.php	/^                $date = strtotime($msg[$this->xover_date]);$/;"	v
date	spots_functions.php	/^                    $date = $comment['date'];$/;"	v
date	spots_functions.php	/^                    $date = $report['date'];$/;"	v
days	show_functions.php	/^    $days = (int) ($uptime \/ (3600 * 24));$/;"	v
db	nntp.class.php	/^        $this->db = $db;$/;"	v
db	nntp.class.php	/^    private $db;               \/\/ the database to use$/;"	v
db	urdd.php	/^        $db = connect_db(TRUE);$/;"	v
db	urdd.php	/^    $db = connect_db(TRUE);$/;"	v
db	urdd_error.php	/^            $db = connect_db();$/;"	v
db_id	action.php	/^        $this->db_id = $action->get_dbid();$/;"	v
db_id	action.php	/^        $this->db_id = $id;$/;"	v
db_id	action.php	/^        $this->db_id = (int) 0;$/;"	v
db_id	action.php	/^    private $db_id; \/\/ the id in the db that matches with this item, if on the queue$/;"	v
db_intensive	action.php	/^        $this->db_intensive = $action->db_intensive();$/;"	v
db_intensive	action.php	/^        $this->db_intensive = (bool) get_command_db_intensive($cmd);$/;"	v
db_intensive	action.php	/^    private $db_intensive; \/\/ is flagged as heavy on the db$/;"	v
db_intensive	action.php	/^    public function db_intensive()$/;"	f
db_intensive	urdd_command.php	/^        $this->db_intensive = $db_intensive;$/;"	v
db_intensive	urdd_command.php	/^    private $db_intensive; \/\/ relies heavily on db interaction==> additional limitation on threads running of this type$/;"	v
db_intensive	urdd_command.php	/^    public function db_intensive() { return $this->db_intensive;}$/;"	f
db_intensive_maxthreads	urdd.php	/^        $db_intensive_maxthreads = $urdd_maxthreads; \/\/ if we set it to 0, we mean no limit, which is limited by the actual max threads :)$/;"	v
db_intensive_maxthreads	urdd.php	/^    $db_intensive_maxthreads = get_config($db, 'db_intensive_maxthreads'); \/\/ total number of threads that are marked db intensive$/;"	v
db_update	group_functions.php	/^        $db_update = create_db_updater($db->get_databasetype(), $db);$/;"	v
db_update_group_list	nntp.class.php	/^    public function db_update_group_list($groups)$/;"	f
dbid	download_functions.php	/^    $dbid = $item->get_dbid();$/;"	v
dbid	nntp.class.php	/^        $dbid = $item->get_dbid();$/;"	v
dbid	post_functions.php	/^        $dbid = $item->get_dbid();$/;"	v
dbid	queue.php	/^            $dbid = $item->get_dbid();$/;"	v
dbid	queue.php	/^            $dbid = insert_queue_status($db, $item->get_id(), "{$item->get_command()} {$item->get_args()}", $status, $item->get_command_code(), $item->get_userid(), 0, '', $item->get_priority());$/;"	v
dbid	schedule.php	/^        $this->dbid = (int) $id;$/;"	v
dbid	schedule.php	/^        $this->dbid = (int) 0;$/;"	v
dbid	schedule.php	/^    private $dbid; \/\/ ID in database$/;"	v
dbid	thread.php	/^        $dbid = $thread->get_action()->get_dbid();$/;"	v
dbid	urdd.php	/^    $dbid = $item->get_dbid();$/;"	v
dec	do_functions.php	/^            $dec = substr($format, 1);$/;"	v
dec	do_functions.php	/^        $dec = 0;$/;"	v
dec_free_slots	urdd_usenet_servers.php	/^    public function dec_free_slots($server_id)$/;"	f
dec_max_slots	urdd_usenet_servers.php	/^    public function dec_max_slots()$/;"	f
decode	urdd_client.php	/^    public function decode($string)$/;"	f
decoded	urdd_functions.php	/^    $decoded = '';$/;"	v
decoded	yydecode.php	/^                $decoded = '';$/;"	v
decoded	yydecode.php	/^                $decoded = convert_uudecode($line);$/;"	v
decoded	yydecode.php	/^    static $decoded = '';$/;"	v
decompress	download_functions.php	/^function decompress(DatabaseConnection $db, $type, $dir, pr_list $files, $password, $dlid, &$dl_status, &$error, $par_error)$/;"	f
def_exp	do_functions.php	/^        $def_exp = get_config($db, 'default_expire_time');$/;"	v
default_exp	do_functions.php	/^            $default_exp = get_config($db, 'default_expire_time');$/;"	v
default_link	spots_functions.php	/^                $default_link = $link;$/;"	v
default_timeout	urdd_connection.php	/^        $this->default_timeout = $timeout;$/;"	v
default_timeout	urdd_connection.php	/^    private $default_timeout; \/\/ in seconds$/;"	v
del	do_functions.php	/^        $del = rtrim($del, ',');$/;"	v
del	do_functions.php	/^    $del = '';$/;"	v
delete	queue.php	/^    public function delete(DatabaseConnection $db, $action_id, $userid, $delete_db = FALSE)$/;"	f
delete	server_data.php	/^    public function delete(DatabaseConnection $db, $action_id, $userid, $delete_db = FALSE)$/;"	f
delete_all	server_data.php	/^    public function delete_all(DatabaseConnection $db, $userid, $delete_db=FALSE)$/;"	f
delete_cmd	queue.php	/^    public function delete_cmd(DatabaseConnection $db, $cmd, $arg, $userid, $delete_db = FALSE)$/;"	f
delete_cmd	server_data.php	/^    public function delete_cmd(DatabaseConnection $db, $userid, $cmd, $arg, $delete_db = FALSE)$/;"	f
delete_download_article	urdd_functions.php	/^function delete_download_article(DatabaseConnection $db, $dlid, $status)$/;"	f
delete_files	do_functions.php	/^        $delete_files = $res[0]['delete_files'];$/;"	v
delete_files	download_functions.php	/^    $delete_files = ($r !== FALSE) ? $r : 0; \/\/ default off?$/;"	v
delete_files	post_functions.php	/^    $delete_files = $row['delete_files'];$/;"	v
delete_ids	queue.php	/^    public function delete_ids(DatabaseConnection $db, array $ids, $userid, $delete_db=FALSE)$/;"	f
delete_image_cache	spots_functions.php	/^    public static function delete_image_cache(DatabaseConnection $db, $all=TRUE, $safety_expire=0)$/;"	f
delete_pid_file	urdd_config.php	/^function delete_pid_file($pid_file)$/;"	f
delete_server	server_data.php	/^    public function delete_server($id)$/;"	f
delete_server	urdd_usenet_servers.php	/^    public function delete_server($id)$/;"	f
delete_set	urdd_client.php	/^    public function delete_set(array $setid, $type= USERSETTYPE_GROUP)$/;"	f
delete_thread	server_data.php	/^    public function delete_thread(DatabaseConnection $db, $pid, $store)$/;"	f
delete_thread	thread.php	/^    public function delete_thread(DatabaseConnection $db, $pid, $store=FALSE)$/;"	f
delete_thread	urdd_usenet_servers.php	/^    public function delete_thread($server_id)$/;"	f
delete_thread	urdd_usenet_servers.php	/^    public function delete_thread()$/;"	f
desc	nntp.class.php	/^                $desc = (isset($group['desc'])) ? $group['desc'] : '';$/;"	v
description	urdd_rss.php	/^            $description = str_replace('&nbsp;', ' ', $description);$/;"	v
description	urdd_rss.php	/^            $description = utf8_encode(isset ($item['description']) ? $item['description'] : $title);$/;"	v
description	urdd_rss.php	/^        $description = html_entity_decode($description, ENT_COMPAT, 'UTF-8');$/;"	v
descriptorspec	do_functions.php	/^        $descriptorspec = array ($/;"	v
descriptorspec	download_functions.php	/^    $descriptorspec = array ($/;"	v
descriptorspec	download_functions.php	/^    $descriptorspec = array($/;"	v
destination	download_functions.php	/^            $destination = get_download_destination($db, $dlid);$/;"	v
destination	download_functions.php	/^    $destination = get_download_destination($db, $dlid);$/;"	v
df	do_functions.php	/^        $df = $dt - $df; \/\/ used space instead of free space$/;"	v
df	do_functions.php	/^    $df = disk_free_space($dlpath);$/;"	v
dir	download_functions.php	/^    $dir = get_download_destination($db, $dlid);$/;"	v
dir	post_functions.php	/^    $dir = $res[0]['tmp_dir'];$/;"	v
dir	post_functions.php	/^    $dir = $row['src_dir'];$/;"	v
dir	post_functions.php	/^    $dir = my_escapeshellarg($dir);$/;"	v
dir	queue_functions.php	/^        $dir = $res[0]['destination'];$/;"	v
dir_error	do_functions.php	/^        $dir_error = TRUE;$/;"	v
direction	do_functions.php	/^            $direction = queue::MOVE_DOWN;$/;"	v
direction	do_functions.php	/^            $direction = queue::MOVE_UP;$/;"	v
directory	yydecode.php	/^                $directory = substr($argv[$i], 2);$/;"	v
directory	yydecode.php	/^$directory = '.\/';$/;"	v
disable	urdd_command.php	/^    public function disable()$/;"	f
disable	urdd_usenet_servers.php	/^    public function disable()$/;"	f
disable_posting	server_data.php	/^    public function disable_posting($server_id)$/;"	f
disable_posting	urdd_usenet_servers.php	/^    public function disable_posting($server_id)$/;"	f
disable_posting	urdd_usenet_servers.php	/^    public function disable_posting()$/;"	f
disable_server	server_data.php	/^    public function disable_server($server_id)$/;"	f
disable_server	urdd_usenet_servers.php	/^    public function disable_server($server_id)$/;"	f
disconnect	nntp.class.php	/^    public function disconnect()$/;"	f
disconnect	urdd_client.php	/^    public function disconnect()$/;"	f
diskfree	urdd_client.php	/^    public function diskfree($format = 'b')$/;"	f
dl_dir	urdd_functions.php	/^        $dl_dir = '';$/;"	v
dl_path	do_functions.php	/^    $dl_path = $dl_path_basis . TMP_PATH . $username . DIRECTORY_SEPARATOR;$/;"	v
dl_path	download_functions.php	/^        $dl_path = get_download_destination($db, $id);$/;"	v
dl_path	download_functions.php	/^    $dl_path = find_unique_name($dl_path_basis, TMP_PATH . $username . DIRECTORY_SEPARATOR, $id);$/;"	v
dl_path	nzb_poller.class.php	/^            $dl_path = $dl_path_basis . SPOOL_PATH;$/;"	v
dl_path1	post_functions.php	/^        $dl_path1 = $row['tmp_dir'];$/;"	v
dl_path1	post_functions.php	/^    $dl_path1 = find_unique_name($dl_path_basis, TMP_PATH . $username . DIRECTORY_SEPARATOR, $id);$/;"	v
dl_path2	post_functions.php	/^    $dl_path2 = find_unique_name($dl_path_basis, TMP_PATH . $username . DIRECTORY_SEPARATOR, $id);$/;"	v
dl_path3	post_functions.php	/^        $dl_path3 = $dl_path2 . basename($rarfile) . DIRECTORY_SEPARATOR;$/;"	v
dl_path_basis	do_functions.php	/^    $dl_path_basis = get_dlpath($db);$/;"	v
dl_path_basis	download_functions.php	/^    $dl_path_basis = get_dlpath($db);$/;"	v
dl_path_basis	nzb_poller.class.php	/^            $dl_path_basis = get_dlpath($db);$/;"	v
dl_path_basis	post_functions.php	/^    $dl_path_basis = get_dlpath($db);$/;"	v
dl_path_basis	urdd_extsetdata.php	/^    $dl_path_basis = get_dlpath($db);$/;"	v
dl_status	do_functions.php	/^    $dl_status = NULL;$/;"	v
dl_status	do_functions.php	/^    $dl_status = get_dlinfo_status($db, $dlid); \/\/ various functions set this value, so we must retrieve it from the db$/;"	v
dl_status	download_functions.php	/^                        $dl_status = DOWNLOAD_RAR_FAILED;$/;"	v
dl_status	download_functions.php	/^                    $dl_status = DOWNLOAD_RAR_FAILED;$/;"	v
dl_status	download_functions.php	/^                $dl_status = DOWNLOAD_ERROR;$/;"	v
dl_status	download_functions.php	/^                $dl_status = DOWNLOAD_RAR_FAILED;$/;"	v
dl_status	download_functions.php	/^            $dl_status = DOWNLOAD_RAR_FAILED;$/;"	v
dl_status	download_functions.php	/^        $dl_status = DOWNLOAD_ACTIVE;$/;"	v
dl_status	download_functions.php	/^    $dl_status       = DOWNLOAD_ACTIVE;$/;"	v
dl_status	download_functions.php	/^    $dl_status = my_escapeshellcmd($dl_status);$/;"	v
dl_status	post_functions.php	/^    $dl_status = POST_ACTIVE;$/;"	v
dl_subs	do_functions.php	/^        $dl_subs = $res[0]['subdl'];$/;"	v
dlcomment	do_functions.php	/^            $dlcomment = 'error_nzbfailed';$/;"	v
dlcomment	do_functions.php	/^        $dlcomment = 'error_nzbfailed';$/;"	v
dlid	do_functions.php	/^        $dlid = $args[0];$/;"	v
dlid	do_functions.php	/^    $dlid = $arg_list[0];$/;"	v
dlid	do_functions.php	/^    $dlid = $args[0];$/;"	v
dlid	download_functions.php	/^                $dlid = $item->get_args();$/;"	v
dlid	download_functions.php	/^        $dlid = $item->get_args();$/;"	v
dlid	download_functions.php	/^    $dlid = $item->get_args();$/;"	v
dlid	download_functions.php	/^    $dlid = my_escapeshellcmd($dlid);$/;"	v
dlid	queue.php	/^                        $dlid = $q->get_args();$/;"	v
dlid	queue.php	/^                    $dlid = $q->get_args();$/;"	v
dlid	queue_functions.php	/^            $dlid = $arg_list[0];$/;"	v
dlid	urdd.php	/^                    $dlid = $args[0];$/;"	v
dlid	urdd.php	/^                    $dlid = $args[1];$/;"	v
dlid	urdd.php	/^                $dlid = $item->get_args();$/;"	v
dlid	urdd_functions.php	/^    $dlid = $item->get_args();$/;"	v
dlname	do_functions.php	/^                $dlname = find_name($db, $name);$/;"	v
dlname	do_functions.php	/^            $dlname = 'NZB imported download ' . time();$/;"	v
dlname	do_functions.php	/^    $dlname = basename($url, '.nzb');$/;"	v
dlname	do_functions.php	/^    $dlname = find_name($db, $dlname);$/;"	v
dlname	group_functions.php	/^            $dlname = clean_dlname_for_setid($subject);$/;"	v
dlname	urdd_functions.php	/^    $dlname = get_download_name($db, $dlid);$/;"	v
dlpath	action.php	/^        $this->dlpath = $path;$/;"	v
dlpath	action.php	/^    private $dlpath; \/\/ the path where downloads are put$/;"	v
dlpath	do_functions.php	/^    $dlpath = $item->get_dlpath();$/;"	v
dlpath	do_functions.php	/^    $dlpath = get_dlpath($db) . SPOOL_PATH;$/;"	v
dlpath	do_functions.php	/^    $dlpath = get_dlpath($db);$/;"	v
dlpath	download_functions.php	/^    $dlpath = my_escapeshellcmd($destination);$/;"	v
dlpath	urdd_config.php	/^    $dlpath = get_dlpath($db);$/;"	v
dlpath	urdd_functions.php	/^    $dlpath = get_dlpath($db);$/;"	v
dlpw	download_functions.php	/^    $dlpw = get_download_password($db, $dlid) ? TRUE : FALSE;$/;"	v
dlsize	download_functions.php	/^        $dlsize = get_download_size($db, $dlid);$/;"	v
do_adddata	do_functions.php	/^function do_adddata(DatabaseConnection $db, action $item)$/;"	f
do_addspotdata	do_functions.php	/^function do_addspotdata(DatabaseConnection $db, action $item)$/;"	f
do_cancel	do_functions.php	/^function do_cancel(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid)$/;"	f
do_cancel_all	do_functions.php	/^function do_cancel_all(DatabaseConnection $db, server_data &$servers, $userid, $do_kill= FALSE)$/;"	f
do_check_version	do_functions.php	/^function do_check_version(DatabaseConnection $db, action $item)$/;"	f
do_clean_users	do_functions.php	/^function do_clean_users(DatabaseConnection $db)$/;"	f
do_cleandb	do_functions.php	/^function do_cleandb(DatabaseConnection $db, action $item)$/;"	f
do_cleandir	do_functions.php	/^function do_cleandir(DatabaseConnection $db, action $item)$/;"	f
do_command	urdd_command.php	/^    public function do_command(DatabaseConnection $db, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
do_command	urdd_command.php	/^function do_command(DatabaseConnection $db, $line, &$response, conn_list &$conn_list, $sock, server_data &$servers, $userid=NULL, $priority=NULL, $internal=FALSE)$/;"	f
do_create_download	download_functions.php	/^function do_create_download(DatabaseConnection $db, server_data &$servers, $userid, $preview = FALSE, $priority=NULL)$/;"	f
do_delete_set	do_functions.php	/^function do_delete_set(DatabaseConnection $db, action $item)$/;"	f
do_delete_set_rss	do_functions.php	/^function do_delete_set_rss(DatabaseConnection $db, action $item)$/;"	f
do_delete_spot	do_functions.php	/^function do_delete_spot(DatabaseConnection $db, action $item)$/;"	f
do_diskfree	do_functions.php	/^function do_diskfree(DatabaseConnection $db, $format='')$/;"	f
do_download	do_functions.php	/^function do_download(DatabaseConnection $db, action $item)$/;"	f
do_expire	do_functions.php	/^    $do_expire = (get_config($db, 'auto_expire') == 1);$/;"	v
do_expire	do_functions.php	/^function do_expire(DatabaseConnection $db, action $item)$/;"	f
do_expire_incomplete	group_functions.php	/^    $do_expire_incomplete = $expire_incomplete = get_config($db, 'expire_incomplete');$/;"	v
do_expire_rss	do_functions.php	/^function do_expire_rss(DatabaseConnection $db, action $item)$/;"	f
do_expire_spots	do_functions.php	/^function do_expire_spots(DatabaseConnection $db, action $item)$/;"	f
do_find_servers	do_functions.php	/^function do_find_servers(DatabaseConnection $db, action $item)$/;"	f
do_function	urdd_command.php	/^        $this->do_function = $do_function;$/;"	v
do_function	urdd_command.php	/^    private $do_function; \/\/ function to call$/;"	v
do_gensets	do_functions.php	/^function do_gensets(DatabaseConnection $db, action $item)$/;"	f
do_getblacklist	do_functions.php	/^function do_getblacklist(DatabaseConnection $db, action $item)$/;"	f
do_getnfo	do_functions.php	/^function do_getnfo(DatabaseConnection $db, action $item)$/;"	f
do_getsetinfo	urdd_extsetdata.php	/^function do_getsetinfo(DatabaseConnection $db, action $item)$/;"	f
do_getspot_comments	do_functions.php	/^function do_getspot_comments(DatabaseConnection $db, action $item)$/;"	f
do_getspot_images	do_functions.php	/^function do_getspot_images(DatabaseConnection $db, action $item)$/;"	f
do_getspot_reports	do_functions.php	/^function do_getspot_reports(DatabaseConnection $db, action $item)$/;"	f
do_getspots	do_functions.php	/^function do_getspots(DatabaseConnection $db, action $item)$/;"	f
do_getwhitelist	do_functions.php	/^function do_getwhitelist(DatabaseConnection $db, action $item)$/;"	f
do_group	do_functions.php	/^function do_group(DatabaseConnection $db, server_data &$servers, array $arg_list)$/;"	f
do_help	urdd_help.php	/^    public static function do_help(array $args, &$response)$/;"	f
do_listupdate	do_functions.php	/^function do_listupdate(DatabaseConnection $db, action $item)$/;"	f
do_make_nzb	do_functions.php	/^function do_make_nzb(DatabaseConnection $db, action $item)$/;"	f
do_merge_sets	do_functions.php	/^function do_merge_sets(DatabaseConnection $db, action $item)$/;"	f
do_move	do_functions.php	/^function do_move(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid)$/;"	f
do_optimise	do_functions.php	/^function do_optimise(DatabaseConnection $db, action $item)$/;"	f
do_parse_nzb	do_functions.php	/^function do_parse_nzb(DatabaseConnection $db, action $item)$/;"	f
do_pause	do_functions.php	/^function do_pause(DatabaseConnection $db, server_data &$servers, array $arg_list, $pause, $userid)$/;"	f
do_post_batch	post_functions.php	/^function do_post_batch(DatabaseConnection $db, action $item)$/;"	f
do_post_message	do_functions.php	/^function do_post_message(DatabaseConnection $db, action $item)$/;"	f
do_preempt	do_functions.php	/^function do_preempt(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid)$/;"	f
do_prepare_post	post_functions.php	/^function do_prepare_post(DatabaseConnection $db, action $item)$/;"	f
do_priority	do_functions.php	/^function do_priority(DatabaseConnection $db, array $arg_list, server_data &$servers, $userid)$/;"	f
do_purge	do_functions.php	/^function do_purge(DatabaseConnection $db, action $item)$/;"	f
do_purge_rss	do_functions.php	/^function do_purge_rss(DatabaseConnection $db, action $item)$/;"	f
do_purge_spots	do_functions.php	/^function do_purge_spots(DatabaseConnection $db, action $item)$/;"	f
do_schedule	do_functions.php	/^function do_schedule(DatabaseConnection $db, array $arg_list, server_data &$servers, $userid)$/;"	f
do_sendsetinfo	urdd_extsetdata.php	/^function do_sendsetinfo(DatabaseConnection $db, action $item)$/;"	f
do_set	do_functions.php	/^function do_set(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid)$/;"	f
do_show	show_functions.php	/^function do_show(array $arg_list, conn_list $conn_list, server_data $servers, DatabaseConnection $db)$/;"	f
do_show_config	show_functions.php	/^function do_show_config($output_type)$/;"	f
do_show_feeds	show_functions.php	/^function do_show_feeds(DatabaseConnection $db, $output_type)$/;"	f
do_show_jobs	show_functions.php	/^function do_show_jobs(DatabaseConnection $db, server_data $servers, $output_type)$/;"	f
do_show_load	show_functions.php	/^function do_show_load($output_type)$/;"	f
do_show_modules	show_functions.php	/^function do_show_modules(DatabaseConnection $db, $output_type)$/;"	f
do_show_newsgroups	show_functions.php	/^function do_show_newsgroups(DatabaseConnection $db, $subscribed, $output_type)$/;"	f
do_show_queue	show_functions.php	/^function do_show_queue(DatabaseConnection $db, server_data $servers, $output_type)$/;"	f
do_show_servers	show_functions.php	/^function do_show_servers(server_data $server_data, $output_type)$/;"	f
do_show_status	show_functions.php	/^function do_show_status(server_data $servers, conn_list $conn_list, $output_type)$/;"	f
do_show_tests	show_functions.php	/^function do_show_tests($output_type)$/;"	f
do_show_threads	show_functions.php	/^function do_show_threads(DatabaseConnection $db, server_data $servers, $output_type)$/;"	f
do_show_users	show_functions.php	/^function do_show_users(conn_list $conn_list, $output_type)$/;"	f
do_show_version	show_functions.php	/^function do_show_version($output_type)$/;"	f
do_stop	do_functions.php	/^function do_stop(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid)$/;"	f
do_subscribe	do_functions.php	/^function do_subscribe(DatabaseConnection $db, array $arg_list, server_data &$servers, $userid)$/;"	f
do_subscribe_rss	do_functions.php	/^function do_subscribe_rss(DatabaseConnection $db, array $arg_list, server_data &$servers, $userid)$/;"	f
do_unpar_unrar	do_functions.php	/^function do_unpar_unrar(DatabaseConnection $db, action $item)$/;"	f
do_unschedule	do_functions.php	/^function do_unschedule(DatabaseConnection $db, array $arg_list, server_data &$server, $userid)$/;"	f
do_update	do_functions.php	/^function do_update(DatabaseConnection $db, action $item)$/;"	f
do_update_rss	do_functions.php	/^function do_update_rss(DatabaseConnection $db, action $item)$/;"	f
done	do_functions.php	/^    $done = get_download_destination($db, $dlid);$/;"	v
done	do_functions.php	/^    $done = move_file_to_nzb($db, $dlid, $fn, $dlpath, $basename, $ext, $userid);$/;"	v
done	download_functions.php	/^            $done = get_download_articles_count_status($db, $dlid, $done_status);$/;"	v
done	download_functions.php	/^    $done = $cnt = 0;$/;"	v
done	download_functions.php	/^    $done = $db->select_query($sql, array($dlid, DOWNLOAD_FINISHED));$/;"	v
done_count	post_functions.php	/^                $done_count = $rv[0]['cnt'];$/;"	v
done_ready	download_functions.php	/^            $done_ready = $done - $done_start;$/;"	v
done_ready	post_functions.php	/^                $done_ready = $done_count - $done_start;$/;"	v
done_start	download_functions.php	/^    $done_start = $total - $total_ready;$/;"	v
done_start	post_functions.php	/^        $done_start = $total_count - $total_ready;$/;"	v
done_status	download_functions.php	/^            $done_status = ($done == 0) ? DOWNLOAD_FAILED : DOWNLOAD_COMPLETE;$/;"	v
done_status	download_functions.php	/^            $done_status = DOWNLOAD_CANCELLED; \/\/ a cancel is permanent$/;"	v
done_status	download_functions.php	/^    $done_status     = DOWNLOAD_FINISHED;$/;"	v
done_status	post_functions.php	/^            $done_status = POST_CANCELLED; \/\/ a cancel is permanent$/;"	v
done_status	post_functions.php	/^            $done_status = POST_FINISHED;$/;"	v
download_batch	download_functions.php	/^function download_batch(DatabaseConnection $db, array &$batch, $dir, URD_NNTP &$nzb, &$groupid, $userid, &$connected, $check_for_rar_encryption, $download_par_files)$/;"	f
download_par_files	do_functions.php	/^    $download_par_files = get_pref($db, 'download_par', $userid) ? TRUE : FALSE;$/;"	v
download_par_files	download_functions.php	/^    $download_par_files = get_download_par_files($db, $dlid) ? TRUE : FALSE;$/;"	v
download_par_files	download_functions.php	/^    $download_par_files = get_pref($db, 'download_par', $userid);$/;"	v
download_subs	download_functions.php	/^function download_subs(DatabaseConnection $db, $dir, $userid)$/;"	f
download_text_file	download_functions.php	/^    $download_text_file = get_pref($db, 'download_text_file', $userid);$/;"	v
download_type	download_type.class.php	/^class download_type$/;"	c
downloadspeed	nntp.class.php	/^        $downloadspeed = $nrmessages \/ $timeneeded;$/;"	v
downloadspeedArr	nntp.class.php	/^        $this->downloadspeedArr = array();$/;"	v
downloadspeedArr	nntp.class.php	/^    private $downloadspeedArr; \/\/ is used to keep track of avg download speeds$/;"	v
downloadspeedArr_b	nntp.class.php	/^        $this->downloadspeedArr_b = array();$/;"	v
downloadspeedArr_b	nntp.class.php	/^    private $downloadspeedArr_b; \/\/ is used to keep track of avg download speeds$/;"	v
downloadspeed_b	nntp.class.php	/^        $downloadspeed_b = $bytes \/ $timeneeded;$/;"	v
dt	do_functions.php	/^    $dt = disk_total_space($dlpath);$/;"	v
du	do_functions.php	/^    $du = $dt - $df;$/;"	v
dummy	urdd.php	/^    $dummy = array();$/;"	v
e_count	urdd_usenet_servers.php	/^        $e_count = count($encryption);$/;"	v
e_userid	do_functions.php	/^        $e_userid = get_effective_userid($db, $userid);$/;"	v
e_userid	do_functions.php	/^    $e_userid = get_effective_userid($db, $userid);$/;"	v
ec	urdd_functions.php	/^        $ec = posix_get_last_error();$/;"	v
echo_cmd	urdd_client.php	/^    public function echo_cmd($msg)$/;"	f
elems	do_functions.php	/^    $elems = preg_split('\/[\\s]+\/', $item->get_args());$/;"	v
elems	urdd_command.php	/^        $elems = preg_split('\/[\\s]+\/', $line, 2);$/;"	v
email	urdd_extsetdata.php	/^    $email = 'urd@urd.com';$/;"	v
enable	urdd_command.php	/^    public function enable ($type, $enable)$/;"	f
enable	urdd_command.php	/^    public function enable()$/;"	f
enable	urdd_usenet_servers.php	/^    public function enable()$/;"	f
enable_check_nntp_connections	server_data.php	/^    public function enable_check_nntp_connections($on)$/;"	f
enable_nntp	server_data.php	/^    public function enable_nntp($on)$/;"	f
enable_posting	server_data.php	/^    public function enable_posting($server_id)$/;"	f
enable_posting	urdd_usenet_servers.php	/^    public function enable_posting($server_id)$/;"	f
enable_posting	urdd_usenet_servers.php	/^    public function enable_posting()$/;"	f
enable_server	server_data.php	/^    public function enable_server($server_id, $prio)$/;"	f
enable_server	urdd_usenet_servers.php	/^    public function enable_server($server_id, $prio)$/;"	f
enabled	show_functions.php	/^        $enabled = ($prio == 0) ? 'disabled' : 'enabled';$/;"	v
enabled	urdd_command.php	/^        $this->enabled = FALSE;$/;"	v
enabled	urdd_command.php	/^        $this->enabled = TRUE;$/;"	v
enabled	urdd_command.php	/^    private $enabled; \/\/ command is enabled$/;"	v
enabled	urdd_usenet_servers.php	/^                $this->enabled = TRUE;$/;"	v
enabled	urdd_usenet_servers.php	/^        $this->enabled = FALSE;$/;"	v
enabled	urdd_usenet_servers.php	/^        $this->enabled = TRUE;$/;"	v
enabled	urdd_usenet_servers.php	/^    private $enabled;$/;"	v
encoded	urdd_functions.php	/^    $encoded = $encoded[1];$/;"	v
encoded	urdd_functions.php	/^    $encoded = array();$/;"	v
encoded	urdd_functions.php	/^    $encoded = preg_replace("\/(^=ybegin.*\\\\n)\/im", '', $encoded, 1);$/;"	v
encoded	urdd_functions.php	/^    $encoded = preg_replace("\/(^=yend.*)\/im", '', $encoded, 1);$/;"	v
encoded	urdd_functions.php	/^    $encoded = preg_replace("\/(^=ypart.*\\\\n)\/im", '', $encoded, 1);$/;"	v
encoded	urdd_functions.php	/^    $encoded = trim(str_replace(array("\\n", "\\r"), '', $encoded));$/;"	v
encryption	urdd_usenet_servers.php	/^            $this->encryption = $encr;$/;"	v
encryption	urdd_usenet_servers.php	/^        $encryption = array ('off', 'ssl', 'tls');$/;"	v
encryption	urdd_usenet_servers.php	/^        $this->encryption = $encr;$/;"	v
encryption	urdd_usenet_servers.php	/^    private $encryption; \/\/ off, ssl or tls$/;"	v
end_status	thread.php	/^        $this->end_status = $stat;$/;"	v
end_status	thread.php	/^        $this->end_status = DOWNLOAD_ACTIVE;$/;"	v
end_status	thread.php	/^    private $end_status;  \/\/ Use DOWNLOAD_ACTIVE etc$/;"	v
endtime	download_functions.php	/^        $endtime = time();$/;"	v
err_code	do_functions.php	/^            $err_code = CONFIG_ERROR;$/;"	v
err_code	do_functions.php	/^            $err_code = FILE_NOT_FOUND;$/;"	v
err_code	do_functions.php	/^            $err_code = GROUP_NOT_FOUND;$/;"	v
err_code	do_functions.php	/^            $err_code = INTERNAL_FAILURE;$/;"	v
err_code	do_functions.php	/^            $err_code = NNTP_AUTH_ERROR;$/;"	v
err_code	do_functions.php	/^            $err_code = NNTP_NOT_CONNECTED_ERROR;$/;"	v
err_code	nntp.class.php	/^                $err_code = $code;$/;"	v
err_code	nntp.class.php	/^                $err_code = UNKNOWN_ERROR;$/;"	v
err_level	download_functions.php	/^                $err_level = error_reporting(0); \/\/ so we don't get any write errors, saves a @$/;"	v
err_level	yydecode.php	/^$err_level = error_reporting(0); \/\/ so we don't get any write errors, saves a @$/;"	v
err_msg	nntp.class.php	/^                $err_msg = "Cannot authenticate to server to {$this->server}:{$this->port} as $username";$/;"	v
err_str	queue_functions.php	/^            $err_str = 'curl ';$/;"	v
err_str	queue_functions.php	/^        $err_str = '';$/;"	v
error	do_functions.php	/^        $error = trim($error, "\\n\\r\\t ");$/;"	v
error	do_functions.php	/^    $error = '';$/;"	v
error	download_functions.php	/^                        $error = TRUE;$/;"	v
error	download_functions.php	/^                    $error = TRUE;$/;"	v
error	download_functions.php	/^                $error = TRUE;$/;"	v
error	download_functions.php	/^        $error = FALSE;$/;"	v
error	download_functions.php	/^        $error = TRUE;$/;"	v
error_no	download_functions.php	/^                    $error_no = NO_ERROR;$/;"	v
error_no	download_functions.php	/^            $error_no = NNTP_AUTH_ERROR;$/;"	v
error_no	download_functions.php	/^            $error_no = NNTP_NOT_CONNECTED_ERROR;$/;"	v
error_no	download_functions.php	/^            $error_no = SERVER_INACTIVE;$/;"	v
estimate_header_count	nntp.class.php	/^    protected function estimate_header_count($first1, $last1, $first2, $last2, $total_max, $expire)$/;"	f
estimate_headers	nntp.class.php	/^    protected function estimate_headers($first, $last, $expire)$/;"	f
eta	download_functions.php	/^            $eta = ($done_ready > 0) ? (round(($remain * $time_diff) \/ $done_ready)) : 0;$/;"	v
eta	post_functions.php	/^                $eta = ($done_count > 0) ? (round(($remain * $time_diff) \/ $done_ready)) : 0;$/;"	v
exp	do_functions.php	/^                    $exp = $arg_list[2];$/;"	v
exp	do_functions.php	/^                    $exp = $def_exp;$/;"	v
exp	do_functions.php	/^            $exp = (isset($arg_list[2]) && is_numeric($arg_list[2])) ?  $arg_list[2] : $default_exp;$/;"	v
expire	do_functions.php	/^    $expire = time() - ($groupArr['expire'] * 24 * 3600);$/;"	v
expire	group_functions.php	/^        $expire = get_config($db, 'default_expire_time');$/;"	v
expire	group_functions.php	/^    $expire = $time - $expire;$/;"	v
expire	group_functions.php	/^    $expire = group_expire($db, $groupID);$/;"	v
expire	group_functions.php	/^    $expire = group_expire($db, $groupid);$/;"	v
expire	nntp.class.php	/^            $expire = $groupArr['expire'];$/;"	v
expire	show_functions.php	/^        $expire = $row['expire'];$/;"	v
expire	spots_functions.php	/^        $expire = $time - $expire_time;$/;"	v
expire	urdd_client.php	/^    public function expire($msg_id = '', $type=USERSETTYPE_GROUP)$/;"	f
expire	urdd_rss.php	/^        $expire = $rss_info['expire']; \/\/ in days$/;"	v
expire	urdd_rss.php	/^        $expire = $rss_info['expire'];$/;"	v
expire	urdd_rss.php	/^        $expire = time() - $expire;$/;"	v
expire_binaries	group_functions.php	/^function expire_binaries(DatabaseConnection $db, $groupID, $dbid)$/;"	f
expire_incomplete	group_functions.php	/^    $expire_incomplete = $time - $expire_incomplete;$/;"	v
expire_percentage	group_functions.php	/^    $expire_percentage = get_config($db, 'expire_percentage');$/;"	v
expire_rss	urdd_rss.php	/^    public function expire_rss(DatabaseConnection $db, $rss_id, $dbid)$/;"	f
expire_spots	spots_functions.php	/^    public static function expire_spots(DatabaseConnection $db, $dbid)$/;"	f
expire_time	nntp.class.php	/^        $this->expire_time = get_config($this->db, 'default_expire_time');$/;"	v
expire_time	nntp.class.php	/^    private $expire_time;$/;"	v
expire_time	spots_functions.php	/^            $expire_time = get_config($db, 'spots_expire_time', DEFAULT_SPOTS_EXPIRE_TIME);$/;"	v
expire_time	urdd_rss.php	/^        $expire_time = $now - $expire;$/;"	v
expire_timestamp	spots_functions.php	/^        $expire_timestamp = time() - ($expire * 24 * 3600);$/;"	v
ext	do_functions.php	/^        $ext = '.nzb.gz';$/;"	v
ext	do_functions.php	/^    $ext = '.nzb';$/;"	v
extension	urdd_functions.php	/^    $extension = substr($filename, $pos + 1);$/;"	v
extensions	urdd_functions.php	/^    static $extensions = array ($/;"	v
extset_articles	nntp.class.php	/^        $this->extset_articles = array();$/;"	v
extset_data	spots_functions.php	/^        $extset_data = array();$/;"	v
extset_data	urdd_extsetdata.php	/^            $extset_data = $xml->read_extset_data();$/;"	v
extset_group	nntp.class.php	/^                $extset_group = group_by_name($this->db, $extset_group_name);$/;"	v
extset_group	nntp.class.php	/^            $extset_group = $spots_comments_group = $spots_reports_group = $spots_group = 0;$/;"	v
extset_group_name	nntp.class.php	/^            $extset_group_name = get_config($this->db, 'extset_group', '');$/;"	v
extset_headers	do_functions.php	/^        $extset_headers = $nzb->get_extset_headers();$/;"	v
extset_headers	nntp.class.php	/^        $this->extset_headers = array();$/;"	v
extset_headers	nntp.class.php	/^    private $extset_headers;$/;"	v
extset_uudecode	urdd_extsetdata.php	/^function extset_uudecode(array $art)$/;"	f
extset_version	urdd_extsetdata.php	/^    $extset_version = urd_version::get_extset_version();$/;"	v
f	download_functions.php	/^                $f = fopen($dir . $name . '.' . $partnumber. '.urd_uuencoded_part', 'w');$/;"	v
f1	nntp.class.php	/^            $f1 = gmp_strval($first);$/;"	v
f_time	download_functions.php	/^            $f_time = microtime(TRUE);$/;"	v
f_time	post_functions.php	/^                $f_time = microtime(TRUE);$/;"	v
factor	download_functions.php	/^        $factor = 1;$/;"	v
factor	download_functions.php	/^        $factor = 2;$/;"	v
factor	download_functions.php	/^        $factor = 3;$/;"	v
failed	download_functions.php	/^    $failed = $db->select_query($sql, array($dlid, DOWNLOAD_FAILED));$/;"	v
failed	post_functions.php	/^        $failed = $res[0]['cnt'];$/;"	v
failed_status	do_functions.php	/^    $failed_status = DOWNLOAD_FAILED;$/;"	v
failed_status	download_functions.php	/^    $failed_status   = DOWNLOAD_FAILED;$/;"	v
fd	show_functions.php	/^            $fd = $fds->addChild('group');$/;"	v
fdlist	urdd_connection.php	/^        $fdlist = array();$/;"	v
fds	show_functions.php	/^        $fds = $xml->addChild('rss_feeds');$/;"	v
feed_id	do_functions.php	/^        $feed_id = get_feedid_for_set($db, $setid);$/;"	v
feeds	queue_functions.php	/^    $feeds = get_active_feeds($db);$/;"	v
fetch_image_articles	do_functions.php	/^function fetch_image_articles(DatabaseConnection $db, URD_NNTP $nntp, array $articles)$/;"	f
fetch_mode	do_functions.php	/^        $fetch_mode = $db->set_fetch_mode(ADODB_FETCH_NUM);$/;"	v
file	do_functions.php	/^        $file = $pipes[0];$/;"	v
file	do_functions.php	/^        $file = fopen($nzb_file, 'w+');$/;"	v
file	yydecode.php	/^                    $file = fopen($directory . basename($name), 'c');$/;"	v
file	yydecode.php	/^                $file = fopen($directory . basename($name), 'c');$/;"	v
file	yydecode.php	/^        $file = $argv[1];$/;"	v
file	yydecode.php	/^    static $file = NULL;$/;"	v
file	yydecode.php	/^$file = '';$/;"	v
file_count	post_functions.php	/^        $file_count = $row['file_count'];$/;"	v
file_idx	post_functions.php	/^                $file_idx = $a_file['file_idx'];$/;"	v
file_list1	post_functions.php	/^        $file_list1 = create_yenc_files($db, $item, $postid, $file_list1, $userid, $dir, $name);$/;"	v
file_list1	post_functions.php	/^        $file_list1 = glob($dl_path1 . '*');$/;"	v
file_list1	post_functions.php	/^        $file_list1= create_par_files($db, $item, $postid, $recovery_par, $dl_path1, $userid, $dir, $name);$/;"	v
file_list1	post_functions.php	/^    $file_list1 = glob($dl_path1 . '*');$/;"	v
file_list2	post_functions.php	/^        $file_list2 = glob($dl_path3 . '*');$/;"	v
file_list_par	post_functions.php	/^    $file_list_par = glob($dl_path1 . '*.par2');$/;"	v
file_name	do_functions.php	/^    $file_name = get_download_name($db, $dlid);$/;"	v
file_name	do_functions.php	/^    $file_name = sanitise_download_name($db, $file_name);$/;"	v
filecache	do_functions.php	/^        $filecache = $preview = $tmp = TRUE; \/\/ only throw away preview files and temp files, leave nzb and post untouched; only remove those if specifically asked to.$/;"	v
filecache	do_functions.php	/^        $filecache = TRUE;$/;"	v
filecache_dir	do_functions.php	/^    $filecache_dir = $dlpath . FILELIST_CACHE_PATH;$/;"	v
filechunkend	download_type.class.php	/^                   $filechunkend = ($matches[1]) - 1; \/\/ yenc vars not 0-based$/;"	v
filechunksize	download_type.class.php	/^        $filechunksize = $filechunkend - $filechunkstart;$/;"	v
filechunksize	download_type.class.php	/^        $filechunksize = array_shift(self::$chunk_buffer);$/;"	v
filechunkstart	download_type.class.php	/^                    $filechunkstart = ($matches[1]) - 1; \/\/ yenc vars not 0-based$/;"	v
filechunkstart	download_type.class.php	/^        $filechunkstart = $filechunkend = $filechunksize = $filename = NULL;$/;"	v
filename	download_functions.php	/^                            $filename = $dir . $part->d_parameters['filename'];$/;"	v
filename	download_functions.php	/^                        $filename = $dir . $res->ctype_parameters['name'];$/;"	v
filename	download_functions.php	/^                $filename = my_escapeshellarg($filename);$/;"	v
filename	download_functions.php	/^            $filename = $f->files[0];$/;"	v
filename	download_functions.php	/^            $filename = my_escapeshellarg($f->files[0]);$/;"	v
filename	download_functions.php	/^            $filename = preg_replace("\/\\.\\d{3}$\/", '', $filename);$/;"	v
filename	download_type.class.php	/^                    $filename = $matches[1];$/;"	v
filename	download_type.class.php	/^        $filename      = array_shift(self::$chunk_buffer);$/;"	v
filename	post_functions.php	/^                $filename = $a_file['filename'];$/;"	v
filename	spots_functions.php	/^                $filename = $image_dir . $id . '.jpg';$/;"	v
filename	urdd_extsetdata.php	/^    $filename = find_unique_name($post_path, 'urd_extsetdata_', $id, '.gz', TRUE);$/;"	v
filenames	post_functions.php	/^    $filenames = array();$/;"	v
fileoffset	download_type.class.php	/^        $fileoffset    = array_shift(self::$chunk_buffer);$/;"	v
fileoffset	download_type.class.php	/^        $fileoffset = max(0, $filechunkstart - 50); \/\/ Try to read 50 chars before current block to catch headers over split articles$/;"	v
files	do_functions.php	/^            $files = get_par_rar_files($db, $to, $all_files); \/\/ re-read the file list, as uuencode creates new ones$/;"	v
files	do_functions.php	/^        $files = array();$/;"	v
files	do_functions.php	/^        $files = get_par_rar_files($db, $to, $all_files); \/\/ re-read the file list, as par2 may create new ones$/;"	v
files	do_functions.php	/^        $files = get_par_rar_files($db, $to, $all_files);$/;"	v
files	post_functions.php	/^            $files = get_files_from_db($db, $postid);$/;"	v
files	urdd_functions.php	/^    $files = glob ($dir . DIRECTORY_SEPARATOR . '*', GLOB_NOSORT);$/;"	v
files	urdd_functions.php	/^    $files = new pr_list($directory);$/;"	v
filesize_rar	post_functions.php	/^    $filesize_rar = $row['filesize_rar'];$/;"	v
find_free_slot	server_data.php	/^    public function find_free_slot(array $already_used_servers=array(), $posting)$/;"	f
find_free_slot	urdd_usenet_servers.php	/^    public function find_free_slot(array $already_used_servers=array(), $need_posting)$/;"	f
find_max_connections	urdd_usenet_servers.php	/^    public function find_max_connections(DatabaseConnection $db, $update_server, test_result_list &$test_results, $check_nntp_connections)$/;"	f
find_max_connections	urdd_usenet_servers.php	/^    public function find_max_connections(DatabaseConnection $db, test_result_list &$test_results, $check_nntp_connections)$/;"	f
find_preferred_server	server_data.php	/^    public function find_preferred_server()$/;"	f
find_server	urdd.php	/^function find_server(DatabaseConnection $db, server_data $servers, test_result_list $test_results)$/;"	f
find_server	urdd_usenet_servers.php	/^    public function find_server(DatabaseConnection $db, &$test_results, $dbid, $current, $total, $extended, $update_config, &$set_update_server)$/;"	f
find_servers	server_data.php	/^    public function find_servers(DatabaseConnection $db, test_result_list &$test_results, $dbid, $type, $update_config)$/;"	f
find_servers	urdd_usenet_servers.php	/^    public function find_servers(DatabaseConnection $db, test_result_list &$test_results, $dbid, $type, $update_config)$/;"	f
findservers	urdd_client.php	/^    public function findservers($options= '')$/;"	f
finished	post_functions.php	/^        $finished = $res[0]['cnt'];$/;"	v
finished_status	do_functions.php	/^    $finished_status = DOWNLOAD_FINISHED;$/;"	v
first	nntp.class.php	/^                $first = $art;$/;"	v
first	nntp.class.php	/^            $first = $data['first'];$/;"	v
first	nntp.class.php	/^            $first = $groupArr['last_record'] + 1;$/;"	v
first	nntp.class.php	/^            $first = gmp_init($data['first']);$/;"	v
first	nntp.class.php	/^        $first = $last = gmp_init(0);$/;"	v
first	queue.php	/^                        $first = $q;$/;"	v
first	queue.php	/^            $first = NULL;$/;"	v
first1	nntp.class.php	/^                    $first1 = $first;$/;"	v
first1	nntp.class.php	/^                    $first1 = $m2;$/;"	v
first2	nntp.class.php	/^                $first2 = gmp_max($first, $m3);$/;"	v
first_art	nntp.class.php	/^            $first_art = $parsed_msg[ $this->xover_number ];$/;"	v
first_batch_size	download_functions.php	/^                    $first_batch_size = 0;$/;"	v
first_batch_size	download_functions.php	/^    $first_batch_size = max(4, round(batch_size::DL_BATCH_SIZE \/ 4)); \/\/ the first batch is always small,  so we get a quick progress update$/;"	v
first_date	nntp.class.php	/^            $first_date = strtotime($parsed_msg[ $this->xover_date ]);$/;"	v
first_guess	nntp.class.php	/^        $first_guess =  (gmp_add(gmp_sub($last1, $first1), gmp_sub($last2, $first2)));$/;"	v
first_run	do_functions.php	/^        $first_run = $res[0]['first_run'];$/;"	v
first_timeout	urdd_connection.php	/^    public function first_timeout() \/\/ get the time that the first timeout will occur$/;"	f
fn	do_functions.php	/^        $fn = $zip_file;$/;"	v
fn	do_functions.php	/^    $fn = $nzb_file;$/;"	v
fn	urdd_command.php	/^            $fn = $this->do_function;$/;"	v
format_help	urdd_help.php	/^    public static function format_help(commands_list $commands_list)$/;"	f
found	queue.php	/^                $found = TRUE;$/;"	v
found	queue.php	/^        $found = FALSE;$/;"	v
found	urdd_usenet_servers.php	/^            $found = TRUE;$/;"	v
found	urdd_usenet_servers.php	/^        $found = $indexing = FALSE;$/;"	v
found_one	urdd_usenet_servers.php	/^                    $found_one = TRUE;$/;"	v
found_one	urdd_usenet_servers.php	/^        $found_one = FALSE;$/;"	v
fp	download_functions.php	/^            $fp = fopen ($dir . $filename, 'x');$/;"	v
fpr	download_functions.php	/^                $fpr = fopen ($dir . $file, 'r');$/;"	v
free_db_intensive_slots	server_data.php	/^        $this->free_db_intensive_slots = $this->max_db_intensive_threads = (int) $db_intensive_threads;$/;"	v
free_db_intensive_slots	server_data.php	/^        $this->free_db_intensive_slots = $this->max_db_intensive_threads;$/;"	v
free_db_intensive_slots	server_data.php	/^    private $free_db_intensive_slots; \/\/ available number of threads with db intensive set that can run$/;"	v
free_nntp_slots	server_data.php	/^        $this->free_nntp_slots = $this->max_total_nntp_threads = (int) $nntp_threads;$/;"	v
free_nntp_slots	server_data.php	/^        $this->free_nntp_slots = $this->max_total_nntp_threads;$/;"	v
free_nntp_slots	server_data.php	/^    private $free_nntp_slots; \/\/ available threads for treads on newgroups$/;"	v
free_total_slots	server_data.php	/^        $this->free_total_slots = $this->max_total_threads = (int) $total_threads;$/;"	v
free_total_slots	server_data.php	/^        $this->free_total_slots = $this->max_total_threads;$/;"	v
free_total_slots	server_data.php	/^    private $free_total_slots; \/\/ total number of threads that are available$/;"	v
freet	show_functions.php	/^        $freet = $s['free_threads'];$/;"	v
from	nntp.class.php	/^                $from		= $msg[$this->xover_from];$/;"	v
from	spots_functions.php	/^                    $from = $parts[1];$/;"	v
from	spots_functions.php	/^                    $from = trim($line[1]);$/;"	v
from	spots_functions.php	/^                    $from = utf8_encode($comment['from']);$/;"	v
from	spots_functions.php	/^        $from = ltrim(trim($from), '<');$/;"	v
from	urdd_functions.php	/^    $from = $filename;$/;"	v
from	urdd_functions.php	/^    $from = get_download_destination($db, $dlid);$/;"	v
fromname	group_functions.php	/^    public $fromname;$/;"	v
fs	do_functions.php	/^            $fs = count($nzb_file->asXML());$/;"	v
fs	do_functions.php	/^        $fs = strlen($nzb_file->asXML());$/;"	v
ft	schedule.php	/^                $ft = TRUE;$/;"	v
ft	schedule.php	/^        $ft = FALSE;$/;"	v
g	urdd_functions.php	/^        $g = $perm[2];$/;"	v
gensets	urdd_client.php	/^    public function gensets($msg_id)$/;"	f
get_action	schedule.php	/^    public function get_action()$/;"	f
get_action	thread.php	/^    function &get_action()$/;"	f
get_active_server	action.php	/^    public function get_active_server()$/;"	f
get_all_as_string	urdd_test.php	/^    public function get_all_as_string()$/;"	f
get_all_as_xml	urdd_test.php	/^    public function get_all_as_xml($xml)$/;"	f
get_all_failed_servers	action.php	/^    public function get_all_failed_servers()$/;"	f
get_all_pids	thread.php	/^    public function get_all_pids($userid)$/;"	f
get_arg	action.php	/^    public function get_arg($id)$/;"	f
get_arg_list	urdd_command.php	/^    public static function get_arg_list($line)$/;"	f
get_arg_str	urdd_command.php	/^    public function get_arg_str() { return $this->arg_str;}$/;"	f
get_args	action.php	/^    public function get_args()$/;"	f
get_article	nntp.class.php	/^    public function get_article($msg_id)$/;"	f
get_base	urdd_functions.php	/^function get_base($fn, $ext)$/;"	f
get_batchsize	download_functions.php	/^function get_batchsize($preview, $total_ready)$/;"	f
get_buffer_line	urdd_connection.php	/^    public function get_buffer_line()$/;"	f
get_code	urdd_command.php	/^    public function get_code() { return $this->code;}$/;"	f
get_command	action.php	/^    public function get_command()$/;"	f
get_command	urdd_command.php	/^    public function get_command($cmd)$/;"	f
get_command	urdd_command.php	/^    public function get_command() { return $this->command;}$/;"	f
get_command	urdd_command.php	/^function get_command($cmd)$/;"	f
get_command_code	action.php	/^    public function get_command_code()$/;"	f
get_command_code	urdd_command.php	/^    public function get_command_code($str)$/;"	f
get_command_code	urdd_command.php	/^function get_command_code($str)$/;"	f
get_command_db_intensive	urdd_command.php	/^    public function get_command_db_intensive($cmd)$/;"	f
get_command_db_intensive	urdd_command.php	/^function get_command_db_intensive($cmd)$/;"	f
get_command_nntp	urdd_command.php	/^    public function get_command_nntp($cmd)$/;"	f
get_command_nntp	urdd_command.php	/^function get_command_nntp($cmd)$/;"	f
get_command_posting	urdd_command.php	/^    public function get_command_posting($cmd)$/;"	f
get_command_posting	urdd_command.php	/^function get_command_posting($cmd)$/;"	f
get_command_primary_nntp	urdd_command.php	/^    public function get_command_primary_nntp($cmd)$/;"	f
get_command_primary_nntp	urdd_command.php	/^function get_command_primary_nntp($cmd)$/;"	f
get_commands	urdd_command.php	/^    public function get_commands()$/;"	f
get_conn	urdd_connection.php	/^    function &get_conn($sock)$/;"	f
get_content	nntp.class.php	/^    private function get_content($msg_id, $fn)$/;"	f
get_counter	action.php	/^    public function get_counter()$/;"	f
get_dbid	action.php	/^    public function get_dbid()$/;"	f
get_dlpath	action.php	/^    public function get_dlpath()$/;"	f
get_download_type	download_type.class.php	/^    public static function get_download_type(array &$article)$/;"	f
get_encryption	urdd_usenet_servers.php	/^    public function get_encryption()$/;"	f
get_exit_code	urdd.php	/^function get_exit_code($status, $pid)$/;"	f
get_extset_headers	nntp.class.php	/^    public function get_extset_headers()$/;"	f
get_extsetdata	nntp.class.php	/^        $get_extsetdata = $groupArr['parse_extsetdata'];$/;"	v
get_failed_servers	action.php	/^    public function get_failed_servers()$/;"	f
get_fdlist	urdd_connection.php	/^    public function get_fdlist() \/\/ get the list of fds for a call to select()$/;"	f
get_files_from_db	post_functions.php	/^function get_files_from_db(DatabaseConnection $db, $postid)$/;"	f
get_first_last_group	nntp.class.php	/^    public function get_first_last_group($groupid)$/;"	f
get_first_ready_job	schedule.php	/^    public function get_first_ready_job(DatabaseConnection $db)$/;"	f
get_first_ready_job	server_data.php	/^    public function get_first_ready_job(DatabaseConnection $db)$/;"	f
get_first_runnable_on_queue	server_data.php	/^    public function get_first_runnable_on_queue(DatabaseConnection $db)$/;"	f
get_first_runnable_preview	server_data.php	/^    protected function get_first_runnable_preview(DatabaseConnection $db, action $item)$/;"	f
get_first_timeout	schedule.php	/^    public function get_first_timeout()$/;"	f
get_first_timeout	server_data.php	/^    public function get_first_timeout()$/;"	f
get_free_slots	urdd_usenet_servers.php	/^    public function get_free_slots()$/;"	f
get_header	nntp.class.php	/^    public function get_header($msg_id)$/;"	f
get_headers	nntp.class.php	/^    private function get_headers(array $groupArr, $orig_start, $orig_stop, $dbid, $mindate, $total, $done, $update_last_updated, $total_max, $total_counter, $compressed_headers)$/;"	f
get_help_all	urdd_command.php	/^    public function get_help_all()$/;"	f
get_help_all	urdd_command.php	/^function get_help_all()$/;"	f
get_helpmessage	urdd_command.php	/^    public function get_helpmessage() { return $this->help_msg;}$/;"	f
get_hostname	urdd_usenet_servers.php	/^    public function get_hostname()$/;"	f
get_id	action.php	/^    public function get_id()$/;"	f
get_id	schedule.php	/^    public function get_id()$/;"	f
get_id	urdd_usenet_servers.php	/^    public function get_id()$/;"	f
get_ids_action	queue.php	/^    public function get_ids_action($action_id, $userid)$/;"	f
get_ids_all	queue.php	/^    public function get_ids_all($userid)$/;"	f
get_ids_cmd	queue.php	/^    public function get_ids_cmd($cmd, $arg, $userid)$/;"	f
get_jobs	schedule.php	/^    public function get_jobs()$/;"	f
get_jobs	server_data.php	/^    public function get_jobs()$/;"	f
get_last_cmd	urdd_connection.php	/^    public function get_last_cmd()$/;"	f
get_last_recv	urdd_connection.php	/^    public function get_last_recv()$/;"	f
get_listen_socket	urdd_sockets.php	/^    private function get_listen_socket($address, $port, $ipv6)$/;"	f
get_max_slots	urdd_usenet_servers.php	/^    public function get_max_slots()$/;"	f
get_max_threads	server_data.php	/^    public function get_max_threads($server_id)$/;"	f
get_max_threads	urdd_usenet_servers.php	/^    public function get_max_threads($server_id)$/;"	f
get_max_total_nntp_threads	server_data.php	/^    public function get_max_total_nntp_threads()$/;"	f
get_nntp_enabled	server_data.php	/^    public function get_nntp_enabled()$/;"	f
get_overview_format	nntp.class.php	/^    private function get_overview_format()$/;"	f
get_par_rar_files	urdd_functions.php	/^function get_par_rar_files(DatabaseConnection $db, $directory, &$all_files)$/;"	f
get_password	urdd_usenet_servers.php	/^    public function get_password ()$/;"	f
get_peer_address	urdd_connection.php	/^    public function get_peer_address()$/;"	f
get_peer_hostname	urdd_connection.php	/^    public function get_peer_hostname()$/;"	f
get_peer_port	urdd_connection.php	/^    public function get_peer_port()$/;"	f
get_pid	thread.php	/^    public function get_pid($action_id)$/;"	f
get_pid	thread.php	/^    public function get_pid()$/;"	f
get_pid_cmd	thread.php	/^    public function get_pid_cmd($cmd, $arg)$/;"	f
get_port	urdd_usenet_servers.php	/^    public function get_port()$/;"	f
get_posting	urdd_usenet_servers.php	/^    public function get_posting()$/;"	f
get_preferred_server	action.php	/^    public function get_preferred_server()$/;"	f
get_preview	action.php	/^    public function get_preview ()$/;"	f
get_preview_action	queue.php	/^    public function get_preview_action()$/;"	f
get_priority	action.php	/^    public function get_priority()$/;"	f
get_priority	server_data.php	/^    public function get_priority($server_id)$/;"	f
get_priority	urdd_usenet_servers.php	/^    public function get_priority($server_id)$/;"	f
get_priority	urdd_usenet_servers.php	/^    public function get_priority()$/;"	f
get_queue	queue.php	/^    public function get_queue()$/;"	f
get_queue	server_data.php	/^    public function get_queue()$/;"	f
get_queue_item	queue.php	/^    public function get_queue_item($id)$/;"	f
get_queue_time	action.php	/^    public function get_queue_time()$/;"	f
get_recurrence	schedule.php	/^    public function get_recurrence()$/;"	f
get_response	urdd_protocol.php	/^    public static function get_response($code)$/;"	f
get_rights	urdd_command.php	/^    public function get_rights() { return $this->rights;}$/;"	f
get_server_data	urdd.php	/^function get_server_data(DatabaseConnection $db)$/;"	f
get_servers	server_data.php	/^    public function get_servers()$/;"	f
get_servers	urdd_usenet_servers.php	/^    public function get_servers()$/;"	f
get_size_from_description	urdd_rss.php	/^    private static function get_size_from_description($description)$/;"	f
get_slot_data	server_data.php	/^    public function get_slot_data()$/;"	f
get_socket	urdd_connection.php	/^    public function get_socket()$/;"	f
get_spot_by_messageid	spots_functions.php	/^    public static function get_spot_by_messageid(DatabaseConnection $db, $message_id)$/;"	f
get_spot_nzb	do_functions.php	/^function get_spot_nzb(DatabaseConnection $db, $spotid)$/;"	f
get_start_time	action.php	/^    public function get_start_time()$/;"	f
get_status	thread.php	/^    public function get_status()$/;"	f
get_syntax	urdd_command.php	/^    public function get_syntax() { return $this->syntax;}$/;"	f
get_thread	thread.php	/^    function &get_thread($pid)$/;"	f
get_threads	server_data.php	/^    public function get_threads()$/;"	f
get_threads	thread.php	/^    public function get_threads()$/;"	f
get_time	schedule.php	/^    public function get_time()$/;"	f
get_timeout	urdd_functions.php	/^function get_timeout(action $item)$/;"	f
get_tried_servers	action.php	/^    public function get_tried_servers()$/;"	f
get_type	urdd_command.php	/^    public function get_type() { return $this->type;}$/;"	f
get_unfetched_spot_images_count	do_functions.php	/^function get_unfetched_spot_images_count(DatabaseConnection $db)$/;"	f
get_update_server	server_data.php	/^    public function get_update_server()$/;"	f
get_update_server	urdd_usenet_servers.php	/^    public function get_update_server()$/;"	f
get_userid	action.php	/^    public function get_userid()$/;"	f
get_username	urdd_connection.php	/^    public function get_username($sock)$/;"	f
get_username	urdd_connection.php	/^    public function get_username()$/;"	f
get_username	urdd_usenet_servers.php	/^    public function get_username()$/;"	f
get_username_password	urdd_client.php	/^function get_username_password(DatabaseConnection $db, $userid)$/;"	f
get_usernames	urdd_connection.php	/^    public function get_usernames()$/;"	f
getsetinfo	urdd_client.php	/^    public function getsetinfo()$/;"	f
ginfo	urdd.php	/^            $ginfo = posix_getgrnam($urdd_gid);$/;"	v
ginfo	urdd_options.php	/^                $ginfo = posix_getgrnam($config['urdd_gid']);$/;"	v
global_scripts	download_functions.php	/^    $global_scripts = get_config($db, 'allow_global_scripts', 0);$/;"	v
gr	nntp.class.php	/^                $gr = $group['group'];$/;"	v
gr	show_functions.php	/^            $gr = $ngs->addChild('group');$/;"	v
group	do_functions.php	/^        $group = '';$/;"	v
group	do_functions.php	/^        $group = (string) $section->groups->group[0];$/;"	v
group	do_functions.php	/^        $group = get_config($db, 'spots_group');$/;"	v
group	do_functions.php	/^        $group = group_name($db, $groupid);$/;"	v
group	post_functions.php	/^        $group = $row['groupid'];$/;"	v
group	spots_functions.php	/^        $group = get_config($db, 'spots_group');$/;"	v
group	urdd_client.php	/^    public function group($groupid)$/;"	f
group	urdd_extsetdata.php	/^        $group = get_config($db, 'extset_group');$/;"	v
group	urdd_extsetdata.php	/^    $group = get_config($db, 'extset_group');$/;"	v
groupArr	do_functions.php	/^        $groupArr = get_group_info($db, $args);$/;"	v
groupArr	nntp.class.php	/^        $groupArr = get_group_info($this->db, $groupid);$/;"	v
groupArr_comments	do_functions.php	/^        $groupArr_comments = get_group_info($db, $groupid);$/;"	v
groupArr_reports	do_functions.php	/^        $groupArr_reports = get_group_info($db, $groupid);$/;"	v
groupArr_spots	do_functions.php	/^        $groupArr_spots = get_group_info($db, $groupid);$/;"	v
groupID	group_functions.php	/^    public $groupID;$/;"	v
groupID	nntp.class.php	/^        $this->groupID = $groupid;$/;"	v
group_comments	spots_functions.php	/^        $group_comments = get_config($db, 'spots_comments_group');$/;"	v
group_id	do_functions.php	/^            $group_id = get_groupid_for_set($db, $setid);$/;"	v
group_id	spots_functions.php	/^            $group_id = group_by_name($db, $group_name);$/;"	v
group_name	do_functions.php	/^        $group_name = group_name($db, $groupid);$/;"	v
group_name	nntp.class.php	/^        $group_name = $groupArr['name'];$/;"	v
group_name	post_functions.php	/^        $group_name = group_name($db, $group);$/;"	v
group_name	spots_functions.php	/^            $group_name = get_config($db, 'spots_group');$/;"	v
group_reports	spots_functions.php	/^        $group_reports = get_config($db, 'spots_reports_group');$/;"	v
grouparray	nntp.class.php	/^        $this->grouparray = array();$/;"	v
grouparray	nntp.class.php	/^    private $grouparray;$/;"	v
groupid	do_functions.php	/^                    $groupid = $row['groupID'];$/;"	v
groupid	do_functions.php	/^            $groupid = $args[2];$/;"	v
groupid	do_functions.php	/^            $groupid = $res[0]['groupID'];$/;"	v
groupid	do_functions.php	/^            $groupid = 0;$/;"	v
groupid	do_functions.php	/^            $groupid = group_by_name($db, $group);$/;"	v
groupid	do_functions.php	/^        $groupid = $arg_list[0];$/;"	v
groupid	do_functions.php	/^        $groupid = $row['groupid'];$/;"	v
groupid	do_functions.php	/^        $groupid = group_by_name($db, $comments_group);$/;"	v
groupid	do_functions.php	/^        $groupid = group_by_name($db, $group);$/;"	v
groupid	do_functions.php	/^        $groupid = group_by_name($db, $report_group);$/;"	v
groupid	do_functions.php	/^        $groupid = group_by_name($db, get_config($db, 'ftd_group', 'alt.binaries.ftd'));$/;"	v
groupid	do_functions.php	/^    $groupid = $args;$/;"	v
groupid	do_functions.php	/^    $groupid = $groupArr['ID'];$/;"	v
groupid	do_functions.php	/^    $groupid = 0;$/;"	v
groupid	download_functions.php	/^                $groupid = $article['groupID'];$/;"	v
groupid	download_functions.php	/^    $groupid = 0;$/;"	v
groupid	nntp.class.php	/^        $groupid = $groupArr['ID'];$/;"	v
groupid	nntp.class.php	/^    private $groupid;          \/\/ used to temporarily store the groupID across functions$/;"	v
groupid	spots_functions.php	/^        $groupid = group_by_name($db, $group);$/;"	v
groupid	urdd_extsetdata.php	/^        $groupid = group_by_name($db, $group);$/;"	v
groupid	urdd_extsetdata.php	/^    $groupid = group_by_name($db, $group);$/;"	v
groupid	urdd_functions.php	/^    $groupid = get_groupid_dlinfo($db, $dlid);$/;"	v
groupid1	group_functions.php	/^        $groupid1 = get_groupid_for_set($db, $setid1);$/;"	v
groupid2	group_functions.php	/^            $groupid2 = get_groupid_for_set($db, $setid2);$/;"	v
groupids	do_functions.php	/^    $groupids = array();$/;"	v
groupname	do_functions.php	/^    $groupname = $groupArr['name'];$/;"	v
groupname	group_functions.php	/^    $groupname = group_name($db, $groupID);$/;"	v
groups	nntp.class.php	/^                $groups = $this->nntp->get_groups($this, $this->pattern);$/;"	v
groups	nntp.class.php	/^            $groups = $this->nntp->get_groups($this, $this->pattern);$/;"	v
groups	queue_functions.php	/^    $groups = get_active_groups($db);$/;"	v
groups	urdd_usenet_servers.php	/^        static $groups = array ('alt.binaries.test', 'alt.binaries.boneless', 'alt.binaries.tv', 'alt.binaries.mp3', 'alt.binaries.linux');$/;"	v
gzip	do_functions.php	/^            $gzip = get_config($db, 'gzip_path');$/;"	v
gzip_pars	do_functions.php	/^            $gzip_pars = get_config($db, 'gzip_pars');$/;"	v
handle_crash	urdd.php	/^function handle_crash(DatabaseConnection $db, server_data &$servers, action $item, $rc)$/;"	f
handle_queue_item	urdd.php	/^function handle_queue_item(DatabaseConnection $db, action $item, $nntp_enabled)$/;"	f
has_equal	queue.php	/^    public function has_equal(action $a)$/;"	f
has_equal	schedule.php	/^    public function has_equal(action $action)$/;"	f
has_equal	server_data.php	/^    public function has_equal(action $a)$/;"	f
has_equal	thread.php	/^    public function has_equal(action $action)$/;"	f
has_equal_queue	server_data.php	/^    public function has_equal_queue(action $a)$/;"	f
has_equal_thread	server_data.php	/^    public function has_equal_thread(action $a)$/;"	f
has_free_slot	urdd_usenet_servers.php	/^    public function has_free_slot($server_id)$/;"	f
has_free_slot	urdd_usenet_servers.php	/^    public function has_free_slot($update_server = FALSE)$/;"	f
has_nntp_task	server_data.php	/^    public function has_nntp_task()$/;"	f
has_thread	thread.php	/^    public function has_thread($pid)$/;"	f
hash_pw	urdd_connection.php	/^                    $hash_pw = hash('sha256', $salt . $password . $salt);$/;"	v
hash_pw	urdd_connection.php	/^                    $hash_pw = substr($password, 5);$/;"	v
hdr	spots_functions.php	/^            $hdr = explode(':', $line, 2);$/;"	v
head	download_functions.php	/^                $head = $nzb->get_header($msg_id);$/;"	v
header	do_functions.php	/^        $header = array($/;"	v
header	do_functions.php	/^        $header = implode("\\r\\n", $header) . "\\r\\n\\r\\n";$/;"	v
header	post_functions.php	/^                $header = $header_template;$/;"	v
header	post_functions.php	/^                $header = implode("\\r\\n", $header) . "\\r\\n\\r\\n";$/;"	v
header	spots_functions.php	/^                    $header = $nzb->get_header($msg_id);$/;"	v
header	spots_functions.php	/^        $header = array();$/;"	v
header_template	post_functions.php	/^        $header_template = array($/;"	v
headers_count	nntp.class.php	/^                $headers_count = $this->estimate_header_count($first1, $last1, $first2, $last2, $total_max, $expire);$/;"	v
headers_count	nntp.class.php	/^                $headers_count = gmp_init(0);$/;"	v
help_intro	urdd_help.php	/^    private static $help_intro =$/;"	v
help_message	urdd_command.php	/^        $help_message = urd_help::do_help($arg_list, $response);$/;"	v
help_message	urdd_help.php	/^                    $help_message = $syntax . "\\n\\n" . $msg . "\\n";$/;"	v
help_message	urdd_help.php	/^                    $help_message = '';$/;"	v
help_message	urdd_help.php	/^                $help_message = get_help_all();$/;"	v
help_message	urdd_help.php	/^            $help_message = self::format_help($commands_list);$/;"	v
help_message	urdd_options.php	/^                    $help_message = urd_help::format_help($commands_list);$/;"	v
help_msg	urdd_command.php	/^        $this->help_msg = $help_message;$/;"	v
help_msg	urdd_command.php	/^    private $help_msg; \/\/ text string description of the command$/;"	v
help_outro	urdd_help.php	/^    private static $help_outro =$/;"	v
help_text	urdd_help.php	/^    private static $help_text = array ($/;"	v
hm	urdd_help.php	/^        $hm = '';$/;"	v
hostname	show_functions.php	/^        $hostname = $s['hostname'];$/;"	v
hostname	urdd_client.php	/^        $this->hostname = $hostname;$/;"	v
hostname	urdd_client.php	/^    private $hostname;$/;"	v
hostname	urdd_usenet_servers.php	/^            $this->hostname = $hostname;$/;"	v
hostname	urdd_usenet_servers.php	/^        $hostname = $this->hostname;$/;"	v
hostname	urdd_usenet_servers.php	/^        $this->hostname = $hostname;$/;"	v
hostname	urdd_usenet_servers.php	/^    private $hostname; \/\/ string$/;"	v
hrs	show_functions.php	/^    $hrs = ($uptime \/ 3600) % 24;$/;"	v
hup_handler	urdd_error.php	/^function hup_handler($signo=0)$/;"	f
id	action.php	/^        $this->id = ++self::$lastid;$/;"	v
id	action.php	/^    private $id; \/\/ the internal id of the action, should be incrementing$/;"	v
id	do_functions.php	/^                $id = $arg_list[1];$/;"	v
id	do_functions.php	/^                $id = $row['id'];$/;"	v
id	do_functions.php	/^            $id = $arg_list[0];$/;"	v
id	do_functions.php	/^        $id = $arg_list[0];$/;"	v
id	do_functions.php	/^        $id = $arg_list[2];$/;"	v
id	do_functions.php	/^    $id = $arg_list[0];$/;"	v
id	do_functions.php	/^    $id = add_download($db, $userid, 0, 0, 0, 0, $status, '', download_types::NZB, TRUE, $download_par_files);$/;"	v
id	download_functions.php	/^    $id = $db->insert_query('downloadinfo',$/;"	v
id	download_functions.php	/^    $id = add_download($db, $userid, $unpar, $unrar, $subdl, $delete_files, $status, '', $preview ? download_types::PREVIEW : download_types::NORMAL, TRUE, $download_par_files);$/;"	v
id	post_functions.php	/^    $id = 'post_' . mt_rand(1000, 9999);$/;"	v
id	queue.php	/^            $id = $item->get_args();$/;"	v
id	schedule.php	/^            $id = $j->get_id();$/;"	v
id	schedule.php	/^            $id = $this->jobs[$k]->get_id();$/;"	v
id	schedule.php	/^            $id = $this->jobs[$kk]->get_id();$/;"	v
id	schedule.php	/^        $id = add_schedule($db, $cmd, $stime, $repeat, $userid);$/;"	v
id	server_data.php	/^            $id = $sched['id'];$/;"	v
id	server_data.php	/^            $id = $this->servers->get_update_server();$/;"	v
id	show_functions.php	/^        $id = $row['ID'];$/;"	v
id	show_functions.php	/^        $id = $row['id'];$/;"	v
id	show_functions.php	/^        $id = $s['id'];$/;"	v
id	spots_functions.php	/^                    $id = $row['id'];$/;"	v
id	spots_functions.php	/^                $id = $row['id'];$/;"	v
id	urdd_extsetdata.php	/^    $id = 'post_' . md5(php_uname() . date('c u'). mt_rand(10000, 99999));$/;"	v
id	urdd_rss.php	/^                $id = self::check_link($db, $rss_id, $link);$/;"	v
id	urdd_usenet_servers.php	/^            $id = $srv->get_id();$/;"	v
id	urdd_usenet_servers.php	/^        $id = $server->get_id();$/;"	v
id	urdd_usenet_servers.php	/^        $id = $server_id;$/;"	v
id	urdd_usenet_servers.php	/^        $id = (int) $server_id;$/;"	v
id	urdd_usenet_servers.php	/^        $this->id = (int) $id;$/;"	v
id	urdd_usenet_servers.php	/^    private $id; \/\/id$/;"	v
id_str	do_functions.php	/^    $id_str = "[{$item->get_id()}] ";$/;"	v
id_str	download_functions.php	/^        $id_str = "[$item_id] ";$/;"	v
id_str	download_functions.php	/^        $id_str = '';$/;"	v
id_str	post_functions.php	/^    $id_str = "[{$item->get_id()}] ";$/;"	v
id_str	queue_functions.php	/^    $id_str = '';$/;"	v
ids	do_functions.php	/^            $ids = '';$/;"	v
ids	do_functions.php	/^            $ids = rtrim($ids, ',');$/;"	v
ids	do_functions.php	/^            $ids = trim($ids, ',');$/;"	v
ids	post_functions.php	/^    $ids = '';$/;"	v
ids	post_functions.php	/^    $ids = rtrim($ids, ',');$/;"	v
ids	queue_functions.php	/^        $ids = get_active_feeds($db);$/;"	v
ids	queue_functions.php	/^        $ids = get_active_groups($db);$/;"	v
ids	spots_functions.php	/^                $ids = array_map('pathinfo', $a, array_fill(0, $cnt, PATHINFO_FILENAME));$/;"	v
ids	spots_functions.php	/^                $ids = trim($ids, ', ');$/;"	v
ids	spots_functions.php	/^            $ids = '';$/;"	v
ids	spots_functions.php	/^            $ids = array();$/;"	v
ids	spots_functions.php	/^            $ids = rtrim($ids, ',');$/;"	v
image_cache_dir	do_functions.php	/^        $image_cache_dir = get_dlpath($db) . IMAGE_CACHE_PATH;$/;"	v
image_count	do_functions.php	/^        $image_count = 0;$/;"	v
image_data	do_functions.php	/^                $image_data = fetch_image_articles($db, $nntp, $articles['segment']);$/;"	v
image_dir	spots_functions.php	/^        $image_dir = get_dlpath($db) . IMAGE_CACHE_PATH;$/;"	v
imdb_link	spots_functions.php	/^                $imdb_link = $link;$/;"	v
imdb_link	spots_functions.php	/^        $imdb_link = $moviemeter_link = $default_link = '';$/;"	v
inc_counter	action.php	/^    public function inc_counter()$/;"	f
inc_free_slots	urdd_usenet_servers.php	/^    public function inc_free_slots($server_id)$/;"	f
inc_max_slots	urdd_usenet_servers.php	/^    public function inc_max_slots()$/;"	f
indexing	urdd_usenet_servers.php	/^                            $indexing = TRUE;$/;"	v
indexing	urdd_usenet_servers.php	/^                    $indexing = FALSE;$/;"	v
indexing	urdd_usenet_servers.php	/^                    $indexing = TRUE;$/;"	v
input_arr	urdd_functions.php	/^    $input_arr = array();$/;"	v
input_file	yydecode.php	/^    $input_file = fopen($file, 'r');$/;"	v
input_file	yydecode.php	/^    $input_file = fopen('php:\/\/stdin', 'r');$/;"	v
inputarr	spots_functions.php	/^        $inputarr = array($expire);$/;"	v
insert	nntp.class.php	/^    private $insert;$/;"	v
insert_rss_set	urdd_rss.php	/^    public function insert_rss_set(DatabaseConnection $db, $rss_id, $link, $title, $timestamp, $description, $summary)$/;"	f
is_child	urdd.php	/^        $is_child = TRUE; \/\/ for overriding the shutdown function$/;"	v
is_child	urdd.php	/^$is_child = FALSE; \/\/ this is the main start up, so we are always the parent$/;"	v
is_commented	urdd_command.php	/^    public function is_commented($str)$/;"	f
is_connected	nntp.class.php	/^    public function is_connected()$/;"	f
is_connected	urdd_client.php	/^    public function is_connected()$/;"	f
is_empty	queue.php	/^    public function is_empty()$/;"	f
is_enabled	urdd_command.php	/^    public function is_enabled()$/;"	f
is_enabled	urdd_usenet_servers.php	/^    public function is_enabled()$/;"	f
is_enc	download_functions.php	/^                    $is_enc = download_type::check_for_encrypted_rar($art, $dir);$/;"	v
is_equal	action.php	/^    public function is_equal($cmd, $args)$/;"	f
is_nfo_file	group_functions.php	/^            $is_nfo_file = (stripos($subject, '.nfo') !== FALSE && $size < (50 * 1024)); \/\/ 50K seems large for a .nfo file...$/;"	v
is_paused	action.php	/^    public function is_paused()$/;"	f
is_subscribed	do_functions.php	/^            $is_subscribed = feed_subscribed($db, $id);$/;"	v
is_subscribed	do_functions.php	/^            $is_subscribed = group_subscribed($db, $id);$/;"	v
is_subscribed	group_functions.php	/^    $is_subscribed = group_subscribed($db, $groupid);$/;"	v
isadmin	do_functions.php	/^    $isadmin = (urd_user_rights::is_admin($db, $userid) || ($do_kill === TRUE));$/;"	v
isadmin	do_functions.php	/^    $isadmin = urd_user_rights::is_admin($db, $userid);$/;"	v
isadmin	urdd_command.php	/^                $isadmin = TRUE;$/;"	v
isadmin	urdd_command.php	/^        $isadmin = FALSE;$/;"	v
item	do_functions.php	/^    $item = new action($cmd, $arguments, $userid, FALSE);$/;"	v
item	do_functions.php	/^    $item = new action(urdd_protocol::COMMAND_MAKE_NZB, $id, $userid, TRUE);$/;"	v
item	download_functions.php	/^        $item = new action(urdd_protocol::COMMAND_DOWNLOAD, $id, $userid, FALSE);$/;"	v
item	download_functions.php	/^    $item = new action(urdd_protocol::COMMAND_DOWNLOAD, $id, $userid, TRUE);$/;"	v
item	post_functions.php	/^        $item = new action(urdd_protocol::COMMAND_POST, $id, $userid, FALSE);$/;"	v
item	post_functions.php	/^        $item = new action(urdd_protocol::COMMAND_START_POST, $id, $userid, FALSE);$/;"	v
item	queue.php	/^            $item = $this->qq[$k];$/;"	v
item	queue.php	/^        $item = $this->qq[$kk];$/;"	v
item	queue_functions.php	/^            $item = new action($cmd, $arr, $userid);$/;"	v
item	queue_functions.php	/^            $item = new action(urdd_protocol::COMMAND_GENSETS, $arr, $userid);$/;"	v
item	queue_functions.php	/^            $item = new action(urdd_protocol::COMMAND_UPDATE, $arr, $userid);$/;"	v
item	queue_functions.php	/^            $item = new action(urdd_protocol::COMMAND_UPDATE_RSS, $arr, $userid);$/;"	v
item	queue_functions.php	/^        $item = new action($cmd, $arg_list[0],  $userid);$/;"	v
item	queue_functions.php	/^        $item = new action($cmd, $arg_list[0], $userid);$/;"	v
item	queue_functions.php	/^        $item = new action($command, $arg, $userid, $paused);$/;"	v
item	queue_functions.php	/^        $item = new action(urdd_protocol::COMMAND_ADDDATA, implode (' ', $arg_list), $userid);$/;"	v
item	queue_functions.php	/^        $item = new action(urdd_protocol::COMMAND_ADDSPOTDATA, implode (' ', $arg_list), $userid);$/;"	v
item	queue_functions.php	/^        $item = new action(urdd_protocol::COMMAND_FINDSERVERS, $arg, $userid);$/;"	v
item	queue_functions.php	/^        $item = new action(urdd_protocol::COMMAND_GENSETS, $arg_list[0], $userid);$/;"	v
item	queue_functions.php	/^        $item = new action(urdd_protocol::COMMAND_PARSE_NZB, "$dlid '{$url}'", $userid);$/;"	v
item	queue_functions.php	/^    $item = new action (urdd_protocol::COMMAND_UNPAR_UNRAR, $id, $userid);$/;"	v
item	queue_functions.php	/^    $item = new action(urdd_protocol::COMMAND_GETBLACKLIST, '', $userid);$/;"	v
item	queue_functions.php	/^    $item = new action(urdd_protocol::COMMAND_GETNFO, '', $userid);$/;"	v
item	queue_functions.php	/^    $item = new action(urdd_protocol::COMMAND_GETWHITELIST, '', $userid);$/;"	v
item	queue_functions.php	/^    $item = new action(urdd_protocol::COMMAND_SENDSETINFO, '', $userid);$/;"	v
item	server_data.php	/^                    $item = $this->queue->top(TRUE, $not_these, $this->free_db_intensive_slots > 0 ? TRUE : FALSE); \/\/ get an nntp item from the queue or if non, found a nonnntp item$/;"	v
item	server_data.php	/^                    $item = $thread->get_action(); \/\/ delete from the list will be done by the reap function$/;"	v
item	server_data.php	/^                $item = $this->get_first_runnable_preview($db, $item);$/;"	v
item	server_data.php	/^                $item = $this->queue->top(FALSE, array(), $this->free_db_intensive_slots > 0 ? TRUE : FALSE );$/;"	v
item	server_data.php	/^                $item = $thread->get_action(); \/\/ delete from the list will be done by the reap function$/;"	v
item	server_data.php	/^                $item = $thread->get_action();$/;"	v
item	server_data.php	/^            $item = $this->queue->get_preview_action(); \/\/ see if there are any preview tasks queued$/;"	v
item	server_data.php	/^            $item = $this->queue->get_queue_item($qid);$/;"	v
item	server_data.php	/^            $item = new action ($cmd, $arg,  $userid);$/;"	v
item	server_data.php	/^        $item = $thread->get_action(); \/\/ delete from the list will be done by the reap function$/;"	v
item	thread.php	/^        $item = $thread->get_action();$/;"	v
item	urdd.php	/^    $item = $servers->get_first_runnable_on_queue($par_db);$/;"	v
item1	queue_functions.php	/^            $item1 = new action(urdd_protocol::COMMAND_UPDATE, $arg_list[0], $userid);$/;"	v
item1	queue_functions.php	/^            $item1 = new action(urdd_protocol::COMMAND_UPDATE_RSS, $arg_list[0], $userid);$/;"	v
item1	queue_functions.php	/^    $item1 = new action(urdd_protocol::COMMAND_EXPIRE_SPOTS, '', $userid);$/;"	v
item1	queue_functions.php	/^    $item1 = new action(urdd_protocol::COMMAND_PURGE_SPOTS, '', $userid);$/;"	v
item2	queue_functions.php	/^            $item2 = new action(urdd_protocol::COMMAND_GENSETS, $arg_list[0], $userid);$/;"	v
item2	queue_functions.php	/^            $item2 = new action(urdd_protocol::COMMAND_GENSETS, $arr, $userid);$/;"	v
item2	queue_functions.php	/^            $item2 = new action(urdd_protocol::COMMAND_UPDATE, $arr, $userid);$/;"	v
item2	queue_functions.php	/^        $item2 = new action(urdd_protocol::COMMAND_GENSETS, $arg_list[0], $userid);$/;"	v
item2	queue_functions.php	/^        $item2 = new action(urdd_protocol::COMMAND_PURGE_RSS, $arg_list[0], $userid);$/;"	v
item2	queue_functions.php	/^        $item2 = new action(urdd_protocol::COMMAND_UPDATE, $arg_list[0], $userid);$/;"	v
item2	queue_functions.php	/^    $item2 = new action(urdd_protocol::COMMAND_GETSPOT_COMMENTS, '', $userid);$/;"	v
item2	queue_functions.php	/^    $item2 = new action(urdd_protocol::COMMAND_GETSPOT_REPORTS, '', $userid);$/;"	v
item2	queue_functions.php	/^    $item2 = new action(urdd_protocol::COMMAND_PURGE_SPOTS, '', $userid);$/;"	v
item2	server_data.php	/^            $item2 = $t->get_action();$/;"	v
item3	queue_functions.php	/^            $item3 = $item2 = new action(urdd_protocol::COMMAND_PURGE_RSS, $arg_list[0],$userid);$/;"	v
item3	queue_functions.php	/^            $item3 = new action(urdd_protocol::COMMAND_EXPIRE, $arr, $userid);$/;"	v
item3	queue_functions.php	/^            $item3 = new action(urdd_protocol::COMMAND_PURGE, $arg_list[0], $userid);$/;"	v
item3	queue_functions.php	/^            $item3 = new action(urdd_protocol::COMMAND_PURGE, $arr, $userid);$/;"	v
item3	queue_functions.php	/^        $item3 = new action(urdd_protocol::COMMAND_EXPIRE_RSS, $arg_list[0], $userid);$/;"	v
item3	queue_functions.php	/^        $item3 = new action(urdd_protocol::COMMAND_PURGE, $arg_list[0], $userid);$/;"	v
item3	queue_functions.php	/^    $item3 = new action(urdd_protocol::COMMAND_GETSPOTS, '', $userid);$/;"	v
item3	queue_functions.php	/^    $item3 = new action(urdd_protocol::COMMAND_GETSPOT_IMAGES, '', $userid);$/;"	v
item4	queue_functions.php	/^            $item4 = new action(urdd_protocol::COMMAND_EXPIRE, $arg_list[0], $userid);$/;"	v
item4	queue_functions.php	/^            $item4 = new action(urdd_protocol::COMMAND_EXPIRE, $arr, $userid);$/;"	v
item4	queue_functions.php	/^            $item4 = new action(urdd_protocol::COMMAND_EXPIRE_RSS, $arg_list[0], $userid);$/;"	v
item4	queue_functions.php	/^            $item4 = new action(urdd_protocol::COMMAND_PURGE, $arr, $userid);$/;"	v
item4	queue_functions.php	/^        $item4 = new action(urdd_protocol::COMMAND_EXPIRE, $arg_list[0], $userid);$/;"	v
item4	queue_functions.php	/^    $item4 = new action(urdd_protocol::COMMAND_GETSPOT_COMMENTS, '', $userid);$/;"	v
item5	queue_functions.php	/^    $item5 = new action(urdd_protocol::COMMAND_GETSPOT_REPORTS, '', $userid);$/;"	v
item_unpause	queue_functions.php	/^                $item_unpause = new action (urdd_protocol::COMMAND_CONTINUE, get_command(urdd_protocol::COMMAND_DOWNLOAD) . " $dlid", $userid, TRUE);$/;"	v
item_unpause	server_data.php	/^                    $item_unpause = new action (urdd_protocol::COMMAND_CONTINUE, $new_id, $item->get_userid(), TRUE, $item->get_priority());$/;"	v
item_unpause	server_data.php	/^                $item_unpause = new action (urdd_protocol::COMMAND_CONTINUE, $new_id, $item->get_userid(), TRUE, $item->get_priority());$/;"	v
item_unpause	server_data.php	/^            $item_unpause = new action(urdd_protocol::COMMAND_CONTINUE, $item->get_id(), $item->get_userid(), TRUE, $item->get_priority());$/;"	v
item_unpause	server_data.php	/^        $item_unpause = new action(urdd_protocol::COMMAND_CONTINUE, $item->get_id(), $item->get_userid(), TRUE, $item->get_priority());$/;"	v
item_unpause	server_data.php	/^        $item_unpause = new action(urdd_protocol::COMMAND_SET, "SERVER ENABLE $server_id $priority", $userid, TRUE, DEFAULT_PRIORITY);$/;"	v
item_unpause	urdd_functions.php	/^        $item_unpause = new action (urdd_protocol::COMMAND_CONTINUE, "$command $args", $item->get_userid(), TRUE);$/;"	v
item_unpause	urdd_functions.php	/^    $item_unpause = new action (urdd_protocol::COMMAND_CONTINUE, "$command $args", $item->get_userid(), TRUE);$/;"	v
j	schedule.php	/^            $j = $this->jobs[$kk];$/;"	v
jb	show_functions.php	/^            $jb = $js->addChild('job');$/;"	v
job	queue_functions.php	/^                $job = new job($item_unpause, $start_time, NULL); \/\/try again in XX secs$/;"	v
job	schedule.php	/^class job$/;"	c
job	server_data.php	/^                    $job = new job($item_unpause, $now + get_timeout($item) * 60, NULL); \/\/try again in 60 secs$/;"	v
job	server_data.php	/^                $job = new job($item_unpause, $now + get_timeout($item) * 60, NULL); \/\/try again in 60 secs$/;"	v
job	server_data.php	/^            $job = new job($item_unpause, $now + get_timeout($item) * 60, NULL); \/\/try again in 60 secs$/;"	v
job	server_data.php	/^        $job = new job($item_unpause, $now + get_timeout($item) * 60, NULL); \/\/try again in 60 secs$/;"	v
job	urdd_functions.php	/^        $job = new job($item_unpause, time() + $offset, NULL); \/\/try again in XX secs$/;"	v
job	urdd_functions.php	/^    $job = new job($item_unpause, time() + $offset, NULL); \/\/try again in 30 secs$/;"	v
job_unpause	server_data.php	/^            $job_unpause = new job($item_unpause, time() + $timeout, 0);$/;"	v
jobs	schedule.php	/^        $jobs = array();$/;"	v
jobs	schedule.php	/^        $this->jobs = array();$/;"	v
jobs	schedule.php	/^    private $jobs;$/;"	v
jobs	show_functions.php	/^    $jobs = $servers->get_jobs();$/;"	v
js	show_functions.php	/^        $js = $xml->addChild('jobs');$/;"	v
k	urdd_connection.php	/^                $k = $akey;$/;"	v
k	urdd_connection.php	/^        $k = NULL;$/;"	v
keep_int	group_functions.php	/^        $keep_int = " AND \\"ID\\" NOT IN (SELECT \\"setID\\" FROM usersetinfo WHERE \\"type\\" = '$type' AND \\"statusint\\" = '$marking_on') ";$/;"	v
keep_int	group_functions.php	/^        $keep_int = " AND \\"binaryID\\" NOT IN (SELECT \\"binaryID\\" FROM usersetinfo JOIN binaries_$groupID AS bin ON bin.\\"setID\\" = usersetinfo.\\"setID\\" "$/;"	v
keep_int	group_functions.php	/^        $keep_int = " AND \\"binaryID\\" NOT IN (SELECT \\"binaryID\\" FROM usersetinfo JOIN binaries_$groupid AS bin ON bin.\\"setID\\" = usersetinfo.\\"setID\\" "$/;"	v
keep_int	group_functions.php	/^        $keep_int = " AND \\"setID\\" NOT IN (SELECT \\"setID\\" FROM usersetinfo WHERE \\"type\\" = '$type' AND \\"statusint\\" = '$marking_on') ";$/;"	v
keep_int	group_functions.php	/^    $keep_int = '';$/;"	v
keep_int	spots_functions.php	/^            $keep_int = " AND \\"spotid\\" NOT IN (SELECT \\"setID\\" FROM usersetinfo WHERE \\"type\\" = ? AND \\"statusint\\" = ?) ";$/;"	v
keep_int	urdd_rss.php	/^            $keep_int = " AND \\"setid\\" NOT IN ( SELECT \\"setID\\" FROM usersetinfo WHERE \\"type\\" =  '$type' AND \\"statusint\\" = '$marking_on') ";$/;"	v
keep_int	urdd_rss.php	/^        $keep_int = '';$/;"	v
keep_int_cfg	group_functions.php	/^    $keep_int_cfg = get_config($db, 'keep_interesting');$/;"	v
key	spots_functions.php	/^                    $key = trim($line[1]);$/;"	v
key	urdd_options.php	/^                    $key = $opt['1'];$/;"	v
key	urdd_options.php	/^                $key = '';$/;"	v
keys	queue.php	/^        $keys = array();$/;"	v
keys	urdd_connection.php	/^        $keys = array();$/;"	v
kill_handler	urdd_error.php	/^function kill_handler($signo=0)$/;"	f
kk	queue.php	/^                $kk = $k;$/;"	v
kk	queue.php	/^        $kk = NULL;$/;"	v
kk	queue.php	/^        $kk = array();$/;"	v
kk	schedule.php	/^                $kk = $k;$/;"	v
kk	schedule.php	/^        $kk = NULL;$/;"	v
kk	schedule.php	/^        $kk = array();$/;"	v
l	do_functions.php	/^    $l = count($setids);$/;"	v
l	download_functions.php	/^        $l = trim($l);$/;"	v
l	group_functions.php	/^        $l = '';$/;"	v
l	group_functions.php	/^        $l = rtrim($l, ', ');$/;"	v
l	urdd_functions.php	/^    $l = strlen($encoded);$/;"	v
l	yydecode.php	/^                $l = (int) strlen($line);$/;"	v
l1	nntp.class.php	/^            $l1 = gmp_strval($last);$/;"	v
lang	download_functions.php	/^    $lang = get_pref($db, 'subs_lang', $userid, '');$/;"	v
langs	download_functions.php	/^    $langs = explode(',', $lang);$/;"	v
last	nntp.class.php	/^            $last = $data['last'];$/;"	v
last	nntp.class.php	/^            $last = gmp_add(gmp_init($data['last']), 1);$/;"	v
last	nntp.class.php	/^        $last = $data['last'];$/;"	v
last1	nntp.class.php	/^                    $last1 = $m1;$/;"	v
last1	nntp.class.php	/^                    $last1 = gmp_min($m1, $last);$/;"	v
last1	nntp.class.php	/^            $last1 = $first1 = $last2 = $first2 = gmp_init(0);$/;"	v
last2	nntp.class.php	/^                $last2 = $last;$/;"	v
last_checked	nzb_poller.class.php	/^    private static $last_checked = 0;$/;"	v
last_idx	queue_functions.php	/^                $last_idx = 1;$/;"	v
last_idx	queue_functions.php	/^    $last_idx = 0;$/;"	v
last_line	urdd_connection.php	/^        $this->last_line = $line;$/;"	v
last_line	urdd_connection.php	/^        $this->last_line = '';$/;"	v
last_line	urdd_connection.php	/^    private $last_line;$/;"	v
last_recv	urdd_connection.php	/^        $this->last_recv = time();$/;"	v
last_recv	urdd_connection.php	/^    private $last_recv; \/\/ last time we received something; use time()$/;"	v
lastid	action.php	/^    private static $lastid = 0;$/;"	v
lastupdated	show_functions.php	/^        $lastupdated = $row['last_updated'];$/;"	v
like	show_functions.php	/^    $like = ($subscribed) ? ' AND "active"=\\'' . NG_SUBSCRIBED . "'" : '';$/;"	v
limit	do_functions.php	/^    $limit = 10;$/;"	v
limit	spots_functions.php	/^        $limit = 100;$/;"	v
line	spots_functions.php	/^            $line = explode(':', $line, 2);$/;"	v
line	urdd.php	/^        $line = "{$action->get_command()} {$action->get_args()}";$/;"	v
line	urdd_client.php	/^            $line = $this->sock->read_line();$/;"	v
line	urdd_command.php	/^        $line = $conn->get_last_cmd();$/;"	v
line	urdd_sockets.php	/^                    $line = $conn->get_buffer_line();$/;"	v
line	urdd_sockets.php	/^                $line = @socket_read($s, self::MAX_BUFF_SIZE, PHP_BINARY_READ);$/;"	v
line	yydecode.php	/^    $line = rtrim(fgets($input_file), "\\n\\r");$/;"	v
lines	urdd_connection.php	/^        $lines = preg_split("\/[\\n\\r]+\/", $this->buffer, 2);$/;"	v
link	spots_functions.php	/^            $link = $default_link;$/;"	v
link	spots_functions.php	/^            $link = $imdb_link;$/;"	v
link	spots_functions.php	/^            $link = $moviemeter_link;$/;"	v
link	spots_functions.php	/^        $link = '';$/;"	v
link	urdd_rss.php	/^            $link = $item['link'];$/;"	v
link_data	spots_functions.php	/^        $link_data = self::parse_links($spot_data['body']);$/;"	v
links	spots_functions.php	/^        $links = array();$/;"	v
listen_sock	urdd.php	/^    $listen_sock = new urdd_sockets();$/;"	v
listen_sock	urdd_sockets.php	/^            $this->listen_sock = $sockets;$/;"	v
listen_sock	urdd_sockets.php	/^        $this->listen_sock= array();$/;"	v
listen_sock	urdd_sockets.php	/^    private $listen_sock;$/;"	v
listen_socket	urdd_sockets.php	/^    public function listen_socket($address, $address6, $port)$/;"	f
load	show_functions.php	/^    $load = sys_getloadavg();$/;"	v
load_extset_data	urdd_extsetdata.php	/^function load_extset_data(DatabaseConnection $db, URD_NNTP &$nzb, array $extset_headers)$/;"	f
load_server	server_data.php	/^    public function load_server(DatabaseConnection$db, $id)$/;"	f
load_servers	server_data.php	/^    public function load_servers(DatabaseConnection $db, test_result_list &$test_results)$/;"	f
load_spot_comments	spots_functions.php	/^    public static function load_spot_comments(DatabaseConnection $db, URD_NNTP $nzb, action $item, $expire)$/;"	f
load_spot_reports	spots_functions.php	/^    static function load_spot_reports(DatabaseConnection $db, URD_NNTP $nzb, action $item, $expire)$/;"	f
load_spots	spots_functions.php	/^    static function load_spots(DatabaseConnection $db, URD_NNTP $nzb, action $item)$/;"	f
load_whitelist	urdd_functions.php	/^function load_whitelist(DatabaseConnection $db, $source = NULL)$/;"	f
lock_array	download_functions.php	/^    $lock_array = array('downloadarticles' => 'write'); \/\/ for the article table$/;"	v
lock_array	post_functions.php	/^    static $lock_array = array('post_files' => 'write'); \/\/ for the article table$/;"	v
log_file	download_functions.php	/^    $log_file = my_escapeshellarg($dir . "$type.log");$/;"	v
log_file	download_functions.php	/^    $log_file = my_escapeshellarg($dir . $sublog);$/;"	v
log_file	download_functions.php	/^    $log_file = my_escapeshellarg($dir . 'par2.log');$/;"	v
log_file	download_functions.php	/^    $log_file = my_escapeshellarg($dir . 'sfv.log');$/;"	v
log_level	urdd_config.php	/^    $log_level = get_config($db, 'log_level', LOG_INFO);$/;"	v
longopt	urdd_options.php	/^    private static $longopt = array($/;"	v
m1	nntp.class.php	/^            $m1 = gmp_init($groupArr['first_record']);$/;"	v
m2	nntp.class.php	/^            $m2 = gmp_init($groupArr['mid_record']);$/;"	v
m3	nntp.class.php	/^            $m3 = gmp_init($groupArr['last_record']);$/;"	v
make_nzb	urdd_client.php	/^    public function make_nzb()$/;"	f
make_spot_id	spots_functions.php	/^    private static function make_spot_id($spotid, $message_id, $poster)$/;"	f
marking_on	group_functions.php	/^    $marking_on = sets_marking::MARKING_ON;$/;"	v
marking_on	spots_functions.php	/^        $marking_on = sets_marking::MARKING_ON;$/;"	v
marking_on	urdd_rss.php	/^        $marking_on = sets_marking::MARKING_ON;$/;"	v
match_command	urdd_command.php	/^    public function match_command($str) { return strtoupper($str) === $this->command; }$/;"	f
match_command	urdd_command.php	/^    public function match_command($str)$/;"	f
match_command	urdd_command.php	/^function match_command($str)$/;"	f
match_mime_type	urdd_functions.php	/^function match_mime_type(DatabaseConnection $db, $file)$/;"	f
match_userid	action.php	/^    public function match_userid($userid)$/;"	f
maxMssgs	nntp.class.php	/^        $this->maxMssgs = get_config($db, 'maxheaders'); \/\/fetch this ammount of messages at the time$/;"	v
maxMssgs	nntp.class.php	/^    private $maxMssgs;         \/\/ fetch this amount of messages at the time$/;"	v
max_cat_count	spots_functions.php	/^        $max_cat_count = get_config($db, 'spots_max_categories', 0);$/;"	v
max_conn	urdd_usenet_servers.php	/^        $max_conn = max(1, min($top, self::NNTP_ABS_MAX));$/;"	v
max_db_intensive_threads	server_data.php	/^    private $max_db_intensive_threads; \/\/ max number of threads with db intensive set that can run$/;"	v
max_dl_nntp	download_functions.php	/^            $max_dl_nntp = get_config($db, 'nntp_maxdlthreads');$/;"	v
max_exceeded	action.php	/^    public function max_exceeded($count)$/;"	f
max_size	queue.php	/^        $this->max_size = (int) $max_size;$/;"	v
max_size	queue.php	/^    private $max_size;$/;"	v
max_threads	urdd_usenet_servers.php	/^            $this->max_threads = $i;$/;"	v
max_threads	urdd_usenet_servers.php	/^            $this->max_threads = $max_conn;$/;"	v
max_threads	urdd_usenet_servers.php	/^            $this->max_threads = (int) $maxt;$/;"	v
max_threads	urdd_usenet_servers.php	/^        $this->max_threads = (int) $maxt;$/;"	v
max_threads	urdd_usenet_servers.php	/^    private $max_threads; \/\/int$/;"	v
max_total_nntp_threads	server_data.php	/^    private $max_total_nntp_threads; \/\/ total number of threads that can run on all newsgroups together$/;"	v
max_total_threads	server_data.php	/^    private $max_total_threads; \/\/ total number of threads that can run all together (always at least one more than the nntp threads, so we can do unrar and stuff$/;"	v
maxsetsize	do_functions.php	/^            $maxsetsize = (isset($arg_list[4]) && is_numeric($arg_list[4])) ? $arg_list[4] : 0;$/;"	v
maxsetsize	do_functions.php	/^    $maxsetsize = $groupArr['maxsetsize'];$/;"	v
maxt	show_functions.php	/^        $maxt = $s['max_threads'];$/;"	v
memory_size	urdd_config.php	/^    $memory_size = unformat_size(ini_get('memory_limit'));$/;"	v
merge_binary_sets	group_functions.php	/^function merge_binary_sets(DatabaseConnection $db, $group_id)$/;"	f
merge_sets	group_functions.php	/^function merge_sets(DatabaseConnection $db, $setid1, array $setids)$/;"	f
merge_sets	urdd_client.php	/^    public function merge_sets($setid1, array $setid_list)$/;"	f
message	do_functions.php	/^        $message = $row['message'];$/;"	v
message	urdd.php	/^        $message = $e->getmessage();$/;"	v
message	urdd_extsetdata.php	/^    $message = $uu_str;$/;"	v
message	urdd_test.php	/^        $this->message = $message;$/;"	v
message	urdd_test.php	/^    public $message;$/;"	v
messageID	do_functions.php	/^            $messageID = (string) $segment;$/;"	v
messageID	do_functions.php	/^        $messageID = $arr2['messageID'];$/;"	v
messageID	do_functions.php	/^        $messageID = str_replace('&', '&amp;', $messageID);$/;"	v
messageID	group_functions.php	/^    public $messageID;$/;"	v
messageID	nntp.class.php	/^            $messageID = $msg[$this->xover_messageid];$/;"	v
messageID	nntp.class.php	/^            $messageID = trim($messageID, "<> \\n\\t\\r");$/;"	v
mime	download_functions.php	/^                $mime = new Mail_mimeDecode($head, $art);$/;"	v
mime_settings	download_functions.php	/^                $mime_settings = array('include_bodies'=>TRUE, 'decode_bodies'=>TRUE, 'decode_headers'=>TRUE);$/;"	v
mime_settings	download_functions.php	/^    $mime_settings = array('include_bodies' => TRUE, 'decode_bodies' => TRUE, 'decode_headers' => TRUE);$/;"	v
mime_types	urdd_functions.php	/^    static $mime_types = array ($/;"	v
min	show_functions.php	/^    $min = ($uptime \/ 60) % 60;$/;"	v
mindate	nntp.class.php	/^            $mindate = 0;$/;"	v
mindate	nntp.class.php	/^            $mindate = time() - ($expire * 24 * 3600);$/;"	v
minsetsize	do_functions.php	/^            $minsetsize = (isset($arg_list[3]) && is_numeric($arg_list[3])) ? $arg_list[3] : 0;$/;"	v
minsetsize	do_functions.php	/^    $minsetsize = $groupArr['minsetsize'];$/;"	v
mod	show_functions.php	/^            $mod = $xml->modules->addChild('module');$/;"	v
mods	show_functions.php	/^    $mods = array();$/;"	v
module	do_functions.php	/^                $module = $arg_list[1];$/;"	v
modules	do_functions.php	/^                $modules = urd_modules::get_urd_module_config(get_config($db, 'modules'));$/;"	v
modules	show_functions.php	/^    $modules = urd_modules::get_urd_module_config(get_config($db, 'modules'));$/;"	v
modules	urdd_command.php	/^$modules = urd_modules::get_urd_module_config(0);$/;"	v
move	queue.php	/^    public function move(DatabaseConnection $db, $cmd, $arg, $userid, $direction)$/;"	f
move	server_data.php	/^    public function move(DatabaseConnection $db, $cmd, $arg, $userid, $direction)$/;"	f
move_cmd	urdd_client.php	/^    public function move_cmd($direction, $command, $id)$/;"	f
move_down	queue.php	/^    public function move_down(DatabaseConnection $db, $cmd, $arg, $userid)$/;"	f
move_download_to_done	urdd_functions.php	/^function move_download_to_done(DatabaseConnection $db, action $item, $dlid, $userid, $type = 'DOWNLOAD')$/;"	f
move_file_to_nzb	urdd_functions.php	/^function move_file_to_nzb(DatabaseConnection $db, $dlid, $filename, $dlpath, $basename, $ext, $userid)$/;"	f
move_sub_files	download_functions.php	/^function move_sub_files($from, $to)$/;"	f
move_top	queue.php	/^    public function move_top(DatabaseConnection$db, $index, $userid)$/;"	f
move_top	server_data.php	/^    public function move_top(DatabaseConnection $db, $index, $userid)$/;"	f
move_up	queue.php	/^    public function move_up(DatabaseConnection $db, $cmd, $arg, $userid)$/;"	f
moviemeter_link	spots_functions.php	/^                $moviemeter_link = $link;$/;"	v
msg	do_functions.php	/^                $msg = array();$/;"	v
msg	do_functions.php	/^                $msg = implode("\\n", libxml_get_errors());$/;"	v
msg	do_functions.php	/^            $msg = implode("\\n", libxml_get_errors());$/;"	v
msg	do_functions.php	/^        $msg = 'used';$/;"	v
msg	do_functions.php	/^    $msg = 'available';$/;"	v
msg	nntp.class.php	/^                    $msg = $e->getMessage();$/;"	v
msg	nntp.class.php	/^            $msg = $this->nntp->disconnect();$/;"	v
msg	nntp.class.php	/^            $msg = explode("\\t", $msgtxt);$/;"	v
msg	nntp.class.php	/^        $msg = $this->nntp->get_fast_overview(gmp_strval($first), gmp_strval(gmp_add($first, 10)));$/;"	v
msg	urdd_command.php	/^        $msg = '';$/;"	v
msg	urdd_functions.php	/^            $msg = posix_strerror($ec);$/;"	v
msg	urdd_functions.php	/^        $msg = '';$/;"	v
msg	urdd_help.php	/^                    $msg = $c->get_helpmessage();$/;"	v
msg	urdd_options.php	/^                    $msg = urd_help::do_help(array($opt[1]), $dummy);$/;"	v
msg	urdd_sockets.php	/^                    $msg = sprintf(urdd_protocol::get_response(299), urd_version::get_version());$/;"	v
msg_count	nntp.class.php	/^                    $msg_count = 0;$/;"	v
msg_count	nntp.class.php	/^                $msg_count = $group['last'] - $group['first'];$/;"	v
msg_id	do_functions.php	/^    $msg_id = $arg_list;$/;"	v
msg_id	download_functions.php	/^            $msg_id = $article['messageID'];$/;"	v
msg_id	download_functions.php	/^    $msg_id = trim($msg_id, '<>');$/;"	v
msg_id	nntp.class.php	/^        $msg_id = '<' . $msg_id . '>';$/;"	v
msg_id	spots_functions.php	/^                    $msg_id = $row['message_id'];$/;"	v
msg_id	spots_functions.php	/^                $msg_id = $row['message_id'];$/;"	v
msg_id	urdd_extsetdata.php	/^            $msg_id = $msg ;$/;"	v
msg_length	nntp.class.php	/^    private function msg_length(array $msgs)$/;"	f
msgid	spots_functions.php	/^                    $msgid = trim($line[1], "<>\\t ");$/;"	v
msgid_parts	spots_functions.php	/^                    $msgid_parts = explode('.', $msgid);$/;"	v
msgs	nntp.class.php	/^                $msgs = $this->nntp->get_fast_overview(gmp_strval($start), gmp_strval($stop));$/;"	v
msgs	nntp.class.php	/^            $msgs = $this->nntp->get_fast_overview($last - 2, $last);$/;"	v
msgs	nntp.class.php	/^            $msgs = $this->nntp->get_fast_overview($last - 2, $last, FALSE);$/;"	v
mt	urdd_functions.php	/^        $mt = match_mime_type($db, $directory . $entry); \/\/ find a mime type for the file$/;"	v
mt	urdd_functions.php	/^    $mt = real_mime_content_type($db, $file, TRUE); \/\/ will use the file command... if available$/;"	v
mtime	do_functions.php	/^            $mtime = microtime(TRUE);$/;"	v
name	do_functions.php	/^        $name = $rss_info['name'];$/;"	v
name	do_functions.php	/^        $name = (string) $section['subject'];$/;"	v
name	do_functions.php	/^    $name = '';$/;"	v
name	do_functions.php	/^    $name = preg_replace("\/[^a-zA-Z0-9\\(\\)\\! .]\/", '', str_replace('"', '', $bin_data['subject']));$/;"	v
name	download_functions.php	/^                $name = preg_replace('\/[^a-zA-Z0-9._]\/', '', $article['name']);$/;"	v
name	nntp.class.php	/^        $name = group_name($this->db, $groupid);$/;"	v
name	post_functions.php	/^    $name = $subject; \/\/ better name for rar files ...$/;"	v
name	post_functions.php	/^    $name = preg_replace('\/[^A-Za-z0-9_.]\/', '', $name); \/\/ replace all fancy characters by nothing$/;"	v
name	post_functions.php	/^    $name = str_replace(' ', '_', $name); \/\/ file names don't contain spaces but underscore$/;"	v
name	show_functions.php	/^        $name = $row['name'];$/;"	v
name	urdd_extsetdata.php	/^            $name = 'link';$/;"	v
name	urdd_extsetdata.php	/^            $name = 'score';$/;"	v
name	urdd_extsetdata.php	/^        $name = $row[1];$/;"	v
name	urdd_functions.php	/^                $name = $base;$/;"	v
name	urdd_test.php	/^        $this->name = $name;$/;"	v
name	urdd_test.php	/^    public $name;$/;"	v
name	yydecode.php	/^                    $name = $matches[1];$/;"	v
name	yydecode.php	/^                $name = trim($match_name[1]);$/;"	v
name	yydecode.php	/^    static $name = '';$/;"	v
namevalues	do_functions.php	/^        $namevalues = array();$/;"	v
ndp	urdd_functions.php	/^        $ndp = $np; \/\/ directory permissions they always get x permissions if they have at least a non 0 value$/;"	v
need_admin	urdd_command.php	/^        $this->need_admin = $admin;$/;"	v
need_admin	urdd_command.php	/^    private $need_admin; \/\/ must be admin user to exec the command$/;"	v
need_auth	urdd_command.php	/^        $this->need_auth = $auth;$/;"	v
need_auth	urdd_command.php	/^    private $need_auth; \/\/ must be authenticated before executing the command$/;"	v
need_db	action.php	/^    public function need_db()$/;"	f
need_nntp	action.php	/^    public function need_nntp()$/;"	f
need_nntp	server_data.php	/^        $need_nntp = $action->need_nntp();$/;"	v
need_nntp	urdd_command.php	/^        $this->need_nntp = $need_nntp;$/;"	v
need_nntp	urdd_command.php	/^    private $need_nntp; \/\/ an nntp connection is needed$/;"	v
need_posting	action.php	/^    public function need_posting()$/;"	f
need_posting	urdd_command.php	/^        $this->need_posting = $need_posting;$/;"	v
need_posting	urdd_command.php	/^    private $need_posting; \/\/ needs the posting capability of a nntp server$/;"	v
needs_admin	urdd_command.php	/^    public function needs_admin() { return $this->need_admin;}$/;"	f
needs_auth	urdd_command.php	/^    public function needs_auth() { return $this->need_auth;}$/;"	f
needs_nntp	action.php	/^        $this->needs_nntp = $action->need_nntp();$/;"	v
needs_nntp	action.php	/^        $this->needs_nntp = $nntp;$/;"	v
needs_nntp	action.php	/^        $this->needs_nntp = get_command_nntp($cmd);$/;"	v
needs_nntp	action.php	/^    private $needs_nntp; \/\/ the command needs an nntp connection$/;"	v
needs_nntp	urdd_command.php	/^    public function needs_nntp() { return $this->need_nntp;}$/;"	f
needs_posting	action.php	/^        $this->needs_posting = get_command_posting($cmd);$/;"	v
needs_posting	action.php	/^    private $needs_posting; \/\/ the command needs the posting capability of the server$/;"	v
needs_posting	urdd_command.php	/^    public function needs_posting() { return $this->need_posting;}$/;"	f
new_action	server_data.php	/^            $new_action = new action(NULL, NULL, NULL);$/;"	v
new_id	server_data.php	/^                    $new_id = $this->recreate_download_command($db, $item, TRUE, TRUE);$/;"	v
new_id	server_data.php	/^                $new_id = $this->recreate_post_command($db, $item, TRUE, TRUE); \/\/xxx$/;"	v
new_item	download_functions.php	/^                $new_item = new action(NULL, NULL, NULL);$/;"	v
new_item	download_functions.php	/^            $new_item = new action(NULL, NULL, NULL); \/\/ create a dummy...$/;"	v
new_item	server_data.php	/^        $new_item = new action(NULL, NULL, NULL);$/;"	v
new_job	server_data.php	/^            $new_job = new job($new_action, $new_time, $rec);$/;"	v
new_name	do_functions.php	/^        $new_name = find_unique_name(substr($url, 0, strlen($url) - 11), '', '', '.processed', TRUE);$/;"	v
new_name	nzb_poller.class.php	/^                            $new_name = addslashes($new_name);$/;"	v
new_name	nzb_poller.class.php	/^                            $new_name = find_unique_name($path, '', $entry, '.processing', TRUE);$/;"	v
new_setid	group_functions.php	/^        $new_setid = $row['new_setid'];$/;"	v
new_sets	do_functions.php	/^            $new_sets = 0;$/;"	v
new_sets	do_functions.php	/^        $new_sets = $setcount - $old_setcount;$/;"	v
new_time	server_data.php	/^            $new_time = strtotime("+ $rec seconds", $time); $/;"	v
newcnt	urdd_rss.php	/^        $newcnt = $updcnt = 0;$/;"	v
newsgroup	nntp.class.php	/^            $this->newsgroup = $name;$/;"	v
newsgroup	nntp.class.php	/^            $this->newsgroup = '';$/;"	v
newsgroup	nntp.class.php	/^    private $newsgroup;         \/\/ the selected newsgroup at the server$/;"	v
next	queue.php	/^                    $next = $q;$/;"	v
nfo	do_functions.php	/^                        $nfo = explode("\\n", yenc_decode($art));$/;"	v
ngs	show_functions.php	/^        $ngs = $xml->addChild('newsgroups');$/;"	v
niceval	download_functions.php	/^    $niceval = get_nice_value($db);$/;"	v
niceval	post_functions.php	/^    $niceval = get_nice_value($db);$/;"	v
nntp	do_functions.php	/^        $nntp = connect_nntp($db, $server_id);$/;"	v
nntp	nntp.class.php	/^            $this->nntp = NULL;$/;"	v
nntp	nntp.class.php	/^            $this->nntp = new NNTP_Client();$/;"	v
nntp	nntp.class.php	/^        $this->nntp = NULL;$/;"	v
nntp	nntp.class.php	/^    private $nntp;             \/\/ the nntp server connection$/;"	v
nntp	post_functions.php	/^        $nntp = connect_nntp($db, $server_id);$/;"	v
nntp_enabled	server_data.php	/^        $this->nntp_enabled = ($on ? TRUE : FALSE);$/;"	v
nntp_enabled	server_data.php	/^        $this->nntp_enabled = FALSE;$/;"	v
nntp_enabled	server_data.php	/^    private $nntp_enabled; \/\/ bool nntp is allowed or not$/;"	v
nntp_enabled	urdd.php	/^        $nntp_enabled = $servers->get_nntp_enabled();$/;"	v
nntp_maxthreads	urdd.php	/^    $nntp_maxthreads = get_config($db, 'nntp_maxthreads'); \/\/ total number of threads that connect to a news server allowed$/;"	v
nntp_slots_available	server_data.php	/^    public function nntp_slots_available()$/;"	f
nntp_slots_available	urdd.php	/^            $nntp_slots_available = $servers->nntp_slots_available(); \/\/ is there a total free slot$/;"	v
noop	urdd_client.php	/^    public function noop()$/;"	f
not_these	server_data.php	/^                $not_these = array(); \/\/ the ones we already tried$/;"	v
now	do_functions.php	/^    $now = time();$/;"	v
now	download_functions.php	/^    $now = time();$/;"	v
now	nntp.class.php	/^        $now = time();$/;"	v
now	nzb_poller.class.php	/^        $now = time();$/;"	v
now	server_data.php	/^            $now = time();$/;"	v
now	server_data.php	/^        $now = time();$/;"	v
now	spots_functions.php	/^        $now = time();$/;"	v
now	urdd.php	/^    $now = time();$/;"	v
now	urdd_rss.php	/^        $now = time();$/;"	v
np	urdd_functions.php	/^        $np = octdec($perm) & 0777;$/;"	v
nr_threads	download_functions.php	/^                $nr_threads = $servers->get_max_threads($srv_id);$/;"	v
nr_threads	download_functions.php	/^                $nr_threads = $servers->get_max_total_nntp_threads();$/;"	v
nr_threads	download_functions.php	/^                $nr_threads = min ($max_dl_nntp, $nr_threads);$/;"	v
nr_threads	download_functions.php	/^                $nr_threads = min($max_dl_nntp, $nr_threads);$/;"	v
nr_threads	download_functions.php	/^            $nr_threads = $servers->get_max_threads($srv_id);$/;"	v
nr_threads	download_functions.php	/^            $nr_threads = 1;$/;"	v
nr_threads	download_functions.php	/^        $nr_threads = 1;$/;"	v
nr_threads	download_functions.php	/^        $nr_threads = min($nr_threads, 2);$/;"	v
nr_threads	download_functions.php	/^        $nr_threads = min($nr_threads, 3);$/;"	v
nr_threads	download_functions.php	/^        $nr_threads = min($nr_threads, 5);$/;"	v
nr_threads	download_functions.php	/^        $nr_threads = select_thread_count($dlsize, $nr_threads);$/;"	v
null_array	urdd_client.php	/^            $null_array = array();$/;"	v
nzb	do_functions.php	/^            $nzb = connect_nntp($db, $server_id);$/;"	v
nzb	do_functions.php	/^        $nzb = TRUE;$/;"	v
nzb	do_functions.php	/^        $nzb = connect_nntp($db, $server_id);$/;"	v
nzb	download_functions.php	/^                $nzb = connect_nntp($db, $server_id);$/;"	v
nzb	download_functions.php	/^        $nzb = NULL;$/;"	v
nzb	urdd_functions.php	/^        $nzb = new URD_NNTP($db, $usenet_config['hostname'], $usenet_config['connection'], $usenet_config['port'], $timeout);$/;"	v
nzb_data	do_functions.php	/^            $nzb_data = gzinflate(remove_special_zip_strings($nzb_data));$/;"	v
nzb_data	do_functions.php	/^        $nzb_data = '';$/;"	v
nzb_dir	do_functions.php	/^    $nzb_dir = $dlpath . NZB_PATH;$/;"	v
nzb_file	do_functions.php	/^            $nzb_file = @(new SimpleXMLElement($nzb_data, LIBXML_PARSEHUGE, FALSE));$/;"	v
nzb_file	do_functions.php	/^        $nzb_file = @(new SimpleXMLElement($url, LIBXML_PARSEHUGE, TRUE));$/;"	v
nzb_file	do_functions.php	/^    $nzb_file = find_unique_name($dlpath, '', $file_name, '.nzb', TRUE);$/;"	v
nzb_poller	nzb_poller.class.php	/^class nzb_poller$/;"	c
nzbs	do_functions.php	/^        $nzbs = get_spot_nzb($db, $spotid);$/;"	v
nzbs	do_functions.php	/^    $nzbs = $res[0]['nzbs'];$/;"	v
nzbs	do_functions.php	/^    $nzbs = unserialize(db_decompress($nzbs));$/;"	v
o	nntp.class.php	/^        $o = gmp_strval($orig_stop);$/;"	v
odlid	do_functions.php	/^    $odlid = $dlid = $item->get_args();$/;"	v
offset	group_functions.php	/^    $offset = $cnt = 0;$/;"	v
offset	urdd_functions.php	/^        $offset = $item->get_preview() ? DatabaseConnection::DB_LOCK_TIMEOUT_PREVIEW : DatabaseConnection::DB_LOCK_TIMEOUT_DEFAULT;$/;"	v
offset	urdd_functions.php	/^    $offset = $item->get_preview() ? DatabaseConnection::DB_LOCK_TIMEOUT_PREVIEW : DatabaseConnection::DB_LOCK_TIMEOUT_DEFAULT;$/;"	v
old	do_functions.php	/^    $old = 0;$/;"	v
oldErrorLevel	urdd_config.php	/^            $oldErrorLevel = error_reporting(0);$/;"	v
old_id	server_data.php	/^            $old_id = $item2->get_id();$/;"	v
old_id	server_data.php	/^        $old_id = FALSE;$/;"	v
old_setcount	do_functions.php	/^        $old_setcount = get_sets_count_group($db, $groupid);$/;"	v
old_setid	group_functions.php	/^        $old_setid = $row['old_setid'];$/;"	v
older_counter	nntp.class.php	/^            $older_counter = 0;$/;"	v
older_counter	nntp.class.php	/^        $older_counter = 0;$/;"	v
older_top	nntp.class.php	/^        $older_top = gmp_min(self::MAX_OLDER_COUNTER, (gmp_add(1000, gmp_div($total, 20))));$/;"	v
onoff	do_functions.php	/^                $onoff = in_array(strtoupper($arg_list[2]), $yes)? TRUE : FALSE;$/;"	v
onoff	do_functions.php	/^            $onoff = (isset($arg_list[1]) && strtolower($arg_list[1]) == 'on') ? TRUE : FALSE;$/;"	v
optimise	urdd_client.php	/^    public function optimise()$/;"	f
options	download_functions.php	/^                $options = my_escapeshellarg($archive_types[$type][1], FALSE);$/;"	v
options	urdd_options.php	/^            $options = $con->getopt($args, self::$shortopt, self::$longopt);$/;"	v
order	urdd_rss.php	/^                $order = isset($matches[2]) ? trim( $matches[2]) : ' ';$/;"	v
originalsubs	download_functions.php	/^    $originalsubs = 'original_subtitles';$/;"	v
orss_id	urdd_rss.php	/^        $orss_id = $rss_id;$/;"	v
osetid	group_functions.php	/^    $osetid = $setid1; \/\/ new set id$/;"	v
osetid2	group_functions.php	/^        $osetid2 = $setid2;$/;"	v
ostart	nntp.class.php	/^            $ostart = gmp_strval($orig_start);$/;"	v
ostop	nntp.class.php	/^            $ostop = gmp_strval($orig_stop);$/;"	v
output_type	show_functions.php	/^            $output_type = 'text';$/;"	v
output_type	show_functions.php	/^            $output_type = 'xml';$/;"	v
output_type	show_functions.php	/^    $output_type = 'text';$/;"	v
p	download_functions.php	/^    $p = $pipes[0];$/;"	v
p1	queue.php	/^        $p1 = $a->get_priority();$/;"	v
p2	queue.php	/^        $p2 = $b->get_priority();$/;"	v
p_str	urdd_usenet_servers.php	/^                    $p_str = ($posting === TRUE) ? 'Posting allowed' : 'Posting not allowed';$/;"	v
p_str	urdd_usenet_servers.php	/^                $p_str = ($posting === TRUE) ? 'Posting allowed' : 'Posting not allowed';$/;"	v
par2_cmd	post_functions.php	/^        $par2_cmd = get_config($db, 'unpar_path');$/;"	v
par2_cmd	post_functions.php	/^        $par2_cmd = my_escapeshellarg($par2_cmd);$/;"	v
par2_file	post_functions.php	/^        $par2_file = $dl_path1 . DIRECTORY_SEPARATOR . $name . '.par2';$/;"	v
par2_file	post_functions.php	/^        $par2_file = my_escapeshellarg($par2_file);$/;"	v
par2_params	download_functions.php	/^    $par2_params = my_escapeshellarg(get_config($db, 'unpar_pars'), FALSE);$/;"	v
par_cmd	download_functions.php	/^    $par_cmd = my_escapeshellcmd(get_config($db, 'unpar_path', ''));$/;"	v
par_db	urdd.php	/^                $par_db = connect_db(TRUE);$/;"	v
par_error	do_functions.php	/^                $par_error = FALSE; \/\/ if there is a par2 err, it may be that we first have to concat before parring again$/;"	v
par_failed	do_functions.php	/^    $par_failed = DOWNLOAD_PAR_FAILED;$/;"	v
par_files	download_functions.php	/^    $par_files = $db->select_query($sql, array($dlid,DOWNLOAD_IS_PAR_FILE ));$/;"	v
parse_links	spots_functions.php	/^    private static function parse_links($data)$/;"	f
parse_messages	nntp.class.php	/^    private function parse_messages(array $msgs, $mindate, &$older_counter, &$blacklist_counter, $get_extset_data=FALSE, $parse_spots, $parse_spots_comments, $parse_spots_reports, array $poster_blacklist)$/;"	f
parse_nzb	do_functions.php	/^function parse_nzb(DatabaseConnection $db, SimpleXMLElement $xml, $dlid)$/;"	f
parse_nzb	urdd_client.php	/^    public function parse_nzb($url, $dlid='', $start_time=NULL)$/;"	f
parse_spot_comment	spots_functions.php	/^    public static function parse_spot_comment(array $header, array $spot_blacklist)$/;"	f
parse_spot_data	spots_functions.php	/^    private static function parse_spot_data(array &$spot_data)$/;"	f
parse_spot_header	spots_functions.php	/^    private static function parse_spot_header(array $header, $message_id, array $spot_blacklist)$/;"	f
parse_spot_report	spots_functions.php	/^    private static function parse_spot_report(array $lines)$/;"	f
parse_spots	nntp.class.php	/^        $parse_spots = $groupArr['parse_spots'];$/;"	v
parse_spots_comments	nntp.class.php	/^        $parse_spots_comments = $groupArr['parse_spots_comments'];$/;"	v
parse_spots_for_extset_data	spots_functions.php	/^    private static function parse_spots_for_extset_data(DatabaseConnection $db, array $spot_data, $spotid)$/;"	f
parse_spots_reports	nntp.class.php	/^        $parse_spots_reports = $groupArr['parse_spots_reports'];$/;"	v
parse_spotterid	spots_functions.php	/^    private static function parse_spotterid($from)$/;"	f
parsed_msg	nntp.class.php	/^            $parsed_msg = explode("\\t", $msg[0]);$/;"	v
part	yydecode.php	/^                $part = $match_part[1];$/;"	v
part0	nntp.class.php	/^                $part0 = $vars[2];$/;"	v
part_number	do_functions.php	/^            $part_number = (int)($segment_attr['number']);$/;"	v
part_table	group_functions.php	/^        $part_table = "parts_$groupid";$/;"	v
partnumber	do_functions.php	/^        $partnumber = $arr2['partnumber'];$/;"	v
partnumber	download_functions.php	/^                $partnumber = $article['partnumber'];$/;"	v
partnumber	group_functions.php	/^    public $partnumber;$/;"	v
parts	do_functions.php	/^            $parts = 'parts_' . $groupid;$/;"	v
parts	do_functions.php	/^    $parts = explode('#', $parts[1]);$/;"	v
parts	do_functions.php	/^    $parts = explode('@', $args);$/;"	v
parts	spots_functions.php	/^            $parts = explode(':', $line, 2);$/;"	v
password	do_functions.php	/^    $password = get_download_password($db, $dlid);$/;"	v
password	nntp.class.php	/^        $password = keystore::decrypt_password($this->db, $password);$/;"	v
password	nntp.class.php	/^        $this->password = $password;$/;"	v
password	nntp.class.php	/^    private $password;          \/\/ and the password$/;"	v
password	urdd_client.php	/^            $password = 'hash:' . $md5pass;$/;"	v
password	urdd_client.php	/^        $this->password = $password;$/;"	v
password	urdd_client.php	/^    private $password;$/;"	v
password	urdd_rss.php	/^        $password = $rss_info['password'];$/;"	v
password	urdd_usenet_servers.php	/^            $this->password = $pw;$/;"	v
password	urdd_usenet_servers.php	/^        $this->password = $pw;$/;"	v
password	urdd_usenet_servers.php	/^    private $password; \/\/string$/;"	v
path	nzb_poller.class.php	/^                $path = $dl_path . $user . DIRECTORY_SEPARATOR;$/;"	v
path	urdd.php	/^    $path = realpath(dirname(__FILE__) . '\/..\/.installed');$/;"	v
path	urdd_config.php	/^    $path = get_magpie_cache_dir($db);$/;"	v
path	urdd_config.php	/^    $path = my_realpath($path);$/;"	v
pathact	action.php	/^$pathact = realpath(dirname(__FILE__));$/;"	v
pathcmd	urdd_command.php	/^$pathcmd = realpath(dirname(__FILE__));$/;"	v
pathdf	do_functions.php	/^$pathdf = realpath(dirname(__FILE__));$/;"	v
pathdf	post_functions.php	/^$pathdf = realpath(dirname(__FILE__));$/;"	v
pathdlf	download_functions.php	/^$pathdlf = realpath(dirname(__FILE__));$/;"	v
pathhlp	urdd_help.php	/^$pathhlp = realpath(dirname(__FILE__));$/;"	v
pathnzb	nntp.class.php	/^$pathnzb = realpath(dirname(__FILE__));$/;"	v
pathopt	urdd_options.php	/^$pathopt = realpath(dirname(__FILE__));$/;"	v
pathq	nzb_poller.class.php	/^$pathq = realpath(dirname(__FILE__));$/;"	v
pathq	queue.php	/^$pathq = realpath(dirname(__FILE__));$/;"	v
pathqf	queue_functions.php	/^$pathqf = realpath(dirname(__FILE__));$/;"	v
pathrss	urdd_rss.php	/^$pathrss = realpath(dirname(__FILE__));$/;"	v
paths	urdd_config.php	/^    $paths = get_all_paths($path, '', TRUE); \/\/ get the main paths needed (tmp, done, preview)$/;"	v
pathschd	schedule.php	/^$pathschd = realpath(dirname(__FILE__));$/;"	v
pathsf	show_functions.php	/^$pathsf = realpath(dirname(__FILE__));$/;"	v
pathsf	spots_functions.php	/^$pathsf = realpath(dirname(__FILE__));$/;"	v
paththr	thread.php	/^$paththr = realpath(dirname(__FILE__));$/;"	v
pathu	do_functions.php	/^        $pathu = my_realpath(dirname(__FILE__));$/;"	v
pathu	urdd.php	/^$pathu = realpath(dirname(__FILE__));$/;"	v
pathu	urdd_config.php	/^$pathu = realpath(dirname(__FILE__));$/;"	v
pathuc	urdd_client.php	/^$pathuc = realpath(dirname(__FILE__));$/;"	v
pathue	urdd_error.php	/^$pathue = realpath(dirname(__FILE__));$/;"	v
pathued	urdd_extsetdata.php	/^$pathued = realpath(dirname(__FILE__));$/;"	v
pathuf	urdd_functions.php	/^$pathuf = realpath(dirname(__FILE__));$/;"	v
pathus	urdd_sockets.php	/^$pathus = realpath(dirname(__FILE__));$/;"	v
pattern	nntp.class.php	/^                $this->pattern = trim($pattern);$/;"	v
pattern	nntp.class.php	/^            $this->pattern = get_config($this->db, 'spots_comments_group', 'free.usenet');$/;"	v
pattern	nntp.class.php	/^            $this->pattern = get_config($this->db, 'spots_group', 'free.pt');$/;"	v
pattern	nntp.class.php	/^            $this->pattern = get_config($this->db, 'spots_reports_group', 'free.willey');$/;"	v
pattern	nntp.class.php	/^        $pattern = get_config($this->db, 'group_filter');$/;"	v
pattern	nntp.class.php	/^    private $pattern;$/;"	v
patterns	nntp.class.php	/^        $patterns = explode (',', $pattern);$/;"	v
pause	action.php	/^    public function pause($pause, $userid)  \/\/ pause == true -> set pause, false->  continue$/;"	f
pause	queue.php	/^    public function pause(DatabaseConnection $db, $action_id, $do_pause, $userid)\/\/ $do_pause == true then pause, else  continue (unpause)$/;"	f
pause	server_data.php	/^    public function pause(DatabaseConnection $db, $id, $pause, $userid)$/;"	f
pause	urdd_client.php	/^    public function pause($msg_id)$/;"	f
pause_all	queue.php	/^    public function pause_all(DatabaseConnection $db, $do_pause, $userid)\/\/ $do_pause == true then pause, else  continue (unpause)$/;"	f
pause_all	server_data.php	/^    public function pause_all(DatabaseConnection$db, $do_pause, $userid)$/;"	f
pause_cmd	queue.php	/^    public function pause_cmd(DatabaseConnection $db, $cmd, $arg, $do_pause, $userid)\/\/ $do_pause == true then pause, else  continue (unpause)$/;"	f
pause_cmd	server_data.php	/^    public function pause_cmd(DatabaseConnection $db, $cmd, $arg, $do_pause, $userid)\/\/ $do_pause == true then pause, else  continue (unpause)$/;"	f
paused	action.php	/^            $this->paused = FALSE;$/;"	v
paused	action.php	/^            $this->paused = TRUE;$/;"	v
paused	action.php	/^        $this->paused = (bool) $paused;$/;"	v
paused	action.php	/^        $this->paused = FALSE;$/;"	v
paused	action.php	/^    private $paused; \/\/ is the thread paused or active$/;"	v
peer_address	urdd_connection.php	/^            $this->peer_address = $address;$/;"	v
peer_address	urdd_connection.php	/^    private $peer_address;$/;"	v
peer_hostname	urdd_connection.php	/^            $this->peer_hostname = gethostbyaddr($address);$/;"	v
peer_hostname	urdd_connection.php	/^    private $peer_hostname;$/;"	v
peer_port	urdd_connection.php	/^            $this->peer_port = $port;$/;"	v
peer_port	urdd_connection.php	/^    private $peer_port;$/;"	v
perc	do_functions.php	/^            $perc = ceil(((float) $cnt * 100) \/ $totalcount);$/;"	v
perc	do_functions.php	/^            $perc = ceil(((float) $cntr * 100) \/ $total_rows);$/;"	v
perc	do_functions.php	/^        $perc = round(($df \/ $dt) * 100, $dec);$/;"	v
perc	spots_functions.php	/^            $perc = ceil(((float) $cnt * 100) \/ $totalcount);$/;"	v
percentage	download_functions.php	/^            $percentage = ($total > 0) ? floor(100 * ($done \/ $total)) : 0;$/;"	v
percentage	nntp.class.php	/^        $percentage = ($totalarticles > 0) ? floor(100 * ($articlesdone \/ $totalarticles)) : 0;$/;"	v
percentage	nntp.class.php	/^        $percentage = min(100, $percentage); \/\/ Just in case ;)$/;"	v
percentage	post_functions.php	/^                $percentage = ($total_count > 0 ) ? floor(100 * ($done_count \/ $total_count)) : 0;$/;"	v
perm	urdd_command.php	/^                $perm = urd_user_rights::has_rights($db, $userid, $cmd->get_rights());$/;"	v
perm	urdd_command.php	/^            $perm = urd_user_rights::is_admin($db, $userid);$/;"	v
perm	urdd_functions.php	/^        $perm = get_config($db, 'permissions');$/;"	v
perm_fail_servers	action.php	/^        $this->perm_fail_servers = $action->get_failed_servers();$/;"	v
perm_fail_servers	action.php	/^    private $perm_fail_servers; \/\/ servers that don't have any more articles for us$/;"	v
pid	server_data.php	/^                $pid = $this->threads->get_pid($id);$/;"	v
pid	server_data.php	/^            $pid = $this->threads->get_pid($action_id);$/;"	v
pid	server_data.php	/^        $pid = $this->threads->get_pid($id);$/;"	v
pid	server_data.php	/^        $pid = $thread->get_pid();$/;"	v
pid	thread.php	/^        $pid = $thread->get_pid();$/;"	v
pid	thread.php	/^        $this->pid = (int) $pid;$/;"	v
pid	thread.php	/^    private $pid;$/;"	v
pid	urdd.php	/^    $pid = pcntl_fork();$/;"	v
pid	urdd_config.php	/^        $pid = file_get_contents($pid_file);$/;"	v
pid	urdd_config.php	/^    $pid = posix_getpid();$/;"	v
pid	urdd_error.php	/^        $pid = pcntl_fork();$/;"	v
pids	server_data.php	/^            $pids = $this->threads->get_all_pids($userid);$/;"	v
pids	server_data.php	/^            $pids = $this->threads->get_pid_cmd($cmd, $arg);$/;"	v
pids	server_data.php	/^        $pids = $this->threads->get_all_pids($userid);$/;"	v
pids	server_data.php	/^        $pids = $this->threads->get_pid_cmd($cmd, $arg);$/;"	v
pids	thread.php	/^        $pids = array();$/;"	v
pipes	do_functions.php	/^        $pipes = array();$/;"	v
pipes	download_functions.php	/^            $pipes = array();$/;"	v
pipes	download_functions.php	/^    $pipes = array();$/;"	v
poll_nzb_dir	nzb_poller.class.php	/^    public static function poll_nzb_dir(DatabaseConnection $db, server_data &$servers)$/;"	f
port	nntp.class.php	/^            $this->port = ($conn === FALSE) ? Base_NNTP_Client::NNTP_PROTOCOL_CLIENT_DEFAULT_PORT : Base_NNTP_Client::NNTP_SSL_PROTOCOL_CLIENT_DEFAULT_PORT;$/;"	v
port	nntp.class.php	/^            $this->port = (int) $port;$/;"	v
port	nntp.class.php	/^    private $port;             \/\/ server port$/;"	v
port	show_functions.php	/^        $port = $s['port'];$/;"	v
port	urdd_client.php	/^        $this->port = (int) $port;$/;"	v
port	urdd_client.php	/^    private $port;$/;"	v
port	urdd_usenet_servers.php	/^                            $port = $p;$/;"	v
port	urdd_usenet_servers.php	/^                        $port = $port;$/;"	v
port	urdd_usenet_servers.php	/^                        $port = NULL;$/;"	v
port	urdd_usenet_servers.php	/^            $this->port = (int) $port;$/;"	v
port	urdd_usenet_servers.php	/^        $port = $code = 0;$/;"	v
port	urdd_usenet_servers.php	/^        $this->port = (int) $port;$/;"	v
port	urdd_usenet_servers.php	/^    private $port; \/\/ int$/;"	v
pos	urdd_functions.php	/^    $pos = strrpos($filename, '.');$/;"	v
possible_uuencode	download_type.class.php	/^                    $possible_uuencode = TRUE;$/;"	v
possible_uuencode	download_type.class.php	/^        $possible_uuencode = FALSE;$/;"	v
possible_xxencode	download_type.class.php	/^                    $possible_xxencode = TRUE;$/;"	v
post	do_functions.php	/^        $post = TRUE;$/;"	v
post	urdd_client.php	/^    public function post($id)$/;"	f
post_article	nntp.class.php	/^    public function post_article(array $article)$/;"	f
post_cancelled_status	do_functions.php	/^    $post_cancelled_status = POST_CANCELLED;$/;"	v
post_finished_status	do_functions.php	/^    $post_finished_status = POST_FINISHED;$/;"	v
post_id	urdd_extsetdata.php	/^    $post_id = $db->insert_query('post_messages',$/;"	v
post_message	urdd_client.php	/^    public function post_message($id)$/;"	f
post_par_failed_status	do_functions.php	/^    $post_par_failed_status = POST_PAR_FAILED;$/;"	v
post_path	urdd_extsetdata.php	/^    $post_path = $dl_path_basis . POST_PATH;$/;"	v
post_rar_failed_status	do_functions.php	/^    $post_rar_failed_status = POST_RAR_FAILED;$/;"	v
post_status	post_functions.php	/^        $post_status = POST_ACTIVE;$/;"	v
post_status	post_functions.php	/^        $post_status = create_rar_files($db, $item, $postid, $filesize_rar, $dl_path1, $userid, $dir, $name);$/;"	v
post_status	post_functions.php	/^    $post_status = $row['status'];$/;"	v
post_status	post_functions.php	/^    $post_status = POST_RARRED;$/;"	v
postcount	show_functions.php	/^        $postcount = $row['feedcount'];$/;"	v
postcount	show_functions.php	/^        $postcount = $row['postcount'];$/;"	v
poster	do_functions.php	/^        $poster = (string) $section['poster'];$/;"	v
poster	group_functions.php	/^            $poster = $row['fromname'];$/;"	v
poster	group_functions.php	/^            $poster = preg_replace('\/([^a-z]+)\/i', '', substr($poster, 0, 10));$/;"	v
poster	group_functions.php	/^            $poster = strtolower(substr($poster, 0, 3));$/;"	v
poster	urdd_extsetdata.php	/^    $poster = 'URD daemon';$/;"	v
poster_blacklist	nntp.class.php	/^        $poster_blacklist = get_config($this->db, 'poster_blacklist');$/;"	v
poster_blacklist	nntp.class.php	/^        $poster_blacklist = unserialize($poster_blacklist);$/;"	v
poster_email	post_functions.php	/^        $poster_email = $row['poster_id'];$/;"	v
poster_headers	do_functions.php	/^        $poster_headers = unserialize($row['headers']);$/;"	v
poster_id	do_functions.php	/^        $poster_id = $row['poster_id'];$/;"	v
poster_name	do_functions.php	/^        $poster_name = $row['poster_name'];$/;"	v
postername	post_functions.php	/^        $postername = $row['poster_name'];$/;"	v
postid	post_functions.php	/^                $postid = $item->get_args();$/;"	v
postid	post_functions.php	/^        $postid = $args;$/;"	v
postid	post_functions.php	/^        $postid = $item->get_args();$/;"	v
postid	post_functions.php	/^    $postid = $args;$/;"	v
posting	nntp.class.php	/^            $posting = $this->nntp->connect($this->server, $this->connection, $this->port, $this->timeout);$/;"	v
posting	show_functions.php	/^        $posting = $s['posting'] ? 'posting' : 'noposting';$/;"	v
posting	urdd_usenet_servers.php	/^                    $posting = $conn->connect($auth, $this->username, $this->password);$/;"	v
posting	urdd_usenet_servers.php	/^            $posting = $conn->connect($auth, $this->username, $this->password);$/;"	v
posting	urdd_usenet_servers.php	/^            $this->posting = $posting;$/;"	v
posting	urdd_usenet_servers.php	/^        $this->posting = $posting;$/;"	v
posting	urdd_usenet_servers.php	/^        $this->posting = FALSE;$/;"	v
posting	urdd_usenet_servers.php	/^        $this->posting = TRUE;$/;"	v
posting	urdd_usenet_servers.php	/^    private $posting;$/;"	v
preempt	server_data.php	/^    public function preempt(DatabaseConnection $db, action $item, $userid)$/;"	f
preempt	urdd_client.php	/^    public function preempt($msg_start, $msg_stop = '')$/;"	f
pref	show_functions.php	/^        $pref = $s['preferred'] ? '*' : ' ';$/;"	v
preferred_server	action.php	/^            $this->preferred_server = (int) $action->get_preferred_server();$/;"	v
preferred_server	action.php	/^            $this->preferred_server = (int) 0;$/;"	v
preferred_server	action.php	/^        $this->preferred_server = $id;$/;"	v
preferred_server	action.php	/^        $this->preferred_server = (int) 0;$/;"	v
preferred_server	action.php	/^    private $preferred_server; \/\/ if this is 0 we try any active server, otherwise run it _only_ on the server given here; note if it is not active on starting this item, we need to re-schedule it with a new preferred server$/;"	v
prefs	group_functions.php	/^    $prefs = load_config($db);$/;"	v
prefs	urdd_config.php	/^    $prefs = load_config($db);$/;"	v
prefs	urdd_rss.php	/^        $prefs = load_config($db);$/;"	v
prev	queue.php	/^                    $prev = $q;$/;"	v
prev	queue.php	/^                $prev = $q;$/;"	v
prev	queue.php	/^        $prev = $curr = NULL;$/;"	v
prev	queue.php	/^        $prev = $next = NULL;$/;"	v
preview	action.php	/^        $this->preview = $action->get_preview();$/;"	v
preview	action.php	/^        $this->preview = (bool) $p;$/;"	v
preview	action.php	/^        $this->preview = FALSE;$/;"	v
preview	action.php	/^    private $preview; \/\/ is this a preview or (a regular download or other task) - previews get priority over other tasks$/;"	v
preview	do_functions.php	/^        $preview = TRUE;$/;"	v
preview	do_functions.php	/^    $preview = $tmp = $nzb = $post = $filecache = FALSE;$/;"	v
preview	download_functions.php	/^            $preview = $item->get_preview();$/;"	v
preview	queue_functions.php	/^            $preview = TRUE;$/;"	v
preview	queue_functions.php	/^    $preview = FALSE;$/;"	v
preview	urdd_functions.php	/^    $preview = $item->get_preview();$/;"	v
preview_dir	do_functions.php	/^    $preview_dir = $dlpath . PREVIEW_PATH;$/;"	v
preview_str	urdd_client.php	/^        $preview_str = ($preview === TRUE) ? 'preview' : '';$/;"	v
previous	queue.php	/^        $previous = $current = array();$/;"	v
primary_nntp	action.php	/^        $this->primary_nntp = $action->primary_nntp();$/;"	v
primary_nntp	action.php	/^        $this->primary_nntp = get_command_primary_nntp($cmd);$/;"	v
primary_nntp	action.php	/^    private $primary_nntp;$/;"	v
primary_nntp	action.php	/^    public function primary_nntp()$/;"	f
primary_nntp	urdd_command.php	/^        $this->primary_nntp = $primary_nntp;$/;"	v
primary_nntp	urdd_command.php	/^    private $primary_nntp; \/\/ connect to the primary nntp server$/;"	v
primary_nntp	urdd_command.php	/^    public function primary_nntp() { return $this->primary_nntp;}$/;"	f
print_help	urdd_help.php	/^    public static function print_help()$/;"	f
print_size	server_data.php	/^    public function print_size()$/;"	f
print_size	urdd_usenet_servers.php	/^    public function print_size()$/;"	f
print_version	urdd_help.php	/^    public static function print_version()$/;"	f
prio	do_functions.php	/^                        $prio = $arg_list[3];$/;"	v
prio	do_functions.php	/^                    $prio = DEFAULT_USENET_SERVER_PRIORITY;$/;"	v
prio	do_functions.php	/^                $prio = $arg_list[2];$/;"	v
prio	queue.php	/^        $prio = $item->get_priority();$/;"	v
prio	show_functions.php	/^        $prio = $s['priority'];$/;"	v
prio	urdd_config.php	/^            $prio = @pcntl_getpriority($pid);$/;"	v
prio	urdd_usenet_servers.php	/^                $prio = $srv->get_priority();$/;"	v
prio	urdd_usenet_servers.php	/^        $prio = 0;$/;"	v
prio1	queue.php	/^        $prio1 = $curr->get_priority();$/;"	v
prio1	queue.php	/^        $prio1 = $next->get_priority();$/;"	v
prio2	queue.php	/^        $prio2 = $prev->get_priority();$/;"	v
prio_sort	queue.php	/^    private static function prio_sort($a, $b)$/;"	f
priority	action.php	/^        $this->priority = $action->get_priority();$/;"	v
priority	action.php	/^        $this->priority = $priority;$/;"	v
priority	action.php	/^        $this->priority = (int) $priority;$/;"	v
priority	action.php	/^    private $priority; \/\/ the priority of the action, used to determine which action to pop off the queue and start running$/;"	v
priority	do_functions.php	/^    $priority = $arg_list[1];$/;"	v
priority	download_functions.php	/^            $priority = 1; \/\/ preview always gets ahead of anything$/;"	v
priority	download_functions.php	/^            $priority = 2; \/\/ a ready download gets the highest priority so it is scheduled in asap; only previews will overrule this$/;"	v
priority	download_functions.php	/^        $priority = 2;$/;"	v
priority	queue_functions.php	/^            $priority = $preview ? 1 : $priority;$/;"	v
priority	urdd.php	/^                $priority = $row['priority'];$/;"	v
priority	urdd_command.php	/^            $priority = DEFAULT_PRIORITY;$/;"	v
priority	urdd_usenet_servers.php	/^            $this->priority = (int) $prio;$/;"	v
priority	urdd_usenet_servers.php	/^        $this->priority = $prio;$/;"	v
priority	urdd_usenet_servers.php	/^        $this->priority = (int) $prio;$/;"	v
priority	urdd_usenet_servers.php	/^    private $priority; \/\/ number (0 == disabled)$/;"	v
process	do_functions.php	/^        $process = proc_open($cmd, $descriptorspec, $pipes, $dlpath, NULL, array('binary_pipes'));$/;"	v
process	download_functions.php	/^            $process = proc_open($cmd, $descriptorspec, $pipes, $dir, NULL, array('binary_pipes'));$/;"	v
process	download_functions.php	/^    $process = proc_open($cmd, $descriptorspec, $pipes, $dir, NULL, array('binary_pipes'));$/;"	v
process_name	urdd.php	/^$process_name = 'urdd'; \/\/ needed for syslog and logging$/;"	v
progress	download_functions.php	/^                    $progress = 0;$/;"	v
progress	download_functions.php	/^                    $progress = NULL; \/\/ not set the progress... other threads may still be running....$/;"	v
progress	download_functions.php	/^    $progress = 0;$/;"	v
progress	group_functions.php	/^            $progress = floor((75 * $cnt) \/ $total);$/;"	v
pubkey	spots_functions.php	/^        $pubkey = SpotParser::unspecial_string($sig[0]);$/;"	v
purge	urdd_client.php	/^    public function purge($msg_id, $type=USERSETTYPE_GROUP)$/;"	f
purge_binaries	group_functions.php	/^function purge_binaries(DatabaseConnection $db, $groupID)$/;"	f
purge_rss	urdd_rss.php	/^    public function purge_rss(DatabaseConnection $db, $rss_id, $dbid=NULL)$/;"	f
purge_spots	spots_functions.php	/^    public static function purge_spots(DatabaseConnection $db, $dbid)$/;"	f
push	queue.php	/^    public function push(action $item, DatabaseConnection $db, $increase_counter=TRUE, $priority=NULL)$/;"	f
push_top	queue.php	/^    public function push_top(action $item, DatabaseConnection $db, $increase_counter=TRUE)$/;"	f
pw	do_functions.php	/^                $pw = $res3[0]['value'];$/;"	v
pw_opt	download_functions.php	/^                    $pw_opt = $archive_types[$type][2];$/;"	v
pw_opt	download_functions.php	/^                    $pw_opt = $archive_types[$type][3];$/;"	v
pw_opt	download_functions.php	/^                    $pw_opt = my_escapeshellarg(str_replace('@@@', $password, $pw_opt));$/;"	v
q_ids	server_data.php	/^        $q_ids = $this->queue->get_ids_action($action_id, $userid);$/;"	v
q_ids	server_data.php	/^        $q_ids = $this->queue->get_ids_all($userid);$/;"	v
q_ids	server_data.php	/^        $q_ids = $this->queue->get_ids_cmd($cmd, $arg, $userid);$/;"	v
qq	queue.php	/^        $qq = array();$/;"	v
qq	queue.php	/^        $this->qq = array();$/;"	v
qq	queue.php	/^        $this->qq = array_merge($before, $current, $previous, $after);$/;"	v
qq	queue.php	/^        $this->qq = array_merge($before, $previous, $current, $after);$/;"	v
qq	queue.php	/^        $this->qq = array_merge($temp_ql, $temp_qm);$/;"	v
qq	queue.php	/^    private $qq;$/;"	v
qry	do_functions.php	/^                $qry = "\\"lastupdate\\" < $timestamp $quser2 AND (\\"status\\" = '" . QUEUE_FINISHED . "' OR \\"status\\" = '" . QUEUE_FAILED$/;"	v
qry	do_functions.php	/^                $qry = "\\"start_time\\" < $timestamp $quser2 "$/;"	v
qry	do_functions.php	/^            $qry = '"downloadID" NOT IN (SELECT "ID" FROM downloadinfo)';$/;"	v
qry	do_functions.php	/^    $qry = "UPDATE \\"rss_urls\\" SET \\"last_updated\\"=$last_updated WHERE \\"id\\"=$id";$/;"	v
qry	do_functions.php	/^    $qry = "count(*) AS \\"cnt\\" FROM users WHERE \\"isadmin\\" != ? AND \\"last_active\\" < ? AND \\"regtime\\" < ?";$/;"	v
qry	group_functions.php	/^                $qry = "UPDATE binaries_$groupID SET \\"dirty\\" = " . DatabaseConnection::DIRTY . " WHERE \\"binaryID\\" IN ( $binarieslist )";$/;"	v
qry	group_functions.php	/^            $qry = "UPDATE binaries_$groupID SET \\"dirty\\" = " . DatabaseConnection::DIRTY . " WHERE \\"binaryID\\" in ( $binarieslist )";$/;"	v
qry	urdd_rss.php	/^        $qry = "\\"rss_id\\" = $rss_id AND \\"timestamp\\" < $expire $keep_int";$/;"	v
qry	urdd_rss.php	/^        $qry = "\\"rss_id\\" = $rss_id";$/;"	v
qry	urdd_rss.php	/^        $qry = "count(\\"id\\") AS cnt FROM rss_sets WHERE \\"rss_id\\" = $rss_id AND \\"timestamp\\" < $expire $keep_int";$/;"	v
qry	urdd_rss.php	/^        $qry = "count(\\"id\\") AS cnt FROM rss_sets WHERE \\"rss_id\\" = ?";$/;"	v
qry	urdd_rss.php	/^        $qry = '"setid" FROM rss_sets WHERE "nzb_link" = ? AND "rss_id" = ?';$/;"	v
qs	show_functions.php	/^    $qs = $servers->queue_size();$/;"	v
qstatus	download_functions.php	/^            $qstatus = QUEUE_FINISHED;$/;"	v
qstatus	post_functions.php	/^            $qstatus = QUEUE_FINISHED;$/;"	v
qt	show_functions.php	/^        $qt = microtime(TRUE) - $q['queue_time'];$/;"	v
qt	show_functions.php	/^        $qt = microtime(TRUE) - ($t['queue_time']);$/;"	v
query	do_functions.php	/^        $query = "\\"binaryID\\", count(*) AS cnt, max(\\"groupID\\") AS \\"groupID\\", max(\\"name\\") AS subject FROM downloadarticles WHERE \\"downloadID\\" = ? GROUP BY \\"binaryID\\" ORDER BY \\"binaryID\\"";$/;"	v
query	do_functions.php	/^    $query = "\\"unpar\\", \\"unrar\\", \\"subdl\\", \\"delete_files\\", \\"destination\\", \\"first_run\\" FROM downloadinfo WHERE \\"ID\\"=?";$/;"	v
query	download_functions.php	/^                $query = '* FROM downloadarticles WHERE "downloadID" = ? AND "status" = ? ORDER BY name, partnumber';$/;"	v
query	nntp.class.php	/^                $query = "UPDATE groups SET \\"first_record\\" = '$s', \\"mid_record\\"='0' WHERE \\"ID\\" = $groupid"; \/\/ \/lazy last_record need only the first time$/;"	v
query	nntp.class.php	/^                $query = "UPDATE groups SET \\"last_record\\" =  $GREATEST('$ostop', \\"last_record\\"), \\"first_record\\" = '$s', \\"mid_record\\"= '$ostart' WHERE \\"ID\\" = $groupid"; \/\/ \/lazy last_record need only the first time$/;"	v
query	nntp.class.php	/^        $query = "UPDATE groups SET \\"last_updated\\" = '" . time() . "' , \\"last_record\\" = $GREATEST('$o', \\"last_record\\") WHERE \\"ID\\" = $groupid";$/;"	v
query	queue_functions.php	/^    $query = "\\"destination\\" FROM downloadinfo WHERE \\"ID\\"=?";$/;"	v
query	server_data.php	/^        $query = '* FROM schedule WHERE 1=1';$/;"	v
query	show_functions.php	/^    $query = "* FROM groups WHERE 1=1 $like ORDER BY \\"name\\"";$/;"	v
query	urdd.php	/^        $query = '"description", "ID", "userid", "restart", "priority", "status" FROM queueinfo WHERE "status" LIKE ? ';$/;"	v
query	urdd.php	/^        $query = '"description", "ID", "userid", "status", "restart", "priority" FROM queueinfo WHERE ("status" LIKE ? OR "status" LIKE ?)';$/;"	v
queue	queue.php	/^class queue$/;"	c
queue	server_data.php	/^        $this->queue = new queue($queue_size);$/;"	v
queue	server_data.php	/^    private $queue; \/\/ this is were all the tasks are put before they can run$/;"	v
queue	show_functions.php	/^        $queue = $xml->addChild('queue');$/;"	v
queue_adddata	queue_functions.php	/^function queue_adddata(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_addspotdata	queue_functions.php	/^function queue_addspotdata(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_check_version	queue_functions.php	/^function queue_check_version(DatabaseConnection $db, server_data &$servers, $userid, $priority)$/;"	f
queue_cleandb	queue_functions.php	/^function queue_cleandb(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_cleandir	queue_functions.php	/^function queue_cleandir(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_delete	server_data.php	/^    public function queue_delete(DatabaseConnection $db, $action_id, $userid, $delete_db = FALSE)$/;"	f
queue_delete_set	queue_functions.php	/^function queue_delete_set(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_delete_set_rss	queue_functions.php	/^function queue_delete_set_rss(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_delete_spot	queue_functions.php	/^function queue_delete_spot(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_expire_spots	queue_functions.php	/^function queue_expire_spots(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_find_servers	queue_functions.php	/^function queue_find_servers(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_generic	queue_functions.php	/^function queue_generic(DatabaseConnection $db, server_data &$servers, $userid, $command, $arg, $priority=DEFAULT_PRIORITY, $restart=TRUE, $paused=FALSE)$/;"	f
queue_gensets	queue_functions.php	/^function queue_gensets(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_gensets_all	queue_functions.php	/^function queue_gensets_all(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getblacklist	queue_functions.php	/^function queue_getblacklist(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getnfo	queue_functions.php	/^function queue_getnfo(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getsendsetinfo	queue_functions.php	/^function queue_getsendsetinfo(DatabaseConnection $db, $cmd, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getsetinfo	queue_functions.php	/^function queue_getsetinfo(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getspot_comments	queue_functions.php	/^function queue_getspot_comments(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getspot_images	queue_functions.php	/^function queue_getspot_images(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getspot_reports	queue_functions.php	/^function queue_getspot_reports(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getspots	queue_functions.php	/^function queue_getspots(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_getwhitelist	queue_functions.php	/^function queue_getwhitelist(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_groups	queue_functions.php	/^function queue_groups(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_merge_sets	queue_functions.php	/^function queue_merge_sets(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_optimise	queue_functions.php	/^function queue_optimise(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_parse_nzb	queue_functions.php	/^function queue_parse_nzb(DatabaseConnection $db, server_data &$servers, array $arg_list, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_post	queue_functions.php	/^function queue_post(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_post_message	queue_functions.php	/^function queue_post_message(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_prepare_post	queue_functions.php	/^function queue_prepare_post(DatabaseConnection $db, server_data &$servers, $arg, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_purge_expire	queue_functions.php	/^function queue_purge_expire(DatabaseConnection $db, $cmd, array $arg_list, $userid, server_data &$servers,$priority=DEFAULT_PRIORITY)$/;"	f
queue_purge_expire_all	queue_functions.php	/^function queue_purge_expire_all(DatabaseConnection $db, $cmd, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_purge_spots	queue_functions.php	/^function queue_purge_spots(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_push	server_data.php	/^    public function queue_push(DatabaseConnection $db, action $item, $increase_counter=TRUE, $position=self::QUEUE_BOTTOM, $priority=NULL)$/;"	f
queue_ready	urdd.php	/^        $queue_ready = check_queue($db, $conn_list, $servers);$/;"	v
queue_sendsetinfo	queue_functions.php	/^function queue_sendsetinfo(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_set_priority	server_data.php	/^    public function queue_set_priority(DatabaseConnection $db, $action_id, $userid, $priority)$/;"	f
queue_size	server_data.php	/^    public function queue_size()$/;"	f
queue_time	action.php	/^        $this->queue_time = microtime(TRUE);$/;"	v
queue_time	action.php	/^    private $queue_time; \/\/ the time the action was put on the queue$/;"	v
queue_unpar_unrar	queue_functions.php	/^function queue_unpar_unrar(DatabaseConnection $db, $dir, $id, server_data &$servers, $userid, $preview=FALSE, $priority=DEFAULT_PRIORITY)$/;"	f
queue_update	queue_functions.php	/^function queue_update(DatabaseConnection $db, $cmd, array $arg_list, $userid, server_data &$servers,$priority=DEFAULT_PRIORITY)$/;"	f
queue_update_all	queue_functions.php	/^function queue_update_all(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queue_update_rss	queue_functions.php	/^function queue_update_rss(DatabaseConnection $db, $cmd, array $arg_list, $userid, server_data &$servers,$priority=DEFAULT_PRIORITY)$/;"	f
queue_update_rss_all	queue_functions.php	/^function queue_update_rss_all(DatabaseConnection $db, server_data &$servers, $userid, $priority=DEFAULT_PRIORITY)$/;"	f
queued	download_functions.php	/^    $queued = $db->select_query($sql, array($dlid, DOWNLOAD_FINISHED));$/;"	v
queued	post_functions.php	/^        $queued = $res[0]['cnt'];$/;"	v
quick_connect	urdd_client.php	/^    private function quick_connect($hostname, $port, $timeout)$/;"	f
quick_expire	group_functions.php	/^function quick_expire(DatabaseConnection $db, $groupid)$/;"	f
quser2	do_functions.php	/^                    $quser2 = ' AND userid = ' . $userid;$/;"	v
quser2	do_functions.php	/^                $quser2 = '';$/;"	v
r	download_functions.php	/^                    $r = fwrite($f, $line . "\\n");$/;"	v
r	download_functions.php	/^                    $r = fwrite($p, $line . "\\n");$/;"	v
r	download_functions.php	/^                    $r = fwrite($pipes[0], $contents);$/;"	v
r	download_functions.php	/^    $r = get_pref($db, 'delete_files', $userid);$/;"	v
r	download_functions.php	/^    $r = get_pref($db, 'subs_lang', $userid, '');$/;"	v
r	download_functions.php	/^    $r = get_pref($db, 'unpar', $userid);$/;"	v
r	download_functions.php	/^    $r = get_pref($db, 'unrar', $userid);$/;"	v
r	group_functions.php	/^        $r = $db->select_query($sql);$/;"	v
r	group_functions.php	/^    $r = $db->select_query($sql, array($setid1));$/;"	v
r	urdd_command.php	/^            $r = do_show($arg_list, $conn_list, $servers, $db);$/;"	v
r	urdd_functions.php	/^    $r = posix_kill($pid, $signal);$/;"	v
rar_arg	download_functions.php	/^    $rar_arg = get_config($db, 'unrar_pars', '');$/;"	v
rar_cmd	download_functions.php	/^    $rar_cmd = get_config($db, 'unrar_path', '');$/;"	v
rar_cmd	post_functions.php	/^        $rar_cmd = get_config($db, 'rar_path');$/;"	v
rar_cmd	post_functions.php	/^        $rar_cmd = my_escapeshellarg($rar_cmd);$/;"	v
rar_cnt	post_functions.php	/^    $rar_cnt = 0;$/;"	v
rar_failed	do_functions.php	/^    $rar_failed = DOWNLOAD_RAR_FAILED;$/;"	v
rar_file	post_functions.php	/^        $rar_file = $dl_path1 . $name . '.rar';$/;"	v
rar_file	post_functions.php	/^        $rar_file = my_escapeshellarg($rar_file);$/;"	v
rar_idx	post_functions.php	/^                $rar_idx = $a_file['rar_idx'];$/;"	v
rar_max_count	post_functions.php	/^                    $rar_max_count = $rarfile_count[$rarfile];$/;"	v
rar_opt	post_functions.php	/^        $rar_opt = 'a -ed -inul -idp -m5 -r -ep1 -y'; \/\/ get from db$/;"	v
rar_size_option	post_functions.php	/^        $rar_size_option =  "-v{$filesize_rar}k" ;$/;"	v
rarfile	post_functions.php	/^                $rarfile = $a_file['rarfile'];$/;"	v
rarfile_count	post_functions.php	/^        $rarfile_count = get_rar_files($db, $postid);$/;"	v
ratings	spots_functions.php	/^            $ratings = array();$/;"	v
rc	urdd.php	/^            $rc = get_exit_code($proc_status, $pid);$/;"	v
rc	urdd.php	/^        $rc = -1;$/;"	v
rc	urdd.php	/^        $rc = 0;$/;"	v
rc	urdd.php	/^        $rc = pcntl_wexitstatus($status);$/;"	v
read_options	urdd_options.php	/^    public static function read_options()$/;"	f
read_sockets	urdd_sockets.php	/^    public function read_sockets(DatabaseConnection $db, array $sq, conn_list &$conn_list, server_data &$servers)$/;"	f
ready	server_data.php	/^                    $ready = FALSE;$/;"	v
ready	server_data.php	/^                    $ready = TRUE;$/;"	v
ready	server_data.php	/^                $ready = TRUE;$/;"	v
ready	server_data.php	/^        $ready = TRUE;$/;"	v
ready_status	download_functions.php	/^        $ready_status = DOWNLOAD_READY;$/;"	v
ready_status	post_functions.php	/^    $ready_status = POST_READY;$/;"	v
reap_children	urdd.php	/^function reap_children(DatabaseConnection $db, server_data &$servers)$/;"	f
rec	server_data.php	/^        $rec = $job->get_recurrence();$/;"	v
rec_str	show_functions.php	/^            $rec_str = "(repeat every $recur sec) ";$/;"	v
rec_str	show_functions.php	/^            $rec_str = '';$/;"	v
rec_str	urdd_client.php	/^            $rec_str = " # $recurrence ";$/;"	v
rec_str	urdd_client.php	/^        $rec_str = '';$/;"	v
reconnect	nntp.class.php	/^    public function reconnect()$/;"	f
reconnects	download_functions.php	/^        $reconnects = 0;$/;"	v
recovery_par	post_functions.php	/^    $recovery_par = $row['recovery_par'];$/;"	v
recreate_addspotdata	server_data.php	/^    public function recreate_addspotdata(DatabaseConnection $db, action $item, $pause, $reset_tried_servers)$/;"	f
recreate_command	server_data.php	/^    public function recreate_command(DatabaseConnection $db, action $item, $cmd, $pause=FALSE, $reset_tried_servers=FALSE)$/;"	f
recreate_download_command	server_data.php	/^    public function recreate_download_command(DatabaseConnection $db, action $item, $pause=FALSE, $reset_tried_servers=FALSE)$/;"	f
recreate_post_command	server_data.php	/^    public function recreate_post_command(DatabaseConnection $db, action $item, $pause, $reset_tried_servers)$/;"	f
recur	show_functions.php	/^        $recur = $j['recurrence'];$/;"	v
recur_schedule	server_data.php	/^    public function recur_schedule(DatabaseConnection $db, job $job)$/;"	f
recurrence	schedule.php	/^        $this->recurrence = (int) $recurrence;$/;"	v
recurrence	schedule.php	/^    private $recurrence;$/;"	v
ref	spots_functions.php	/^                    $ref = trim($line[1], "<>\\t ");$/;"	v
ref_msg_id	spots_functions.php	/^                    $ref_msg_id = $comment['references'];$/;"	v
ref_msg_id	spots_functions.php	/^                    $ref_msg_id = $report['reference'];$/;"	v
regenerate_setnames	do_functions.php	/^function regenerate_setnames(DatabaseConnection $db, array $setidarray)$/;"	f
register_command	urdd_command.php	/^    public function register_command(command $command)$/;"	f
reload_scheduled_jobs	server_data.php	/^    public function reload_scheduled_jobs(DatabaseConnection $db)$/;"	f
reload_server	server_data.php	/^    public function reload_server(DatabaseConnection $db, $id)$/;"	f
remain	download_functions.php	/^            $remain = $total - $done;$/;"	v
remain	post_functions.php	/^                $remain = $total_count - $done_count;$/;"	v
remove_db_intensive_slot	server_data.php	/^    private function remove_db_intensive_slot()$/;"	f
remove_nntp_slot	server_data.php	/^    private function remove_nntp_slot()$/;"	f
remove_slot	server_data.php	/^    private function remove_slot()$/;"	f
remove_tried_server	action.php	/^    public function remove_tried_server($id)$/;"	f
rename_sub_files	download_functions.php	/^function rename_sub_files($folder, $language, $destination)$/;"	f
repeat	do_functions.php	/^        $repeat = trim($parts[1]);$/;"	v
repeat	do_functions.php	/^    $repeat = NULL;$/;"	v
repeat	schedule.php	/^            $repeat = NULL;$/;"	v
repeat	schedule.php	/^        $repeat = $job->get_recurrence();$/;"	v
repeat	server_data.php	/^                $repeat = NULL;$/;"	v
repeat	server_data.php	/^            $repeat = $sched['interval'];$/;"	v
report	spots_functions.php	/^                    $report = self::parse_spot_report($header);$/;"	v
report	spots_functions.php	/^        $report = array();$/;"	v
reportId	spots_functions.php	/^        $reportId = trim($header['Message-ID'], '<>');$/;"	v
report_cnt	spots_functions.php	/^            $report_cnt = $res[0]['cnt'];$/;"	v
report_group	do_functions.php	/^        $report_group = get_config($db, 'spots_reports_group');$/;"	v
reports_groupid	spots_functions.php	/^        $reports_groupid = group_by_name($db, $group_reports);$/;"	v
req_status	download_functions.php	/^    $req_status      = DOWNLOAD_READY;$/;"	v
res	do_functions.php	/^                $res = unsubscribe($db, $id);$/;"	v
res	do_functions.php	/^            $res = $db->select_query("* FROM setdata WHERE \\"ID\\" = '$setid'", 1);$/;"	v
res	do_functions.php	/^            $res = $db->select_query($sql, $limit);$/;"	v
res	do_functions.php	/^            $res = $db->select_query($sql, 50);$/;"	v
res	do_functions.php	/^        $res = $db->get_tables();$/;"	v
res	do_functions.php	/^        $res = $db->select_query("* FROM downloadinfo WHERE \\"ID\\" = ?", 1, array($dlid));$/;"	v
res	do_functions.php	/^        $res = $db->select_query($query, array($dlid));$/;"	v
res	do_functions.php	/^        $res = $db->select_query($sql);$/;"	v
res	do_functions.php	/^        $res = $db->select_query($sql, $limit);$/;"	v
res	do_functions.php	/^        $res = $db->select_query($sql, 1, array($msg_id, $userid));$/;"	v
res	do_functions.php	/^        $res = $db->select_query($sql, array($binaryid));$/;"	v
res	do_functions.php	/^        $res = $db->select_query($sql, array($setid));$/;"	v
res	do_functions.php	/^        $res = FALSE;$/;"	v
res	do_functions.php	/^        $res = array_search (strtoupper($arg_list[1]), $log_str);$/;"	v
res	do_functions.php	/^    $res = $db->select_query("\\"active\\" FROM groups WHERE \\"ID\\"=?", 1, array($groupid));$/;"	v
res	do_functions.php	/^    $res = $db->select_query("nzbs FROM spots WHERE \\"spotid\\" = ?", 1, array($spotid));$/;"	v
res	do_functions.php	/^    $res = $db->select_query($qry, array(user_status::USER_ADMIN, $timestamp, $timestamp));$/;"	v
res	do_functions.php	/^    $res = $db->select_query($query, 1, array($dlid));$/;"	v
res	do_functions.php	/^    $res = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM, $priority);$/;"	v
res	do_functions.php	/^    $res = feed_subscribed($db, $args);$/;"	v
res	do_functions.php	/^    $res = group_subscribed($db, $args);$/;"	v
res	do_functions.php	/^    $res = group_subscribed($db, $groupid);$/;"	v
res	download_functions.php	/^                    $res = $db->select_query($query, $batch_size, array($dlid, $req_status));$/;"	v
res	download_functions.php	/^                    $res = $db->select_query($query, $first_batch_size, array($dlid, $req_status));$/;"	v
res	download_functions.php	/^                $res = $mime->decode($mime_settings);$/;"	v
res	download_functions.php	/^            $res = $servers->queue_push($db, $new_item, TRUE, server_data::QUEUE_BOTTOM, NULL);$/;"	v
res	download_functions.php	/^        $res = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM, $priority);$/;"	v
res	download_functions.php	/^    $res = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM, $priority);$/;"	v
res	group_functions.php	/^            $res = array();$/;"	v
res	group_functions.php	/^        $res = $db->select_query($sql);$/;"	v
res	group_functions.php	/^        $res = $db->select_query($sql, $stepsize);$/;"	v
res	group_functions.php	/^    $res = $db->delete_query("binaries_$groupID", "\\"setID\\" NOT IN (SELECT \\"ID\\" FROM setdata WHERE \\"groupID\\" = $groupID) $keep_int");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query("parts_$groupID", "\\"binaryID\\" NOT IN (SELECT \\"binaryID\\" FROM binaries_$groupID) OR \\"date\\" < $expire $keep_int");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query('extsetdata', "\\"setID\\" NOT IN (SELECT \\"ID\\" FROM setdata) AND \\"type\\" = '$type'");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query('extsetdata', "\\"setID\\" in (SELECT \\"ID\\" FROM setdata WHERE \\"groupID\\" = '$groupID') AND \\"type\\" = '$type'");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query('merged_sets', "\\"new_setid\\" NOT IN (SELECT \\"ID\\" FROM setdata) AND \\"type\\" = '$type' ");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query('merged_sets', "\\"new_setid\\" in (SELECT \\"ID\\" FROM setdata WHERE \\"groupID\\" = '$groupID') AND \\"type\\" = '$type'");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query('setdata', " \\"groupID\\" = '$groupID' AND (\\"date\\" < $expire $Qcomplete) $keep_int");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query('setdata', "\\"groupID\\" = '$groupID'");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query('usersetinfo', "\\"setID\\" NOT IN (SELECT \\"ID\\" FROM setdata) AND \\"type\\" = '$type'");$/;"	v
res	group_functions.php	/^    $res = $db->delete_query('usersetinfo', "\\"setID\\" in (SELECT \\"ID\\" FROM setdata WHERE \\"groupID\\" = '$groupID') AND \\"type\\" = '$type'");$/;"	v
res	group_functions.php	/^    $res = $db->execute_query("UPDATE groups SET \\"last_record\\"=0, \\"first_record\\"=0, \\"mid_record\\"=0, \\"last_updated\\"=0, \\"postcount\\" =0, \\"setcount\\" = 0 WHERE \\"ID\\" = '$groupID' ");$/;"	v
res	group_functions.php	/^    $res = $db->select_query($sql);$/;"	v
res	nntp.class.php	/^            $res = $this->db->execute_query($query);$/;"	v
res	nntp.class.php	/^        $res = $this->db->execute_query($query);$/;"	v
res	nntp.class.php	/^        $res = $this->db->select_query('"ID", "name" FROM groups');$/;"	v
res	post_functions.php	/^        $res = $db->select_query($sql, 1, array($postid));$/;"	v
res	post_functions.php	/^        $res = $db->select_query($sql, array($postid,POST_FAILED) );$/;"	v
res	post_functions.php	/^        $res = $db->select_query($sqlarray($postid,POST_ACTIVE));$/;"	v
res	post_functions.php	/^        $res = $db->select_query($sqlarray($postid,POST_FINISHED));$/;"	v
res	post_functions.php	/^        $res = $db->select_query($sqlarray($postid,POST_READY));$/;"	v
res	post_functions.php	/^    $res = $db->delete_query('post_files', '"postid" = ?', array($postid));$/;"	v
res	post_functions.php	/^    $res = $db->select_query($sql, 1, array($spotid));$/;"	v
res	post_functions.php	/^    $res = $db->select_query($sql, array($postid));$/;"	v
res	post_functions.php	/^    $res = $db->select_query($sql, batch_size::POST_BATCH_SIZE);$/;"	v
res	post_functions.php	/^    $res = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM, $priority);$/;"	v
res	queue_functions.php	/^            $res = $servers->queue_push($db, $item, TRUE);$/;"	v
res	queue_functions.php	/^            $res = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM);$/;"	v
res	queue_functions.php	/^            $res = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM, $priority);$/;"	v
res	queue_functions.php	/^        $res = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM, $priority);$/;"	v
res	queue_functions.php	/^    $res = $db->select_query($query, 1, array($id));$/;"	v
res	queue_functions.php	/^    $res = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM, $priority);$/;"	v
res	server_data.php	/^            $res = $db->delete_query('schedule', '"id"=?', array($id));$/;"	v
res	server_data.php	/^        $res = $db->select_query($query);$/;"	v
res	show_functions.php	/^    $res = $db->select_query($query);$/;"	v
res	show_functions.php	/^    $res = $db->select_query($sql);$/;"	v
res	spots_functions.php	/^                $res = $db->select_query($sql, 1, array($id));$/;"	v
res	spots_functions.php	/^            $res = $db->select_query($sql, $limit);$/;"	v
res	spots_functions.php	/^            $res = $db->select_query($sql, $limit, array('', '0'));$/;"	v
res	spots_functions.php	/^        $res = $db->delete_query('spot_comments', "\\"spotid\\" NOT IN (SELECT \\"spotid\\" FROM spots) AND \\"stamp\\" < ?", array($safety_expire));$/;"	v
res	spots_functions.php	/^        $res = $db->delete_query('spot_images', "\\"spotid\\" NOT IN (SELECT \\"spotid\\" FROM spots) AND \\"stamp\\" < ?", array($safety_expire));$/;"	v
res	spots_functions.php	/^        $res = $db->delete_query('spot_reports', "\\"spotid\\" NOT IN (SELECT \\"spotid\\" FROM spots) AND \\"stamp\\" < ?", array($safety_expire));$/;"	v
res	spots_functions.php	/^        $res = $db->delete_query('spots', " ( \\"stamp\\" < ? $spam_count ) $keep_int", $inputarr);$/;"	v
res	spots_functions.php	/^        $res = $db->select_query($sql);$/;"	v
res	spots_functions.php	/^        $res = $db->select_query($sql, -1, -1, $inputarr);$/;"	v
res	spots_functions.php	/^        $res = $db->select_query($sql, 1, -1, array($message_id));$/;"	v
res	spots_functions.php	/^        $res = $db->select_query($sql, 1, -1, array($spotid));$/;"	v
res	spots_functions.php	/^        $res = $db->select_query($sql, array($safety_expire));$/;"	v
res	spots_functions.php	/^        $res = $db->select_query($sql, array('', '0'));$/;"	v
res	spots_functions.php	/^        $res = $db->select_query($sql, array('', 0));$/;"	v
res	spots_functions.php	/^        $res = $db->truncate_table('spot_comments');$/;"	v
res	spots_functions.php	/^        $res = $db->truncate_table('spot_images');$/;"	v
res	spots_functions.php	/^        $res = $db->truncate_table('spot_reports');$/;"	v
res	spots_functions.php	/^        $res = $db->truncate_table('spots');$/;"	v
res	spots_functions.php	/^        $res = array();$/;"	v
res	urdd.php	/^                $res = $db->delete_query('queueinfo', '"ID" = ? ', array($row['ID']));$/;"	v
res	urdd.php	/^                $res = $db->delete_query('queueinfo', '"ID" = ?', array($row['ID']));$/;"	v
res	urdd.php	/^        $res = $listen_sockets->select(0, $timeout_us, $sq);$/;"	v
res	urdd.php	/^    $res = $db->select_query($sql);$/;"	v
res	urdd_client.php	/^            $res = explode(' ', $data[0]);$/;"	v
res	urdd_client.php	/^    $res = $db->select_query("\\"name\\", \\"pass\\" FROM users WHERE \\"ID\\" = ?", 1, array($userid));$/;"	v
res	urdd_command.php	/^        $res = $conn_list->verify_password_db($db, $sock, $arg);$/;"	v
res	urdd_connection.php	/^                $res = $db->select_query($sql, 1, array($username, $hash_pw, user_status::USER_ACTIVE));$/;"	v
res	urdd_extsetdata.php	/^            $res = $db->select_query($sql, 1, array($setid, $name, $type));$/;"	v
res	urdd_extsetdata.php	/^    $res = $db->execute_query($sql);$/;"	v
res	urdd_extsetdata.php	/^    $res = convert_uudecode($str);$/;"	v
res	urdd_functions.php	/^    $res = $db->select_query($sql, $input_arr);$/;"	v
res	urdd_rss.php	/^        $res = $db->delete_query('extsetdata', $sql);$/;"	v
res	urdd_rss.php	/^        $res = $db->delete_query('rss_sets', $qry);$/;"	v
res	urdd_rss.php	/^        $res = $db->delete_query('usersetinfo', $sql);$/;"	v
res	urdd_rss.php	/^        $res = $db->select_query($qry);$/;"	v
res	urdd_rss.php	/^        $res = $db->select_query($qry, 1, array($link, $id));$/;"	v
res	urdd_rss.php	/^        $res = $db->select_query($qry, array($rss_id));$/;"	v
res	urdd_sockets.php	/^                    $res = @socket_write($s, $response);$/;"	v
res	urdd_sockets.php	/^                    $res = socket_write($conn, $msg);$/;"	v
res	urdd_sockets.php	/^        $res = @socket_select($connections, $null_array, $null_array, $timeout, $timeout_us); \/\/ we always give the timeout in microseconds$/;"	v
res	urdd_test.php	/^        $res = '';$/;"	v
res1	group_functions.php	/^    $res1 = $db->select_query($sql);$/;"	v
res1	urdd_extsetdata.php	/^    $res1 = $db->select_query($sql_cnt1);$/;"	v
res2	do_functions.php	/^                $res2 = $db->select_query($sql, array($binaryID));$/;"	v
res2	do_functions.php	/^            $res2 = $db->execute_query($sql);$/;"	v
res2	do_functions.php	/^        $res2 = array();$/;"	v
res2	do_functions.php	/^    $res2 = $db->select_query($sql, array($binaryid, $dlid));$/;"	v
res2	urdd_extsetdata.php	/^    $res2 = $db->select_query($sql_cnt2);$/;"	v
res3	do_functions.php	/^            $res3 = $db->select_query($sql, 1, array($setid, 'password'));$/;"	v
res3	urdd_extsetdata.php	/^    $res3 = $db->select_query($sql_cnt3);$/;"	v
res_queued	urdd.php	/^        $res_queued = $db->select_query($query, array(QUEUE_PAUSED, QUEUE_QUEUED));$/;"	v
res_running	urdd.php	/^        $res_running = $db->select_query($query, array($rstatus));$/;"	v
reschedule	server_data.php	/^    public function reschedule(DatabaseConnection$db, action &$item, $server_id)$/;"	f
reschedule_addspotdata	server_data.php	/^    public function reschedule_addspotdata(DatabaseConnection$db, action &$item, $server_id)$/;"	f
reschedule_download	server_data.php	/^    public function reschedule_download(DatabaseConnection $db, action &$item, $server_id)$/;"	f
reschedule_locked_item	urdd_functions.php	/^function reschedule_locked_item(DatabaseConnection $db, server_data &$servers, action $item)$/;"	f
reschedule_post	server_data.php	/^    public function reschedule_post(DatabaseConnection $db, action &$item, $server_id)$/;"	f
reset_connection_limits	server_data.php	/^    public function reset_connection_limits($server_id)$/;"	f
reset_connection_limits	urdd_usenet_servers.php	/^    public function reset_connection_limits($server_id=FALSE)$/;"	f
reset_download_status	urdd.php	/^function reset_download_status(DatabaseConnection $db)$/;"	f
reset_extset_headers	nntp.class.php	/^    public function reset_extset_headers()$/;"	f
reset_max_slots	urdd_usenet_servers.php	/^    public function reset_max_slots()$/;"	f
reset_servers	urdd_usenet_servers.php	/^    public function reset_servers()$/;"	f
reset_temp_failed_server	queue.php	/^    public function reset_temp_failed_server($server_id)$/;"	f
reset_tried_servers	action.php	/^    public function reset_tried_servers()$/;"	f
resp	show_functions.php	/^            $resp = $xml->asXML();$/;"	v
resp	show_functions.php	/^        $resp = "Jobs:\\n";$/;"	v
resp	show_functions.php	/^        $resp = "Load:\\n";$/;"	v
resp	show_functions.php	/^        $resp = "Newsgroups:\\n";$/;"	v
resp	show_functions.php	/^        $resp = "Queue:\\n";$/;"	v
resp	show_functions.php	/^        $resp = "RSS Feeds:\\n";$/;"	v
resp	show_functions.php	/^        $resp = "Test results:\\n";$/;"	v
resp	show_functions.php	/^        $resp = "Users:\\n";$/;"	v
resp	show_functions.php	/^        $resp = "Version: $version ($status)\\n";$/;"	v
resp	show_functions.php	/^        $resp = $xml->asXML();$/;"	v
resp	show_functions.php	/^    $resp = "Servers:\\n";$/;"	v
resp	show_functions.php	/^    $resp = "Uptime: $days days $hrs:$min:$sec\\n";$/;"	v
resp	show_functions.php	/^    $resp = '';$/;"	v
resp	show_functions.php	/^    $resp = 'Threads:' . "\\n";$/;"	v
respawn_urdd	urdd.php	/^function respawn_urdd()$/;"	f
response	do_functions.php	/^                    $response = sprintf(urdd_protocol::get_response(504), $msg[$module]);$/;"	v
response	do_functions.php	/^                    $response = urdd_protocol::get_response(200);$/;"	v
response	do_functions.php	/^                    $response = urdd_protocol::get_response(501);$/;"	v
response	do_functions.php	/^                $response = queue_update($db, urdd_protocol::COMMAND_UPDATE, array($id), $userid, $servers);$/;"	v
response	do_functions.php	/^                $response = queue_update_rss($db, urdd_protocol::COMMAND_UPDATE_RSS, array($arg_list[0]), $userid, $servers);$/;"	v
response	do_functions.php	/^                $response = urdd_protocol::get_response(200);$/;"	v
response	do_functions.php	/^                $response = urdd_protocol::get_response(501);$/;"	v
response	do_functions.php	/^            $response =  urdd_protocol::get_response(501);$/;"	v
response	do_functions.php	/^            $response = urdd_protocol::get_response(($rv === FALSE) ? 510 : 200);$/;"	v
response	do_functions.php	/^            $response = urdd_protocol::get_response(200);$/;"	v
response	do_functions.php	/^            $response = urdd_protocol::get_response(258);$/;"	v
response	do_functions.php	/^            $response = urdd_protocol::get_response(501);$/;"	v
response	do_functions.php	/^            $response = urdd_protocol::get_response(520);$/;"	v
response	do_functions.php	/^            $response =urdd_protocol::get_response( ($rv === FALSE)? 510 : 200);$/;"	v
response	do_functions.php	/^        $response = urdd_protocol::get_response(($e->getCode() == ERR_ACCESS_DENIED) ? 532 : 510);$/;"	v
response	do_functions.php	/^        $response = urdd_protocol::get_response(($rv === FALSE) ? 510 : 200);$/;"	v
response	do_functions.php	/^        $response = urdd_protocol::get_response(200);$/;"	v
response	do_functions.php	/^        $response = urdd_protocol::get_response(501);$/;"	v
response	do_functions.php	/^        $response = urdd_protocol::get_response(532);$/;"	v
response	do_functions.php	/^    $response = '';$/;"	v
response	queue_functions.php	/^                $response = sprintf(urdd_protocol::get_response(201), $item->get_id());$/;"	v
response	queue_functions.php	/^                $response = urdd_protocol::get_response(402);$/;"	v
response	queue_functions.php	/^                $response = urdd_protocol::get_responses(402);$/;"	v
response	queue_functions.php	/^            $response = sprintf(urdd_protocol::get_response(201), $item->get_id());$/;"	v
response	queue_functions.php	/^            $response = sprintf(urdd_protocol::get_response(202), $id_str);$/;"	v
response	queue_functions.php	/^            $response = sprintf(urdd_protocol::get_response(404), $id_str);$/;"	v
response	queue_functions.php	/^            $response = urdd_protocol::get_response(402);$/;"	v
response	queue_functions.php	/^            $response = urdd_protocol::get_response(403);$/;"	v
response	queue_functions.php	/^            $response = urdd_protocol::get_response(599);$/;"	v
response	queue_functions.php	/^        $response = queue_gensets_all($db, $servers, $userid, $priority);$/;"	v
response	queue_functions.php	/^        $response = queue_purge_expire_all($db, $cmd, $servers, $userid, $priority);$/;"	v
response	queue_functions.php	/^        $response = queue_update_all($db, $servers, $userid, $priority);$/;"	v
response	queue_functions.php	/^        $response = queue_update_rss_all($db, $servers, $userid, $priority);$/;"	v
response	queue_functions.php	/^        $response = urdd_protocol::get_response(403);$/;"	v
response	queue_functions.php	/^        $response = urdd_protocol::get_response(501);$/;"	v
response	queue_functions.php	/^        $response = urdd_protocol::get_response(520);$/;"	v
response	urdd.php	/^            $response = '';$/;"	v
response	urdd.php	/^        $response = '';$/;"	v
response	urdd_command.php	/^                    $response = urdd_protocol::get_response(530);$/;"	v
response	urdd_command.php	/^                $response = urdd_protocol::get_response(200);$/;"	v
response	urdd_command.php	/^                $response = urdd_protocol::get_response(501);$/;"	v
response	urdd_command.php	/^                $response = urdd_protocol::get_response(513);$/;"	v
response	urdd_command.php	/^                $response = urdd_protocol::get_response(532);$/;"	v
response	urdd_command.php	/^            $response = create_download($db, $servers, $userid, FALSE);$/;"	v
response	urdd_command.php	/^            $response = create_download($db, $servers, $userid, TRUE);$/;"	v
response	urdd_command.php	/^            $response = do_preempt($db, $servers, $arg_list, $userid);$/;"	v
response	urdd_command.php	/^            $response = do_schedule($db, $arg_list, $servers, $userid);$/;"	v
response	urdd_command.php	/^            $response = do_unschedule($db, $arg_list, $servers, $userid);$/;"	v
response	urdd_command.php	/^            $response = queue_merge_sets($db, $servers, $args, $userid, $priority);$/;"	v
response	urdd_command.php	/^            $response = queue_prepare_post($db, $servers, $arg, $userid, $priority);$/;"	v
response	urdd_command.php	/^            $response = restart_download($db, $servers, $userid, $arg, $priority);$/;"	v
response	urdd_command.php	/^            $response = restart_post($db, $cmd->get_code(), $servers, $userid, $arg, $priority);$/;"	v
response	urdd_command.php	/^            $response = sprintf(urdd_protocol::get_response(500), "'$cmd_str'");$/;"	v
response	urdd_command.php	/^            $response = sprintf(urdd_protocol::get_response(503), $e->getMessage());$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response($code) . $msg . ".\\n";$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response(231);$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response(240);$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response(331);$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response(410);$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response(501);$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response(530);$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response(532);$/;"	v
response	urdd_command.php	/^            $response = urdd_protocol::get_response(533);$/;"	v
response	urdd_command.php	/^        $response = '';$/;"	v
response	urdd_command.php	/^        $response = create_make_nzb($db, $servers, $userid, $priority-1);$/;"	v
response	urdd_command.php	/^        $response = do_cancel($db, $servers, $arg_list, $userid);$/;"	v
response	urdd_command.php	/^        $response = do_group($db, $servers, $arg_list);$/;"	v
response	urdd_command.php	/^        $response = do_move($db, $servers, $arg_list, $userid);$/;"	v
response	urdd_command.php	/^        $response = do_pause($db, $servers, $arg_list, FALSE, $userid);$/;"	v
response	urdd_command.php	/^        $response = do_pause($db, $servers, $arg_list, TRUE, $userid);$/;"	v
response	urdd_command.php	/^        $response = do_priority($db, $arg_list, $servers, $userid);$/;"	v
response	urdd_command.php	/^        $response = do_set($db, $servers, $arg_list, $userid);$/;"	v
response	urdd_command.php	/^        $response = do_stop($db, $servers, $arg_list, $userid);$/;"	v
response	urdd_command.php	/^        $response = do_subscribe($db, $arg_list, $servers, $userid);$/;"	v
response	urdd_command.php	/^        $response = do_subscribe_rss($db, $arg_list, $servers, $userid);$/;"	v
response	urdd_command.php	/^        $response = queue_adddata($db, $servers, $arg_list, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_addspotdata($db, $servers, $arg_list, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_check_version($db, $servers, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_cleandb($db, $servers, $arg, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_cleandir($db, $servers, $arg, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_expire_spots($db, $servers, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_find_servers($db, $servers, $arg_list, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_gensets($db, $servers, $arg_list, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_getblacklist($db, $servers, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_getnfo($db, $servers, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_getsetinfo($db, $servers, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_getspot_comments($db, $servers, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_getspot_images($db, $servers, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_getspot_reports($db, $servers, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_getspots($db, $servers, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_getwhitelist($db, $servers, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_groups($db, $servers, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_optimise($db, $servers, $userid, $priority+1);$/;"	v
response	urdd_command.php	/^        $response = queue_parse_nzb($db, $servers, $arg_list, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_post_message($db, $servers, $args, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_purge_expire($db, urdd_protocol::COMMAND_EXPIRE, $arg_list, $userid, $servers, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_purge_expire($db, urdd_protocol::COMMAND_EXPIRE_RSS, $arg_list, $userid, $servers, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_purge_expire($db, urdd_protocol::COMMAND_PURGE, $arg_list, $userid, $servers, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_purge_expire($db, urdd_protocol::COMMAND_PURGE_RSS, $arg_list, $userid, $servers, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_purge_spots($db, $servers, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_sendsetinfo($db, $servers, $userid, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_unpar_unrar($db, '', $arg, $servers, $userid, FALSE, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_update($db, urdd_protocol::COMMAND_UPDATE, $arg_list, $userid, $servers, $priority);$/;"	v
response	urdd_command.php	/^        $response = queue_update_rss($db, urdd_protocol::COMMAND_UPDATE_RSS, $arg_list, $userid, $servers, $priority);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(221);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(222);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(223);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(231);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(253);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(254);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(256);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(260);$/;"	v
response	urdd_command.php	/^        $response = urdd_protocol::get_response(261) . $username . "\\n.\\n";$/;"	v
response	urdd_help.php	/^                    $response = sprintf(urdd_protocol::get_response(500), "'{$args[0]}'");$/;"	v
response	urdd_help.php	/^                    $response = urdd_protocol::get_response(257);$/;"	v
response	urdd_help.php	/^                $response = urdd_protocol::get_response(252);$/;"	v
response	urdd_help.php	/^            $response = urdd_protocol::get_response(252);$/;"	v
response	urdd_sockets.php	/^                    $response = '';$/;"	v
responses	urdd_protocol.php	/^    private static $responses = array ($/;"	v
restart	urdd.php	/^    $restart = $config['urdd_restart'];$/;"	v
restart_download	download_functions.php	/^function restart_download(DatabaseConnection $db, server_data &$servers, $userid, $id, $priority=NULL)$/;"	f
restart_handler	urdd_error.php	/^function restart_handler($signo=0)$/;"	f
restart_post	post_functions.php	/^function restart_post(DatabaseConnection $db, $command, server_data &$servers, $userid, $id, $priority=NULL)$/;"	f
restart_urdd	urdd_client.php	/^   public function restart_urdd()$/;"	f
restart_urdd	urdd_functions.php	/^function restart_urdd(DatabaseConnection $db, server_data &$servers)$/;"	f
restarted	urdd.php	/^                    $restarted = TRUE;$/;"	v
restarted	urdd.php	/^                $restarted = FALSE;$/;"	v
restore_old_queue	urdd.php	/^function restore_old_queue(DatabaseConnection $db, server_data &$servers, conn_list &$conn_list, $restart)$/;"	f
restore_server_settings	server_data.php	/^    public function restore_server_settings()$/;"	f
restore_server_settings	urdd_usenet_servers.php	/^    public function restore_server_settings()$/;"	f
result	urdd_test.php	/^        $this->result = $result;$/;"	v
result	urdd_test.php	/^    public $result; \/\/ bool$/;"	v
results	urdd_test.php	/^        $this->results = array();$/;"	v
results	urdd_test.php	/^    private $results;$/;"	v
return	urdd_client.php	/^        $return = array();$/;"	v
retval	do_functions.php	/^            $retval = FILE_NOT_FOUND;$/;"	v
retval	do_functions.php	/^        $retval = FILE_NOT_FOUND;$/;"	v
retval	do_functions.php	/^        $retval = NO_ERROR;$/;"	v
rights	urdd_command.php	/^        $this->rights = $rights;$/;"	v
rights	urdd_command.php	/^    private $rights; \/\/ needed rights to execute this$/;"	v
row	do_functions.php	/^        $row = $res[0];$/;"	v
row	post_functions.php	/^        $row = $res[0];$/;"	v
row	post_functions.php	/^    $row = $res[0];$/;"	v
rss	do_functions.php	/^                $rss = new urdd_rss($db);$/;"	v
rss	do_functions.php	/^        $rss = new urdd_rss($db);$/;"	v
rss	do_functions.php	/^    $rss = new urdd_rss($db);$/;"	v
rss	urdd_rss.php	/^        $rss = fetch_rss::do_fetch_rss($url, $this->cache_dir, $username, $password);$/;"	v
rss_id	urdd_rss.php	/^        $rss_id = $rss_info['id'];$/;"	v
rss_info	do_functions.php	/^        $rss_info = get_rss_info($db, $args);$/;"	v
rss_info	urdd_rss.php	/^        $rss_info = get_rss_info($db, $rss_id);$/;"	v
rss_update	urdd_rss.php	/^    public function rss_update(DatabaseConnection $db, array $rss_info)$/;"	f
rstatus	urdd.php	/^        $rstatus = QUEUE_RUNNING;$/;"	v
run_all_scripts	download_functions.php	/^function run_all_scripts(DatabaseConnection $db, action $item, $dlid, $dl_status)$/;"	f
run_scripts	download_functions.php	/^function run_scripts(DatabaseConnection $db, action $item, $dlid, $dl_status, $global = FALSE)$/;"	f
rv	do_functions.php	/^                $rv = $servers->pause($db, $id, $pause, $e_userid);$/;"	v
rv	do_functions.php	/^                $rv = $servers->pause_cmd($db, $cmd, $arg, $pause, $e_userid);$/;"	v
rv	do_functions.php	/^                $rv = FALSE;$/;"	v
rv	do_functions.php	/^            $rv = $server->unschedule($db, $e_userid, $arg);$/;"	v
rv	do_functions.php	/^            $rv = $server->unschedule_all($db, $e_userid);$/;"	v
rv	do_functions.php	/^            $rv = $server->unschedule_cmd($db, $e_userid, $cmd, $arg);$/;"	v
rv	do_functions.php	/^            $rv = $servers->delete($db, $id, $e_userid, TRUE);$/;"	v
rv	do_functions.php	/^            $rv = $servers->delete_cmd($db, $e_userid, $cmd, $arg, TRUE);$/;"	v
rv	do_functions.php	/^            $rv = $servers->move_top($db, $id, $e_userid);$/;"	v
rv	do_functions.php	/^            $rv = $servers->stop($db, $id, $e_userid);$/;"	v
rv	do_functions.php	/^            $rv = FALSE;$/;"	v
rv	do_functions.php	/^        $rv = @chmod($dl_path, 0775); \/\/ sometimes mkdir doesn't set the perms correctly (due to umask??), make sure it is set correctly now$/;"	v
rv	do_functions.php	/^        $rv = @mkdir($dl_path, 0775, TRUE);$/;"	v
rv	do_functions.php	/^        $rv = NNTP_NOT_CONNECTED_ERROR;$/;"	v
rv	do_functions.php	/^        $rv = NO_ERROR;$/;"	v
rv	do_functions.php	/^        $rv = update_headers($db, $nzb, $groupArr, $item, $server_id);$/;"	v
rv	do_functions.php	/^        $rv = update_headers($db, $nzb, $groupArr_comments, $item, $server_id);$/;"	v
rv	do_functions.php	/^        $rv = update_headers($db, $nzb, $groupArr_reports, $item, $server_id);$/;"	v
rv	do_functions.php	/^        $rv = update_headers($db, $nzb, $groupArr_spots, $item, $server_id);$/;"	v
rv	do_functions.php	/^    $rv = $nzb->update_newsgroup($groupArr, $item);$/;"	v
rv	do_functions.php	/^    $rv = FALSE;$/;"	v
rv	do_functions.php	/^    $rv = NO_ERROR;$/;"	v
rv	do_functions.php	/^    $rv = preg_match ('\/^(\\d+\\.\\d+\\.\\d+)[ \\t]+(\\d)+[ \\t]+(.*)$\/', $vstr, $matches);$/;"	v
rv	download_functions.php	/^                    $rv = @fwrite($fp, fread($fpr, 8192));$/;"	v
rv	download_functions.php	/^                $rv = $rv_tmp;$/;"	v
rv	download_functions.php	/^                $rv = proc_close($process);$/;"	v
rv	download_functions.php	/^        $rv = is_dir($dl_path) && is_writable($dl_path);$/;"	v
rv	download_functions.php	/^    $rv = $rv_tmp = 0;$/;"	v
rv	download_functions.php	/^    $rv = @create_dir($dl_path, 0775);$/;"	v
rv	download_functions.php	/^    $rv = proc_close($process);$/;"	v
rv	nntp.class.php	/^                $rv = $this->parse_messages($msgs, $mindate, $older_counter, $blacklist_counter, $get_extsetdata, $parse_spots, $parse_spots_comments, $parse_spots_reports, $poster_blacklist);$/;"	v
rv	post_functions.php	/^                $rv = $db->select_query($sql, array(POST_FINISHED, POST_FAILED, $postid));$/;"	v
rv	post_functions.php	/^        $rv = @create_dir($dl_path3, 0775);$/;"	v
rv	post_functions.php	/^    $rv = @create_dir($dl_path1, 0775);$/;"	v
rv	post_functions.php	/^    $rv = @create_dir($dl_path2, 0775);$/;"	v
rv	queue.php	/^                    $rv = $q->pause($do_pause, $userid);$/;"	v
rv	queue.php	/^                $rv = $q->pause($do_pause, $userid);$/;"	v
rv	queue.php	/^            $rv = $this->move_down($db, $cmd, $arg, $userid);$/;"	v
rv	queue.php	/^            $rv = $this->move_up($db, $cmd, $arg, $userid);$/;"	v
rv	queue_functions.php	/^                $rv = $servers->queue_push($db, $item, TRUE, server_data::QUEUE_BOTTOM, $priority);$/;"	v
rv	queue_functions.php	/^        $rv = TRUE;$/;"	v
rv	server_data.php	/^                    $rv = $this->queue_push($db, $item, FALSE, self::QUEUE_TOP);$/;"	v
rv	server_data.php	/^                $rv = TRUE;$/;"	v
rv	server_data.php	/^            $rv = $this->queue->pause($db, $id, $pause, $userid);$/;"	v
rv	server_data.php	/^            $rv = $this->queue->pause_cmd($db, $cmd, $arg, $do_pause, $userid);$/;"	v
rv	server_data.php	/^            $rv = FALSE;$/;"	v
rv	server_data.php	/^            $rv = TRUE;$/;"	v
rv	server_data.php	/^        $rv = $rv > 0;$/;"	v
rv	server_data.php	/^        $rv = $this->queue->delete_ids($db, $q_ids, $userid, $delete_db);$/;"	v
rv	spots_functions.php	/^        $rv = preg_match_all('|(https?:\\\/\\\/[-a-z0-9_:.\/&%!@#$?^()+=\\\\;]+)|i', $data, $matches);$/;"	v
rv	urdd.php	/^        $rv = $cmd_table[$cmd_code]($db, $item);$/;"	v
rv	urdd.php	/^    $rv = NO_ERROR;$/;"	v
rv	urdd_client.php	/^            $rv = $this->sock->read_line();$/;"	v
rv	urdd_client.php	/^            $rv = @socket_select($null_array, $sb, $null_array, 0); \/\/ check if socket is writable and will not block$/;"	v
rv	urdd_client.php	/^        $rv = $this->sock->read_line();$/;"	v
rv	urdd_client.php	/^        $rv = $this->sock->write_line($cmd);$/;"	v
rv	urdd_client.php	/^        $rv = FALSE;$/;"	v
rv	urdd_command.php	/^        $rv = do_command($db, $line, $response, $conn_list, $sock, $servers, $userid, $priority, FALSE);$/;"	v
rv	urdd_config.php	/^            $rv = create_dir($p, 0775); \/\/ and create the paths if they exist$/;"	v
rv	urdd_config.php	/^        $rv = @mkdir($path, 0775, TRUE); \/\/ if not make it (set the group rights to rwx because we use the group mostly)$/;"	v
rv	urdd_config.php	/^        $rv = @mkdir($path, 0775, TRUE);$/;"	v
rv	urdd_functions.php	/^            $rv = @chmod ($f, $ndp);$/;"	v
rv	urdd_functions.php	/^            $rv = @chmod ($f, $np);$/;"	v
rv	urdd_functions.php	/^            $rv = @chmod($dir, $ndp);$/;"	v
rv	urdd_functions.php	/^            $rv = @chmod($dir, $np);$/;"	v
rv	urdd_functions.php	/^            $rv = rename($a_file, $user_dlpath . DIRECTORY_SEPARATOR . basename($a_file)) && $rv;$/;"	v
rv	urdd_functions.php	/^        $rv = @chmod($user_dlpath, 0775); \/\/ sometimes mkdir doesn't set the perms correctly (due to umask??), make sure it is set correctly now$/;"	v
rv	urdd_functions.php	/^        $rv = TRUE;$/;"	v
rv	urdd_functions.php	/^        $rv = mkdir($user_dlpath, 0775, TRUE);$/;"	v
rv	urdd_functions.php	/^        $rv = rename($from, $to);$/;"	v
rv	urdd_functions.php	/^    $rv = rename($from, $to);$/;"	v
rv	urdd_rss.php	/^        $rv = preg_match('\/size\\h*:?\\h*([\\d.,]+)\\h*([kmgt]b?)?\/i', $description, $matches);$/;"	v
rv	urdd_sockets.php	/^                $rv = socket_listen($sock);$/;"	v
rv	urdd_sockets.php	/^            $rv = @socket_bind($sock, $address, $port);$/;"	v
rv1	urdd.php	/^            $rv1 = posix_setgid($ginfo['gid']);$/;"	v
rv1	urdd.php	/^            $rv1 = posix_setuid($uinfo['uid']);$/;"	v
rv2	urdd.php	/^            $rv2 = posix_setegid($ginfo['gid']);$/;"	v
rv2	urdd.php	/^            $rv2 = posix_seteuid($uinfo['uid']);$/;"	v
s	nntp.class.php	/^            $s = gmp_strval($start);$/;"	v
s	server_data.php	/^        $s = get_usenet_server($db, $id, FALSE);$/;"	v
s	urdd_usenet_servers.php	/^                $s = get_usenet_server($db, $srv->get_id(), FALSE);$/;"	v
s_time	download_functions.php	/^            $s_time = microtime(TRUE);$/;"	v
s_time	group_functions.php	/^    $s_time = microtime(TRUE);$/;"	v
safety_expire	spots_functions.php	/^        $safety_expire = $time - (24 * 3600);$/;"	v
salt	urdd_connection.php	/^                    $salt = get_salt($db, $username);$/;"	v
sb	urdd_client.php	/^            $sb = array($this->sock);$/;"	v
sched_time	urdd.php	/^            $sched_time = $servers->get_first_timeout();$/;"	v
sched_time	urdd.php	/^        $sched_time = NULL;$/;"	v
sched_timeout	urdd.php	/^            $sched_timeout = max(0, $sched_time - time());$/;"	v
sched_timeout	urdd.php	/^        $sched_timeout = urdd_sockets::DEFAULT_CHECK_TIMEOUT;$/;"	v
schedule	schedule.php	/^class schedule$/;"	c
schedule	server_data.php	/^        $this->schedule = new schedule();$/;"	v
schedule	server_data.php	/^    private $schedule; \/\/ here we store all the scheduled jobs$/;"	v
schedule	urdd_client.php	/^    public function schedule($cmd, $arg, $timestamp, $recurrence=NULL)$/;"	f
schedule_enable_server	server_data.php	/^    public function schedule_enable_server(DatabaseConnection $db, $server_id, $userid, $timeout=3600, $priority=DEFAULT_USENET_SERVER_PRIORITY)$/;"	f
schedule_locked_item	urdd_functions.php	/^function schedule_locked_item(DatabaseConnection $db, server_data &$servers, action $item)$/;"	f
schedule_size	server_data.php	/^    public function schedule_size()$/;"	f
scheduler	urdd_config.php	/^    $scheduler = get_config($db, 'scheduler', TRUE);$/;"	v
scripts	download_functions.php	/^        $scripts = get_pref($db, 'global_scripts', $userid);$/;"	v
scripts	download_functions.php	/^        $scripts = get_pref($db, 'user_scripts', $userid);$/;"	v
scripts	download_functions.php	/^    $scripts = explode("\\n", $scripts);$/;"	v
scripts_path	download_functions.php	/^    $scripts_path = get_dlpath($db);$/;"	v
sd	show_functions.php	/^    $sd = $server_data->get_slot_data();$/;"	v
sec	show_functions.php	/^    $sec = $uptime % 60;$/;"	v
secure_port	urdd_usenet_servers.php	/^                        $secure_port = $port;$/;"	v
secure_port	urdd_usenet_servers.php	/^                        $secure_port = NULL;$/;"	v
segment_attr	do_functions.php	/^            $segment_attr = $segment->attributes();$/;"	v
segment_count	do_functions.php	/^            $segment_count = 0;$/;"	v
segments	do_functions.php	/^            $segments = count($nzbs);$/;"	v
select	urdd_sockets.php	/^    public function select($timeout, $timeout_us, array &$connections)$/;"	f
select_group	nntp.class.php	/^    public function select_group($groupid, &$code)$/;"	f
select_group_name	nntp.class.php	/^    private function select_group_name($name, &$code)$/;"	f
select_thread_count	download_functions.php	/^function select_thread_count($dlsize, $nr_threads)$/;"	f
send_multi_command	urdd_client.php	/^    protected function send_multi_command($cmd)$/;"	f
sendsetinfo	urdd_client.php	/^    public function sendsetinfo()$/;"	f
server	nntp.class.php	/^        $this->server = $server;$/;"	v
server	nntp.class.php	/^    private $server;           \/\/ server name$/;"	v
server	show_functions.php	/^            $server = $xml->servers->addChild('server');$/;"	v
server	show_functions.php	/^        $server = $t['server'];$/;"	v
server	urdd.php	/^function server(urdd_sockets $listen_sockets, DatabaseConnection $db, server_data &$servers)$/;"	f
server_data	server_data.php	/^class server_data { \/\/ lots of cleaning up to do$/;"	c
server_id	do_functions.php	/^                    $server_id = $arg_list[2];$/;"	v
server_id	do_functions.php	/^                $server_id = $arg_list[1];$/;"	v
server_id	do_functions.php	/^            $server_id = $item->get_preferred_server();$/;"	v
server_id	do_functions.php	/^            $server_id = $servers->get_update_server();$/;"	v
server_id	do_functions.php	/^        $server_id = $item->get_active_server();$/;"	v
server_id	do_functions.php	/^        $server_id = $item->get_preferred_server();$/;"	v
server_id	do_functions.php	/^    $server_id = $item->get_active_server();$/;"	v
server_id	download_functions.php	/^            $server_id = $item->get_preferred_server();$/;"	v
server_id	download_functions.php	/^        $server_id = $item->get_active_server();$/;"	v
server_id	post_functions.php	/^            $server_id = $item->get_preferred_server();$/;"	v
server_id	post_functions.php	/^        $server_id = $item->get_active_server();$/;"	v
server_id	server_data.php	/^                            $server_id = 0;$/;"	v
server_id	server_data.php	/^                        $server_id = $item->get_preferred_server();$/;"	v
server_id	server_data.php	/^                        $server_id = $this->get_update_server();$/;"	v
server_id	server_data.php	/^                $server_id = $this->servers->find_free_slot($action->get_all_failed_servers(), $action->need_posting());$/;"	v
server_id	server_data.php	/^            $server_id = $action->get_preferred_server();$/;"	v
server_id	thread.php	/^        $server_id = $item->get_active_server();$/;"	v
server_id	urdd.php	/^                    $server_id = 0;$/;"	v
server_id	urdd_usenet_servers.php	/^                $server_id = $srv->get_id();$/;"	v
server_id	urdd_usenet_servers.php	/^        $server_id = FALSE;$/;"	v
server_name	show_functions.php	/^        $server_name = get_server_name($db, $server);$/;"	v
server_needs_auth	nntp.class.php	/^    public function server_needs_auth($group)$/;"	f
servers	do_functions.php	/^    $servers = get_server_data($db);$/;"	v
servers	server_data.php	/^        $this->servers = new usenet_servers();$/;"	v
servers	server_data.php	/^    private $servers; \/\/ these are all the news servers that we know of, each has its own thread_list$/;"	v
servers	show_functions.php	/^    $servers = $server_data->get_servers();$/;"	v
servers	urdd.php	/^    $servers = get_server_data($db);$/;"	v
servers	urdd.php	/^    $servers = new server_data(get_config($db, 'queue_size'), $nntp_maxthreads, $urdd_maxthreads, $db_intensive_maxthreads);$/;"	v
servers	urdd_usenet_servers.php	/^        $this->servers = array();$/;"	v
servers	urdd_usenet_servers.php	/^    private $servers;$/;"	v
set	urdd_client.php	/^    public function set($parameter, $value1, $value2='', $value3='')$/;"	f
setID	group_functions.php	/^            $setID = md5($dlname . $groupname . $poster . $cntFull);$/;"	v
setID	group_functions.php	/^    public $setID;$/;"	v
set_active_server	action.php	/^    public function set_active_server($id)$/;"	f
set_array	group_functions.php	/^            $set_array = new TableSetData;$/;"	v
set_command	action.php	/^    public function set_command($cmd)$/;"	f
set_db_version	urdd_config.php	/^function set_db_version(DatabaseConnection $db)$/;"	f
set_dbid	action.php	/^    public function set_dbid($id)$/;"	f
set_dirpermissions	urdd_functions.php	/^function set_dirpermissions($dir, $np, $ndp)$/;"	f
set_dlpath	action.php	/^    public function set_dlpath($path)$/;"	f
set_download_dir	download_functions.php	/^function set_download_dir(DatabaseConnection $db, $id, $destination)$/;"	f
set_handlers	urdd_error.php	/^function set_handlers()$/;"	f
set_id	schedule.php	/^    public function set_id($id)$/;"	f
set_last_cmd	urdd_connection.php	/^    public function set_last_cmd($line)$/;"	f
set_list	group_functions.php	/^                $set_list = array();$/;"	v
set_list	group_functions.php	/^        $set_list = array();$/;"	v
set_list	group_functions.php	/^    $set_list = array();$/;"	v
set_need_nntp	action.php	/^    public function set_need_nntp($nntp)$/;"	f
set_permissions	urdd_functions.php	/^function set_permissions(DatabaseConnection $db, $dir)$/;"	f
set_pid_file	urdd_config.php	/^function set_pid_file($pid_file)$/;"	f
set_preferred_server	action.php	/^    public function set_preferred_server($id)$/;"	f
set_preview	action.php	/^    public function set_preview($p)$/;"	f
set_priorities	queue.php	/^    public function set_priorities(DatabaseConnection $db, array $action_ids, $userid, $priority)$/;"	f
set_priority	action.php	/^    public function set_priority($priority, $userid)$/;"	f
set_priority	queue.php	/^    public function set_priority(DatabaseConnection $db, $action_id, $userid, $priority)$/;"	f
set_priority	urdd_usenet_servers.php	/^    public function set_priority($prio)$/;"	f
set_priority	urdd_usenet_servers.php	/^    public function set_priority($server_id, $prio)$/;"	f
set_server_priority	server_data.php	/^    public function set_server_priority($server_id, $priority)$/;"	f
set_start_time	action.php	/^    public function set_start_time()$/;"	f
set_state	urdd_connection.php	/^    public function set_state($state)$/;"	f
set_status	thread.php	/^    public function set_status($stat)$/;"	f
set_timeout	urdd_connection.php	/^    public function set_timeout($timeout)$/;"	f
set_update_server	server_data.php	/^    public function set_update_server($srv)$/;"	f
set_update_server	urdd_usenet_servers.php	/^                                $set_update_server = FALSE;$/;"	v
set_update_server	urdd_usenet_servers.php	/^        $set_update_server = TRUE;$/;"	v
set_update_server	urdd_usenet_servers.php	/^    public function set_update_server($server_id)$/;"	f
set_urdd_userid	urdd.php	/^function set_urdd_userid(DatabaseConnection $db)$/;"	f
set_userid	urdd_connection.php	/^    public function set_userid($uid)$/;"	f
set_username	urdd_connection.php	/^    public function set_username($username)$/;"	f
setcount	do_functions.php	/^        $setcount = count_sets_feed($db, $feed);$/;"	v
setcount	do_functions.php	/^        $setcount = count_sets_group($db, $gr);$/;"	v
setcount	do_functions.php	/^        $setcount = count_sets_group($db, $groupid);$/;"	v
setcount	do_functions.php	/^    $setcount = count_sets_group($db, $groupid);$/;"	v
setcount	group_functions.php	/^    $setcount = count_sets_group($db, $groupid1);$/;"	v
setid	do_functions.php	/^            $setid = $args[2];$/;"	v
setid	urdd_extsetdata.php	/^        $setid = $row[0];$/;"	v
setid1	do_functions.php	/^    $setid1 = $elems[0];$/;"	v
setid2	do_functions.php	/^    $setid2 = $elems;$/;"	v
setid2	urdd_client.php	/^        $setid2 = '';$/;"	v
setid_list	urdd_client.php	/^                $setid_list = '';$/;"	v
setid_list	urdd_client.php	/^        $setid_list = '';$/;"	v
setidarray	urdd_extsetdata.php	/^    $setidarray = array();$/;"	v
setids	do_functions.php	/^    $setids = preg_split('\/[\\s]+\/', $item->get_args());$/;"	v
setinfo	urdd_extsetdata.php	/^            $setinfo = $db->select_query($sql[0], $step, $start);$/;"	v
setname	do_functions.php	/^        $setname = generate_set_name($db, $namevalues);$/;"	v
settings	urdd_command.php	/^        $this->settings = array($/;"	v
settings	urdd_command.php	/^    private $settings = array();$/;"	v
sfv_cmd	download_functions.php	/^    $sfv_cmd = my_escapeshellcmd(get_config($db, 'cksfv_path', ''));$/;"	v
shortopt	urdd_options.php	/^    private static $shortopt = '46FDp:t:vh?k::l:L:H:rRc::u:g:NnPTf::';$/;"	v
show	urdd_client.php	/^    public function show($var = 'threads', $output_type='text')$/;"	f
show_time	show_functions.php	/^function show_time($output_type)$/;"	f
show_uptime	show_functions.php	/^function show_uptime($output_type)$/;"	f
shutdown	urdd_client.php	/^    public function shutdown()$/;"	f
shutdown_handler	urdd_error.php	/^function shutdown_handler()$/;"	f
shutdown_urdd	urdd_functions.php	/^function shutdown_urdd(DatabaseConnection $db, server_data &$servers)$/;"	f
sig	spots_functions.php	/^                    $sig = trim($line[1]);$/;"	v
sig	spots_functions.php	/^        $sig = explode('.', $addr[0]);$/;"	v
sig_handler	urdd_error.php	/^function sig_handler($signo=0)$/;"	f
size	do_functions.php	/^            $size = $res[0]['size'];$/;"	v
size	do_functions.php	/^            $size = (int)($segment_attr['bytes']);$/;"	v
size	do_functions.php	/^            $size = get_binary_size($db, $binid, $groupid);$/;"	v
size	do_functions.php	/^        $size = $arr2['size'];$/;"	v
size	do_functions.php	/^    $size = 0;$/;"	v
size	download_functions.php	/^    $size = $p_cnt = $a_cnt = $e_cnt = $groupid = (int) 0;$/;"	v
size	group_functions.php	/^            $size = $arr['totalsize'];$/;"	v
size	group_functions.php	/^            $size = $row['totalsize'];$/;"	v
size	group_functions.php	/^    public $size;$/;"	v
size	post_functions.php	/^    $size = dirsize($dir);$/;"	v
size	queue.php	/^    public function size()$/;"	f
size	schedule.php	/^    public function size()$/;"	f
size	thread.php	/^    public function size()$/;"	f
size	urdd_connection.php	/^    public function size()$/;"	f
size	urdd_rss.php	/^                $size = 0;$/;"	v
size	urdd_rss.php	/^                $size = unformat_size($size . $order[0], 1024);$/;"	v
size	urdd_rss.php	/^            $size = isset($matches[1]) ? trim($matches[1]) : 0;$/;"	v
size	urdd_rss.php	/^            $size = self::get_size_from_description($summary);$/;"	v
size	urdd_rss.php	/^            $size = str_replace(',', '.', $size);$/;"	v
size	urdd_rss.php	/^        $size = 0;$/;"	v
size	urdd_rss.php	/^        $size = self::get_size_from_description($description);$/;"	v
slots_available	server_data.php	/^    public function slots_available()$/;"	f
sock	urdd_client.php	/^            $this->sock = new socket();$/;"	v
sock	urdd_client.php	/^        $this->sock = NULL;$/;"	v
sock	urdd_client.php	/^        $this->sock = new socket();$/;"	v
sock	urdd_client.php	/^    private $sock;$/;"	v
sock	urdd_sockets.php	/^            $sock = $this->get_listen_socket($address, $port, FALSE);$/;"	v
sock	urdd_sockets.php	/^            $sock = $this->get_listen_socket($address6, $port, TRUE);$/;"	v
sock	urdd_sockets.php	/^        $sock = @socket_create($af, SOCK_STREAM, SOL_TCP);$/;"	v
socket	urdd_connection.php	/^        $this->socket = $sock;$/;"	v
socket	urdd_connection.php	/^        $this->socket = NULL;$/;"	v
socket	urdd_connection.php	/^    private $socket;$/;"	v
sockets	urdd_sockets.php	/^        $sockets = array();$/;"	v
spam_count	spots_functions.php	/^            $spam_count = " OR spots.\\"reports\\" > ?";$/;"	v
spam_count	spots_functions.php	/^        $spam_count = $keep_int = '';$/;"	v
speed	download_functions.php	/^            $speed = ($time_diff > 0) ? (round($bytes \/ $time_diff)) : 0;$/;"	v
speed	post_functions.php	/^                $speed = ($time_diff > 0) ? (round($bytes \/ $time_diff)) : 0;$/;"	v
speedmemory	nntp.class.php	/^        $speedmemory = 100;$/;"	v
split_filename	urdd_functions.php	/^function split_filename($filename)$/;"	f
split_response	urdd_client.php	/^    protected function split_response($lines)$/;"	f
spotParser	spots_functions.php	/^        $spotParser = new SpotParser();$/;"	v
spotSigning	spots_functions.php	/^        $spotSigning = new SpotSigning(extension_loaded('openssl'));$/;"	v
spot_data	spots_functions.php	/^                    $spot_data = self::parse_spot_header($header, $msg_id, $spots_blacklist);$/;"	v
spot_data	spots_functions.php	/^        $spot_data = array($/;"	v
spot_data	spots_functions.php	/^        $spot_data = array_merge($spotParser->parse_full($spot_data['xml']), $spot_data);$/;"	v
spot_expire_spam_count	spots_functions.php	/^        $spot_expire_spam_count = get_config($db, 'spot_expire_spam_count', 0);$/;"	v
spot_ids	nntp.class.php	/^        $spot_ids = $spot_reports = $spot_comments = $allParts = array();$/;"	v
spotid	do_functions.php	/^                $spotid = $row['spotid'];$/;"	v
spotid	do_functions.php	/^    $spotid = $args[1];$/;"	v
spotid	spots_functions.php	/^                        $spotid = 1; \/\/ we set it to 1 and after we finish set it to 0 so that comments we may have missed are updated the next run$/;"	v
spotid	spots_functions.php	/^                        $spotid = self::add_spot($db, $spot_data);$/;"	v
spotid	spots_functions.php	/^                        $spotid = self::get_spot_by_messageid($db, $ref_msg_id);$/;"	v
spotid	spots_functions.php	/^                    $spotid = self::get_spot_by_messageid($db, $ref_msg_id);$/;"	v
spotid	spots_functions.php	/^        $spotid = $o_spotid = self::make_spot_id($spot_data['spotid'], $spot_data['messageid'], $spot_data['poster']);$/;"	v
spots_blacklist	spots_functions.php	/^            $spots_blacklist = load_blacklist($db, NULL, blacklist::ACTIVE, TRUE);$/;"	v
spots_blacklist	spots_functions.php	/^        $spots_blacklist = array();$/;"	v
spots_cnt	spots_functions.php	/^            $spots_cnt = $res[0]['cnt'];$/;"	v
spots_cnt	spots_functions.php	/^        $spots_cnt = $report_cnt = $comment_cnt = $image_cnt = 0;$/;"	v
spots_comments_group	nntp.class.php	/^                $spots_comments_group = group_by_name($this->db, $spots_comments_group_name);$/;"	v
spots_comments_group_name	nntp.class.php	/^            $spots_comments_group_name = get_config($this->db, 'spots_comments_group', '');$/;"	v
spots_count	do_functions.php	/^        $spots_count = urd_spots::load_spots($db, $nzb, $item);$/;"	v
spots_group	nntp.class.php	/^                $spots_group = group_by_name($this->db, $spots_group_name);$/;"	v
spots_group_name	nntp.class.php	/^            $spots_group_name = get_config($this->db, 'spots_group', '');$/;"	v
spots_reports_group	nntp.class.php	/^                $spots_reports_group = group_by_name($this->db, $spots_reports_group_name);$/;"	v
spots_reports_group_name	nntp.class.php	/^            $spots_reports_group_name = get_config($this->db, 'spots_reports_group', '');$/;"	v
spotter_id	spots_functions.php	/^                    $spotter_id = self::parse_spotterid(substr($from, strpos($from, '<')));$/;"	v
spotter_ids	do_functions.php	/^    $spotter_ids = file($blacklist_url, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES );$/;"	v
spotter_ids	do_functions.php	/^    $spotter_ids = file($whitelist_url, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES );$/;"	v
spotterid	spots_functions.php	/^        $spotterid = self::calculate_spotter_id($pubkey);$/;"	v
sq	urdd.php	/^        $sq = $conn_list->get_fdlist();$/;"	v
sql	do_functions.php	/^                $sql = "* FROM parts_$groupid WHERE \\"binaryID\\" = ?";$/;"	v
sql	do_functions.php	/^                $sql = "UPDATE downloadinfo SET \\"password\\" = $pw WHERE \\"ID\\" = '$dlid' AND \\"password\\" = ''";$/;"	v
sql	do_functions.php	/^            $sql = "* FROM spot_images WHERE \\"fetched\\" = 0 AND \\"image\\" LIKE 'articles:%'";$/;"	v
sql	do_functions.php	/^            $sql = "INSERT INTO downloadarticles (\\"downloadID\\", \\"groupID\\", \\"status\\", \\"partnumber\\", \\"name\\", \\"messageID\\", \\"binaryID\\", \\"size\\") "$/;"	v
sql	do_functions.php	/^            $sql = "INSERT INTO extsetdata (\\"setID\\", \\"name\\", \\"value\\", \\"committed\\", \\"type\\") VALUES ($setid, 'setname', $setname, 1, $type)";$/;"	v
sql	do_functions.php	/^            $sql = "UPDATE extsetdata SET \\"value\\" = $setname WHERE \\"setID\\" = $setid AND \\"name\\" = 'setname' AND \\"type\\"=$type";$/;"	v
sql	do_functions.php	/^            $sql = "\\"value\\" FROM extsetdata WHERE \\"setID\\" = ? AND \\"name\\"= ?";$/;"	v
sql	do_functions.php	/^            $sql = '* FROM nfo_files';$/;"	v
sql	do_functions.php	/^        $sql = " * FROM post_messages WHERE \\"id\\" = ? AND \\"userid\\" = ?";$/;"	v
sql	do_functions.php	/^        $sql = "*, \\"date\\" AS unixdate FROM binaries_$groupid WHERE \\"binaryID\\" = ?";$/;"	v
sql	do_functions.php	/^        $sql = "\\"binaryID\\" FROM binaries_$group_id WHERE \\"setID\\" = ?";$/;"	v
sql	do_functions.php	/^        $sql = "\\"name\\", \\"value\\", \\"type\\" FROM extsetdata WHERE \\"setID\\" = $setid";$/;"	v
sql	do_functions.php	/^        $sql = "count(*) AS \\"cnt\\"FROM nfo_files";$/;"	v
sql	do_functions.php	/^        $sql = "count(*) AS cnt FROM spot_images WHERE \\"fetched\\" = 0 AND \\"image\\" LIKE 'articles:%'";$/;"	v
sql	do_functions.php	/^        $sql = '"setID" = ?';$/;"	v
sql	do_functions.php	/^    $sql = "UPDATE groups SET \\"extset_update\\" = $timestamp WHERE \\"name\\" LIKE $name";$/;"	v
sql	do_functions.php	/^    $sql = "UPDATE rss_urls SET \\"extset_update\\" = $timestamp WHERE \\"url\\" LIKE $name";$/;"	v
sql	do_functions.php	/^    $sql = "\\"ID\\", \\"messageID\\", \\"partnumber\\", \\"size\\" FROM downloadarticles WHERE \\"binaryID\\" = ? AND \\"downloadID\\" = ? ORDER BY \\"partnumber\\"";$/;"	v
sql	download_functions.php	/^    $sql = "UPDATE downloadinfo SET \\"destination\\" = $destination WHERE \\"ID\\" = $id";$/;"	v
sql	download_functions.php	/^    $sql = "UPDATE downloadinfo SET \\"done_size\\" = \\"done_size\\" + $bytes WHERE \\"ID\\" = $dlid";$/;"	v
sql	download_functions.php	/^    $sql = 'count("ID") AS "counter" FROM downloadarticles WHERE "downloadID" = ? AND "status" < ?';$/;"	v
sql	download_functions.php	/^    $sql = 'count("ID") AS "counter" FROM downloadarticles WHERE "downloadID" = ? AND "status" = ?';$/;"	v
sql	group_functions.php	/^        $sql = " \\"articlesmax\\" FROM setdata WHERE \\"ID\\" = $setid2 ";$/;"	v
sql	group_functions.php	/^        $sql = "DISTINCT \\"binaryID\\" FROM binaries_$groupID WHERE \\"dirty\\" = " . DatabaseConnection::BINARYCHANGED;$/;"	v
sql	group_functions.php	/^        $sql = "DISTINCT \\"setID\\" FROM binaries_$groupID WHERE \\"dirty\\" = " . DatabaseConnection::SETCHANGED;$/;"	v
sql	group_functions.php	/^        $sql = "SUM(\\"size\\") AS totalsize, \\"binaryID\\", COUNT(*) AS parttotal, MAX(\\"subject\\") AS subject, MAX(\\"fromname\\") AS fromname,"$/;"	v
sql	group_functions.php	/^        $sql = "UPDATE binaries_$groupID SET \\"dirty\\" = " . DatabaseConnection::CONSISTENT . " WHERE \\"setID\\" in ($l)";$/;"	v
sql	group_functions.php	/^        $sql = "UPDATE binaries_$group_id SET \\"setID\\" = $new_setid WHERE \\"setID\\" = $old_setid";$/;"	v
sql	group_functions.php	/^        $sql = "UPDATE binaries_$groupid1 SET \\"setID\\" = $setid1 WHERE \\"setID\\" = $setid2";$/;"	v
sql	group_functions.php	/^        $sql = ' "setID", count("binaryID") AS bins, MIN("subject") AS subject, MIN("date") AS date, SUM("bytes") AS totalsize ' .$/;"	v
sql	group_functions.php	/^    $sql = " \\"articlesmax\\" FROM setdata WHERE \\"ID\\" = ? ";$/;"	v
sql	group_functions.php	/^    $sql = "UPDATE groups SET postcount = (SELECT COUNT(\\"ID\\") FROM parts_{$groupid}), \\"extset_update\\"='0' WHERE \\"ID\\" = $groupid ";$/;"	v
sql	group_functions.php	/^    $sql = "UPDATE setdata SET articlesmax = $articlesmax WHERE \\"ID\\" = $setid1";$/;"	v
sql	group_functions.php	/^    $sql = "count(*) AS total FROM (SELECT DISTINCT \\"binaryID\\" FROM binaries_$groupID WHERE \\"dirty\\" = " . DatabaseConnection::DIRTY . ") AS t";$/;"	v
sql	group_functions.php	/^    $sql = "count(*) AS total FROM (SELECT DISTINCT \\"setID\\" FROM binaries_$groupID WHERE \\"dirty\\" = " . DatabaseConnection::SETCHANGED . ') AS t';$/;"	v
sql	group_functions.php	/^    $sql = "count(\\"binaryID\\") AS cnt FROM binaries_$groupID WHERE \\"date\\" < $expire $keep_int";$/;"	v
sql	group_functions.php	/^    $sql = "merged_sets.\\"new_setid\\", binaries_$group_id.\\"setID\\" AS old_setid FROM binaries_$group_id "$/;"	v
sql	group_functions.php	/^    $sql = '"setID", count("binaryID") AS bins, MIN("subject") AS subject, MIN("date") AS date, SUM("bytes") AS totalsize ' .$/;"	v
sql	post_functions.php	/^                $sql = "UPDATE post_files SET \\"status\\" = '$art_status', \\"articleid\\"='$articleid' WHERE \\"id\\" = '{$a_file['id']}'";$/;"	v
sql	post_functions.php	/^                $sql = "UPDATE post_files SET status = '" . POST_READY . "' WHERE postid = '$postid' AND status =  '" . POST_FAILED . "' OR status = '" . POST_ACTIVE . "'" ;$/;"	v
sql	post_functions.php	/^                $sql = "count(*) AS cnt FROM post_files WHERE (\\"status\\" = ? OR \\"status\\" = ?) AND \\"postid\\"=?";$/;"	v
sql	post_functions.php	/^        $sql = "* FROM postinfo WHERE \\"id\\" = ?";$/;"	v
sql	post_functions.php	/^        $sql = "count(*) AS cnt FROM post_files WHERE postid = ? AND status = ?";$/;"	v
sql	post_functions.php	/^    $sql = "* FROM post_files WHERE \\"status\\" = '" . POST_READY . "'";$/;"	v
sql	post_functions.php	/^    $sql = "UPDATE post_files SET \\"status\\" = '". POST_ACTIVE . "' WHERE \\"id\\" IN ($ids)";$/;"	v
sql	post_functions.php	/^    $sql = "UPDATE postinfo SET ";$/;"	v
sql	post_functions.php	/^    $sql = "\\"tmp_dir\\" FROM postinfo WHERE \\"id\\" = ?";$/;"	v
sql	post_functions.php	/^    $sql = '* FROM postinfo WHERE "id" = ?';$/;"	v
sql	post_functions.php	/^    $sql = trim($sql, ', ');$/;"	v
sql	queue.php	/^            $sql = "UPDATE downloadinfo SET \\"position\\" = '$position' WHERE \\"ID\\"='$id'";$/;"	v
sql	queue.php	/^        $sql = 'UPDATE downloadinfo SET "position" = \\'0\\'';$/;"	v
sql	show_functions.php	/^    $sql = '* FROM rss_urls ORDER BY "name"';$/;"	v
sql	spots_functions.php	/^                    $sql = "UPDATE spot_reports SET \\"reference\\" = $ref_msg_id, \\"spotid\\" = $spotid, \\"stamp\\"= $date WHERE \\"id\\" = $id";$/;"	v
sql	spots_functions.php	/^                $sql = "\\"spotid\\" FROM spots WHERE \\"spotid\\" = ?";$/;"	v
sql	spots_functions.php	/^            $sql = "UPDATE spots SET \\"rating_count\\" = \\"rating_count\\" + $cnt, \\"rating\\" = (\\"rating\\" + $sum) \/ (rating_count + $cnt) WHERE \\"spotid\\" = $spotid";$/;"	v
sql	spots_functions.php	/^            $sql = '"id", "message_id", "spotid" FROM spot_comments WHERE "spotid" = ? OR "spotid" = ?';$/;"	v
sql	spots_functions.php	/^            $sql = '"id", "message_id", "spotid", "reference" FROM spot_reports WHERE "reference" = ? OR "spotid" = ? ';$/;"	v
sql	spots_functions.php	/^            $sql = '"message_id", "id" FROM spot_messages';$/;"	v
sql	spots_functions.php	/^        $sql = "UPDATE spots SET \\"comments\\" = ( CASE WHEN ( $subsql ) IS NULL THEN 0 ELSE ( $subsql ) END )";$/;"	v
sql	spots_functions.php	/^        $sql = "UPDATE spots SET \\"reports\\" = ( CASE WHEN ( $subsql ) IS NULL THEN 0 ELSE ( $subsql ) END )";$/;"	v
sql	spots_functions.php	/^        $sql = "\\"spotid\\" FROM spots WHERE \\"messageid\\" LIKE ?";$/;"	v
sql	spots_functions.php	/^        $sql = "count(\\"spotid\\") AS cnt FROM spots WHERE ( \\"stamp\\" < ? $spam_count ) $keep_int";$/;"	v
sql	spots_functions.php	/^        $sql = "count(\\"spotid\\") AS cnt FROM spots";$/;"	v
sql	spots_functions.php	/^        $sql = '"spotid" FROM spots WHERE "spotid" = ?';$/;"	v
sql	spots_functions.php	/^        $sql = 'COUNT(*) AS "cnt" FROM spot_comments WHERE "spotid" = ? OR "spotid" = ?';$/;"	v
sql	spots_functions.php	/^        $sql = 'COUNT(*) AS "cnt" FROM spot_reports WHERE "reference" = ? OR "spotid" = ? ';$/;"	v
sql	spots_functions.php	/^        $sql = 'count("id") AS cnt FROM spot_comments';$/;"	v
sql	spots_functions.php	/^        $sql = 'count("id") AS cnt FROM spot_reports';$/;"	v
sql	spots_functions.php	/^        $sql = 'count("spotid") AS cnt FROM spot_images';$/;"	v
sql	spots_functions.php	/^        $sql = 'count(*) AS "cnt" FROM spot_messages';$/;"	v
sql	spots_functions.php	/^        $sql = 'count(*) AS cnt FROM spot_comments WHERE "spotid" NOT IN (SELECT "spotid" FROM spots) AND "stamp" < ?';$/;"	v
sql	spots_functions.php	/^        $sql = 'count(*) AS cnt FROM spot_images WHERE "spotid" NOT IN (SELECT "spotid" FROM spots)';$/;"	v
sql	spots_functions.php	/^        $sql = 'count(*) AS cnt FROM spot_reports WHERE "spotid" NOT IN (SELECT "spotid" FROM spots) AND "stamp" < ?';$/;"	v
sql	urdd.php	/^    $sql = "UPDATE downloadinfo SET \\"status\\" = $status WHERE \\"status\\" IN ($statuses)";$/;"	v
sql	urdd.php	/^    $sql = '"last_login", "ID" FROM users';$/;"	v
sql	urdd_connection.php	/^                $sql = '"ID" FROM users WHERE "name"=? AND "pass"=? AND "active" = ?';$/;"	v
sql	urdd_extsetdata.php	/^                $sql = "INSERT INTO extsetdata (\\"setID\\", \\"name\\", \\"value\\", \\"committed\\", \\"type\\") VALUES ($setid, $name, $value, 1, $type)";$/;"	v
sql	urdd_extsetdata.php	/^                $sql = "UPDATE extsetdata SET \\"value\\" = $value WHERE \\"setID\\" = $setid AND \\"name\\" = $name AND \\"type\\" = $type";$/;"	v
sql	urdd_extsetdata.php	/^            $sql = '"setID" FROM extsetdata WHERE "setID" = ? AND "name" = ? AND "type" = ?';$/;"	v
sql	urdd_extsetdata.php	/^    $sql = 'UPDATE extsetdata SET "committed" = 1 WHERE "committed" = 0';$/;"	v
sql	urdd_extsetdata.php	/^    $sql = 'UPDATE merged_sets SET "committed" = 1 WHERE "committed" = 0';$/;"	v
sql	urdd_functions.php	/^    $sql = "\\"spotter_id\\" FROM spot_whitelist WHERE 1=1 $Qsource";$/;"	v
sql	urdd_rss.php	/^        $sql = "UPDATE rss_urls SET \\"feedcount\\"= (SELECT COUNT(\\"id\\") FROM rss_sets WHERE \\"rss_id\\"= $rss_id) WHERE \\"id\\"=$rss_id";$/;"	v
sql	urdd_rss.php	/^        $sql = "\\"setID\\" NOT IN (SELECT \\"setid\\" FROM rss_sets ) AND \\"type\\" = '$type' ";$/;"	v
sql	urdd_rss.php	/^        $sql = "\\"setID\\" NOT IN (SELECT \\"setid\\" FROM rss_sets) AND \\"type\\" = '$type' ";$/;"	v
sql	urdd_rss.php	/^        $sql = "\\"setID\\" in (SELECT \\"setid\\" FROM rss_sets WHERE \\"rss_id\\" = $rss_id) AND \\"type\\" = '$type' ";$/;"	v
sql1	urdd_extsetdata.php	/^    $sql1  = "groups.\\"name\\" AS groupname, extsetdata.\\"setID\\", extsetdata.\\"name\\", extsetdata.\\"value\\", extsetdata.\\"type\\" FROM extsetdata ";$/;"	v
sql2	urdd_extsetdata.php	/^    $sql2  = "rss_urls.\\"url\\" AS groupname, extsetdata.\\"setID\\", extsetdata.\\"name\\", extsetdata.\\"value\\", extsetdata.\\"type\\" FROM extsetdata ";$/;"	v
sql3	urdd_extsetdata.php	/^    $sql3  = "groups.\\"name\\" AS groupname, merged_sets.\\"old_setid\\" AS \\"setID\\", 'MERGE_SET' AS \\"name\\", merged_sets.\\"new_setid\\" AS value, merged_sets.\\"type\\" FROM merged_sets ";$/;"	v
sql_cnt1	urdd_extsetdata.php	/^    $sql_cnt1  = "COUNT(*) AS \\"counter\\" FROM extsetdata ";$/;"	v
sql_cnt2	urdd_extsetdata.php	/^    $sql_cnt2  = "COUNT(*) AS \\"counter\\" FROM extsetdata ";$/;"	v
sql_cnt3	urdd_extsetdata.php	/^    $sql_cnt3  = "COUNT(*) AS \\"counter\\" FROM merged_sets ";$/;"	v
srv	server_data.php	/^                        $srv = $this->servers->find_free_slot($item->get_all_failed_servers(), $item->need_posting());$/;"	v
srv	server_data.php	/^                    $srv = $this->preempt($db, $item, $item->get_userid());$/;"	v
srv	server_data.php	/^            $srv = $this->servers->find_free_slot($item->get_all_failed_servers(), FALSE); \/\/ find a server with a slot available$/;"	v
srv	server_data.php	/^        $srv = get_all_usenet_servers($db, FALSE);$/;"	v
srv	server_data.php	/^        $srv = get_usenet_server($db, $id, FALSE);$/;"	v
srv_id	download_functions.php	/^        $srv_id = $servers->find_free_slot($item->get_all_failed_servers(), $item->need_posting()); \/\/ is there a server that has a free slot$/;"	v
srv_id	urdd.php	/^                    $srv_id = $servers->preempt($par_db, $item, $item->get_userid());$/;"	v
srv_id	urdd.php	/^            $srv_id = $servers->find_free_slot($item->get_all_failed_servers(), FALSE); \/\/ is there a server that has a free slot$/;"	v
srv_id	urdd.php	/^        $srv_id = $servers->get_update_server();$/;"	v
srv_prio	urdd_usenet_servers.php	/^            $srv_prio = $srv->get_priority();$/;"	v
srvr	action.php	/^        $srvr = $this->temp_fail_servers;$/;"	v
srvs	urdd_usenet_servers.php	/^        $srvs = array();$/;"	v
ss	show_functions.php	/^    $ss = $servers->schedule_size();$/;"	v
st	show_functions.php	/^        $st = microtime(TRUE) - ($t['start_time']);$/;"	v
start	nntp.class.php	/^            $start = gmp_max($orig_start, gmp_sub($start, $this->maxMssgs));$/;"	v
start	nntp.class.php	/^        $start = gmp_max($orig_start, gmp_sub($stop, $this->maxMssgs));$/;"	v
start	urdd_extsetdata.php	/^        $start = 0;$/;"	v
start_child	urdd.php	/^function start_child(action $item, conn_list $conn_list, $nntp_enabled)$/;"	f
start_download	download_functions.php	/^function start_download(DatabaseConnection $db, action $item)$/;"	f
start_time	action.php	/^        $this->start_time = (int) 0;$/;"	v
start_time	action.php	/^        $this->start_time = microtime(TRUE);$/;"	v
start_time	action.php	/^    private $start_time; \/\/ the time the action started running$/;"	v
start_time	download_functions.php	/^    $start_time = get_start_time($db, $dlid);$/;"	v
start_time	queue_functions.php	/^            $start_time = 0;$/;"	v
start_time	queue_functions.php	/^        $start_time = $arg_list[$last_idx + 1];$/;"	v
start_time	queue_functions.php	/^    $start_time = 0;$/;"	v
start_time	urdd.php	/^$start_time = time();$/;"	v
starttime	download_functions.php	/^    $starttime = time();$/;"	v
starttime	nntp.class.php	/^            $starttime = microtime(TRUE);$/;"	v
stat	show_functions.php	/^        $stat = $q['pause'] ? 'paused' : 'active';$/;"	v
stat	show_functions.php	/^        $stat = $t['paused'] ? 'paused' : 'active';$/;"	v
stat_code	thread.php	/^        $stat_code = $thread->get_status();$/;"	v
stat_id	download_functions.php	/^    $stat_id = get_stat_id($db, $dlid);$/;"	v
stat_id	post_functions.php	/^        $stat_id = get_stat_id($db, $postid, TRUE);$/;"	v
state	urdd_connection.php	/^        $this->state = $state;$/;"	v
state	urdd_connection.php	/^        $this->state = self::STATE_NOT_AUTHENTICATED;$/;"	v
state	urdd_connection.php	/^    private $state; \/\/ 0: no u\/p; 1: u; 2: u&p$/;"	v
state	yydecode.php	/^                    $state = 6;$/;"	v
state	yydecode.php	/^                $state = 0;$/;"	v
state	yydecode.php	/^                $state = 1;$/;"	v
state	yydecode.php	/^                $state = 2;$/;"	v
state	yydecode.php	/^            $state = 0;$/;"	v
state	yydecode.php	/^    static $state = 0; \/\/ 0 = start, 1= ybegin found, 2=ypart found, 3= data found, 4=end found, 6= uuencoded string found$/;"	v
status	action.php	/^            $status = QUEUE_PAUSED;$/;"	v
status	action.php	/^            $status = QUEUE_QUEUED;$/;"	v
status	do_functions.php	/^                    $status = QUEUE_QUEUED;$/;"	v
status	do_functions.php	/^            $status = DOWNLOAD_READY;$/;"	v
status	do_functions.php	/^            $status = QUEUE_FAILED;$/;"	v
status	do_functions.php	/^            $status = QUEUE_FINISHED;$/;"	v
status	do_functions.php	/^            $status = QUEUE_QUEUED;$/;"	v
status	do_functions.php	/^            $status = QUEUE_RUNNING;$/;"	v
status	do_functions.php	/^        $status = QUEUE_FAILED;$/;"	v
status	do_functions.php	/^        $status = QUEUE_FINISHED;$/;"	v
status	do_functions.php	/^        $status = QUEUE_RUNNING;$/;"	v
status	do_functions.php	/^    $status = DOWNLOAD_READY;$/;"	v
status	do_functions.php	/^    $status = QUEUE_FINISHED;$/;"	v
status	do_functions.php	/^    $status = QUEUE_RUNNING;$/;"	v
status	download_functions.php	/^                    $status = QUEUE_CANCELLED;$/;"	v
status	download_functions.php	/^                    $status = QUEUE_FINISHED;$/;"	v
status	download_functions.php	/^            $status = DOWNLOAD_PAUSED;$/;"	v
status	download_functions.php	/^        $status = QUEUE_RUNNING;$/;"	v
status	download_functions.php	/^    $status = ($item->is_paused()) ? DOWNLOAD_PAUSED : DOWNLOAD_QUEUED;$/;"	v
status	download_functions.php	/^    $status = DOWNLOAD_READY;$/;"	v
status	download_functions.php	/^    $status = QUEUE_FAILED;$/;"	v
status	post_functions.php	/^            $status = QUEUE_FAILED;$/;"	v
status	post_functions.php	/^        $status = POST_PAUSED;$/;"	v
status	post_functions.php	/^        $status = QUEUE_FAILED;$/;"	v
status	post_functions.php	/^        $status = QUEUE_FINISHED;$/;"	v
status	post_functions.php	/^    $status = QUEUE_FINISHED;$/;"	v
status	queue.php	/^                        $status = QUEUE_CANCELLED;$/;"	v
status	queue.php	/^                $status = QUEUE_CANCELLED;$/;"	v
status	queue.php	/^            $status = QUEUE_CANCELLED;$/;"	v
status	queue.php	/^            $status = QUEUE_QUEUED;$/;"	v
status	queue.php	/^        $status = $do_pause ? QUEUE_PAUSED : QUEUE_QUEUED;$/;"	v
status	queue.php	/^        $status = $item->is_paused() ? QUEUE_PAUSED : QUEUE_QUEUED;$/;"	v
status	show_functions.php	/^        $status = $xml->asXML();$/;"	v
status	show_functions.php	/^        $status = date('r') . "\\n";$/;"	v
status	show_functions.php	/^        $status = sprintf("%u days %u:%02u:%02u\\n", $days, $hrs, $min, $sec);$/;"	v
status	show_functions.php	/^    $status = urd_version::get_status();$/;"	v
status	spots_functions.php	/^            $status = QUEUE_FINISHED;$/;"	v
status	spots_functions.php	/^            $status = QUEUE_RUNNING;$/;"	v
status	thread.php	/^            $status = QUEUE_CANCELLED;$/;"	v
status	thread.php	/^            $status = QUEUE_FAILED;$/;"	v
status	thread.php	/^            $status = QUEUE_FINISHED;$/;"	v
status	thread.php	/^            $status = QUEUE_PAUSED;$/;"	v
status	thread.php	/^            $status = QUEUE_QUEUED;$/;"	v
status	thread.php	/^        $status = NULL;$/;"	v
status	urdd.php	/^                    $status = QUEUE_FAILED;$/;"	v
status	urdd.php	/^        $status = QUEUE_FAILED;$/;"	v
status	urdd.php	/^        $status = QUEUE_RUNNING;$/;"	v
status	urdd.php	/^    $status = get_queue_status($db, $dbid);$/;"	v
status	urdd_extsetdata.php	/^    $status = QUEUE_FINISHED;$/;"	v
status	urdd_extsetdata.php	/^    $status = QUEUE_RUNNING;$/;"	v
status	urdd_usenet_servers.php	/^                $status = QUEUE_RUNNING;$/;"	v
status_shutdown_handler	urdd_error.php	/^function status_shutdown_handler()$/;"	f
statuses	urdd.php	/^    $statuses = "'". DOWNLOAD_READY . "','" . DOWNLOAD_ACTIVE . "','" . DOWNLOAD_QUEUED ."'";$/;"	v
step	urdd_extsetdata.php	/^    $step = 100;$/;"	v
stepsize	group_functions.php	/^    $stepsize = DatabaseConnection::GENSETS_STEPSIZE; \/\/ Number of binaries that are updated per batch$/;"	v
stepsize	group_functions.php	/^    $stepsize = DatabaseConnection::GENSETS_STEPSIZE;$/;"	v
stime	do_functions.php	/^        $stime = microtime(TRUE);$/;"	v
stime	do_functions.php	/^    $stime = strtotime($stime);$/;"	v
stime	do_functions.php	/^    $stime = trim($parts[0]);$/;"	v
stime	schedule.php	/^        $stime = $job->get_time();$/;"	v
stime	server_data.php	/^                    $stime = $ctime;$/;"	v
stime	server_data.php	/^            $stime = $sched['at_time'];$/;"	v
stop	nntp.class.php	/^            $stop = gmp_max($orig_start, gmp_sub($start, 1));$/;"	v
stop	nntp.class.php	/^        $stop = $orig_stop;$/;"	v
stop	server_data.php	/^    public function stop(DatabaseConnection $db, $id, $userid)$/;"	f
stop	urdd_client.php	/^    public function stop($msg_id)$/;"	f
stop_all	server_data.php	/^    public function stop_all(DatabaseConnection $db, $userid)$/;"	f
stoptime	nntp.class.php	/^            $stoptime = microtime(TRUE);$/;"	v
store_ETA_info	nntp.class.php	/^    private function store_ETA_info($timeneeded, $nrmessages, $articlesdone, $totalarticles, $bytes, $dbid)$/;"	f
store_article	download_functions.php	/^function store_article($article, $dir, $msg_id)$/;"	f
store_extset_data	urdd_extsetdata.php	/^function store_extset_data(DatabaseConnection $db, array $result, array &$setidarray)$/;"	f
str	do_functions.php	/^    $str = '';$/;"	v
str	do_functions.php	/^    $str = '<' . '?' . 'xml version="1.0" encoding="us-ascii"' . '?' . '>' . "\\n"; \/\/ screws up syntax highlighting... hence the wacky sequence of < and ? and ? and > ... DO NOT CHANGE!$/;"	v
str	do_functions.php	/^    $str = '<\/nzb>' . "\\n";$/;"	v
str	urdd_command.php	/^        $str = strtoupper($str);$/;"	v
str	urdd_command.php	/^        $str = strtoupper(trim($str));$/;"	v
str	urdd_extsetdata.php	/^    $str = $xml->outputMemory(TRUE);$/;"	v
str	urdd_extsetdata.php	/^    $str = '';$/;"	v
str	urdd_extsetdata.php	/^    $str = convert_uuencode($str);$/;"	v
str	urdd_extsetdata.php	/^    $str = gzdeflate($str);$/;"	v
stupid_php_crap	urdd.php	/^function stupid_php_crap()$/;"	f
sub_ext	download_functions.php	/^    $sub_ext = array('.srt', '.SRT', '.sub', '.SUB', '.idx', '.IDX');$/;"	v
subdl	download_functions.php	/^    $subdl = ($r !== FALSE) ? (($r != '')? 1 : 0) : 0; \/\/ default off?$/;"	v
subdownloader_cmd	download_functions.php	/^    $subdownloader_cmd = my_escapeshellcmd(get_config($db, 'subdownloader_path', ''));$/;"	v
subdownloader_pars	download_functions.php	/^    $subdownloader_pars = my_escapeshellarg(get_config($db, 'subdownloader_pars', ''), FALSE);$/;"	v
subject	do_functions.php	/^        $subject = $row['subject'];$/;"	v
subject	group_functions.php	/^            $subject = $row['subject'];$/;"	v
subject	group_functions.php	/^    public $subject;$/;"	v
subject	nntp.class.php	/^                $subject = trim(str_replace('yEnc', '', $vars[1]));$/;"	v
subject	nntp.class.php	/^            $subject   = $msg[$this->xover_subject];$/;"	v
subject	post_functions.php	/^        $subject = $row['subject'];$/;"	v
subject	post_functions.php	/^    $subject = $row['subject'];$/;"	v
subject	urdd_extsetdata.php	/^    $subject = $basename;$/;"	v
sublog	download_functions.php	/^    $sublog = 'subs.log';$/;"	v
subscribe	group_functions.php	/^function subscribe(DatabaseConnection $db, $groupid, $expire, $minsetsize=0, $maxsetsize=0)$/;"	f
subscribe	urdd_client.php	/^    public function subscribe($groupid, $expire, $minsetsize, $maxsetsize, $adult=ADULT_OFF)$/;"	f
subscribe_rss	urdd_client.php	/^    public function subscribe_rss($feed_id, $expire)$/;"	f
subsql	spots_functions.php	/^        $subsql = 'SELECT COUNT(spot_comments."spotid") FROM spot_comments WHERE spots."spotid" = spot_comments."spotid" GROUP BY spot_comments."spotid"';$/;"	v
subsql	spots_functions.php	/^        $subsql = 'SELECT COUNT(spot_reports."spotid") FROM spot_reports WHERE spots."spotid" = spot_reports."spotid" GROUP BY spot_reports."spotid"';$/;"	v
success_count	post_functions.php	/^        $success_count = $failed_count = $done_count = 0;$/;"	v
sum	spots_functions.php	/^            $sum = array_sum($rating);$/;"	v
summary	urdd_rss.php	/^            $summary = str_replace('&nbsp;', ' ', $summary);$/;"	v
summary	urdd_rss.php	/^            $summary = utf8_encode(isset($item['summary'])? $item['summary'] : $title);$/;"	v
summary	urdd_rss.php	/^        $summary = html_entity_decode($summary, ENT_COMPAT, 'UTF-8');$/;"	v
syntax	urdd_command.php	/^        $this->syntax = $syntax;$/;"	v
syntax	urdd_command.php	/^    private $syntax;   \/\/ format of the command for help$/;"	v
syntax	urdd_help.php	/^                    $syntax = $c->get_syntax();$/;"	v
t	group_functions.php	/^        $t = new urd_table($bin_table, 'tmp', 'utf8'); \/\/ tmp primary index because sqlite can't drop columns$/;"	v
t	group_functions.php	/^        $t = new urd_table($part_table, 'ID', 'utf8');$/;"	v
t	schedule.php	/^                $t = $j->get_time();$/;"	v
t	schedule.php	/^        $t = NULL;$/;"	v
t	schedule.php	/^        $t = time();$/;"	v
t	server_data.php	/^            $t = $this->threads->get_thread($item_pid);$/;"	v
t	urdd_help.php	/^            $t = '';$/;"	v
t	urdd_help.php	/^            $t = ltrim($t, ' ,');$/;"	v
t	urdd_help.php	/^            $t = rtrim($t, ' ,');$/;"	v
t_time	download_functions.php	/^        $t_time = $endtime - $starttime;$/;"	v
t_time	group_functions.php	/^        $t_time = microtime(TRUE);$/;"	v
table	nntp.class.php	/^                $table = new TableParts;$/;"	v
target_dir	download_functions.php	/^    $target_dir = $dir . $originalsubs;$/;"	v
target_dir	download_functions.php	/^    $target_dir = find_unique_name($target_dir, '', '', '', FALSE);$/;"	v
temp	nntp.class.php	/^        $temp = array_keys($this->xoverformat);$/;"	v
temp_fail_servers	action.php	/^        $this->temp_fail_servers = $action->get_tried_servers();$/;"	v
temp_fail_servers	action.php	/^        $this->temp_fail_servers = $this->perm_fail_servers = array();$/;"	v
temp_fail_servers	action.php	/^        $this->temp_fail_servers = array();$/;"	v
temp_fail_servers	action.php	/^    private $temp_fail_servers; \/\/ servers we have already tried to run this task on, but failed to connect, or timed out or other temporary failures$/;"	v
temp_ql	queue.php	/^        $temp_ql = $temp_qm = array();$/;"	v
test_compressed_headers_nntp	nntp.class.php	/^    public function test_compressed_headers_nntp($group, &$code)$/;"	f
test_nntp	nntp.class.php	/^    public function test_nntp($group, &$code)$/;"	f
test_ports	urdd_usenet_servers.php	/^        $test_ports = ($extended === TRUE) ? $test_ports_extended : $test_ports_basic;$/;"	v
test_ports_basic	urdd_usenet_servers.php	/^        static $test_ports_basic = array(119, 563);$/;"	v
test_ports_extended	urdd_usenet_servers.php	/^        static $test_ports_extended = array(119, 563, 23, 25, 80, 81, 563, 443, 564, 600, 663, 644, 8080, 7000, 8000, 9000); \/\/ most of the ports we know off that are used$/;"	v
test_result	urdd_test.php	/^class test_result$/;"	c
test_result_list	urdd_test.php	/^class test_result_list$/;"	c
test_results	do_functions.php	/^    $test_results = new test_result_list();$/;"	v
test_results	urdd.php	/^    $test_results = new test_result_list();$/;"	v
test_server	urdd_usenet_servers.php	/^    public function test_server(DatabaseConnection $db)$/;"	f
test_servers	server_data.php	/^    public function test_servers(DatabaseConnection $db, test_result_list &$test_results)$/;"	f
test_servers	urdd_usenet_servers.php	/^    public function test_servers(DatabaseConnection $db, test_result_list &$test_results)$/;"	f
text	do_functions.php	/^    $text = $matches[3];$/;"	v
text	urdd_client.php	/^        $text = substr($lines[0], 4);$/;"	v
thrd	show_functions.php	/^            $thrd = $thrds->addChild('thread');$/;"	v
thrds	show_functions.php	/^        $thrds = $xml->addChild('threads');$/;"	v
thread	server_data.php	/^                $thread = &$this->threads->get_thread($pid);$/;"	v
thread	server_data.php	/^                $thread =& $this->threads->get_thread($pid);$/;"	v
thread	server_data.php	/^            $thread = &$this->threads->get_thread($pid);$/;"	v
thread	server_data.php	/^            $thread =& $this->threads->get_thread($pid);$/;"	v
thread	server_data.php	/^        $thread =& $this->threads->get_thread($pid);$/;"	v
thread	thread.php	/^        $thread = $this->threads[$pid];$/;"	v
thread	thread.php	/^class thread$/;"	c
thread_list	thread.php	/^class thread_list$/;"	c
threads	server_data.php	/^        $this->threads = new thread_list();$/;"	v
threads	server_data.php	/^    private $threads; \/\/ this is for non-nntp threads; other threads run in the usenet_servers' threads$/;"	v
threads	show_functions.php	/^    $threads = $servers->get_threads();$/;"	v
threads	thread.php	/^        $this->threads = array();$/;"	v
threads	thread.php	/^        $threads = array();$/;"	v
threads	thread.php	/^    private $threads;$/;"	v
threads_size	server_data.php	/^    public function threads_size()$/;"	f
time	group_functions.php	/^    $time = time();$/;"	v
time	schedule.php	/^        $this->time = (int) $time;$/;"	v
time	schedule.php	/^    private $time;$/;"	v
time	server_data.php	/^            $time = $job->get_time();$/;"	v
time	show_functions.php	/^        $time = strftime('%D %T', $j['time']);$/;"	v
time	spots_functions.php	/^        $time = time();$/;"	v
time	urdd_client.php	/^    public function time($output_type='text')$/;"	f
time_a	do_functions.php	/^        $time_a = microtime(TRUE);$/;"	v
time_a	spots_functions.php	/^        $time_a = microtime(TRUE);$/;"	v
time_b	do_functions.php	/^            $time_b = microtime(TRUE);$/;"	v
time_b	spots_functions.php	/^            $time_b = microtime(TRUE);$/;"	v
time_diff	download_functions.php	/^            $time_diff = $f_time - $b_time;$/;"	v
time_diff	post_functions.php	/^                $time_diff = $f_time - $b_time;$/;"	v
time_left	do_functions.php	/^                $time_left = ($mtime - $stime)  * (($total_rows - $cntr) \/ $cntr);$/;"	v
time_left	do_functions.php	/^                $time_left = ($time_b - $time_a) * (($totalcount - $cnt) \/ $cnt);$/;"	v
time_left	do_functions.php	/^                $time_left = 0;$/;"	v
time_left	do_functions.php	/^            $time_left = 0;$/;"	v
time_left	spots_functions.php	/^                $time_left = ($time_b - $time_a) * (($totalcount - $cnt) \/ $cnt);$/;"	v
time_left	spots_functions.php	/^            $time_left = 0;$/;"	v
timebased	do_functions.php	/^                $timebased = FALSE;$/;"	v
timebased	do_functions.php	/^                $timebased = TRUE;$/;"	v
timeneeded	nntp.class.php	/^            $timeneeded = $stoptime - $starttime;$/;"	v
timeout	nntp.class.php	/^                    $timeout = NULL; \/\/ quickfix for problem in stream_select$/;"	v
timeout	nntp.class.php	/^        $this->timeout = $timeout;$/;"	v
timeout	nntp.class.php	/^    private $timeout;	   \/\/ the timeout used for socket connections$/;"	v
timeout	urdd.php	/^                        $timeout = 3600; \/\/ one hour$/;"	v
timeout	urdd.php	/^                    $timeout = 300; \/\/ 5 minutes$/;"	v
timeout	urdd.php	/^            $timeout = $conn_list->first_timeout();$/;"	v
timeout	urdd.php	/^            $timeout = $sched_timeout;$/;"	v
timeout	urdd.php	/^            $timeout = 0;$/;"	v
timeout	urdd.php	/^            $timeout = min ($timeout, $sched_timeout);$/;"	v
timeout	urdd.php	/^        $timeout = 0;$/;"	v
timeout	urdd_client.php	/^            $this->timeout = (int) $timeout;$/;"	v
timeout	urdd_client.php	/^        $this->timeout = (int) $timeout;$/;"	v
timeout	urdd_client.php	/^        $timeout = time() + 10;$/;"	v
timeout	urdd_client.php	/^    private $timeout;$/;"	v
timeout	urdd_connection.php	/^                $timeout = $conn->get_last_recv();$/;"	v
timeout	urdd_connection.php	/^                $timeout = 0;$/;"	v
timeout	urdd_connection.php	/^            $timeout = ($timeout + $this->default_timeout) - time();$/;"	v
timeout	urdd_connection.php	/^        $timeout = NULL;$/;"	v
timeout	urdd_functions.php	/^        $timeout = socket::DEFAULT_SOCKET_TIMEOUT;$/;"	v
timeout	urdd_functions.php	/^    $timeout = get_config($db, 'socket_timeout', -1);$/;"	v
timeout	urdd_usenet_servers.php	/^                $timeout = socket::DEFAULT_SOCKET_TIMEOUT;$/;"	v
timeout	urdd_usenet_servers.php	/^            $timeout = get_config($db, 'socket_timeout', '-1');$/;"	v
timeout	urdd_usenet_servers.php	/^            $timeout = socket::DEFAULT_SOCKET_TIMEOUT;$/;"	v
timeout	urdd_usenet_servers.php	/^        $timeout = get_config($db, 'socket_timeout');$/;"	v
timeout	urdd_usenet_servers.php	/^        $timeout = get_config($db, 'socket_timeout', '-1');$/;"	v
timeout_us	urdd.php	/^        $timeout_us = max(min($timeout, urdd_sockets::DEFAULT_CHECK_TIMEOUT), 1000); \/\/ we at least wait 100 us$/;"	v
timestamp	do_functions.php	/^                    $timestamp = time() - $cleandbage;$/;"	v
timestamp	do_functions.php	/^                    $timestamp = time();$/;"	v
timestamp	do_functions.php	/^    $timestamp = time() - ($age * 3600 *24);$/;"	v
timestamp	urdd_connection.php	/^        $timestamp = time();$/;"	v
timestamp	urdd_rss.php	/^            $timestamp = isset($item['date_timestamp']) ? $item['date_timestamp'] : time();$/;"	v
title	urdd_rss.php	/^            $title = utf8_encode($item['title']);$/;"	v
title	urdd_rss.php	/^        $title = html_entity_decode($title, ENT_COMPAT, 'UTF-8');$/;"	v
tmp	do_functions.php	/^        $tmp = TRUE;$/;"	v
tmp	spots_functions.php	/^        $tmp = explode(' ', $header['Subject']);$/;"	v
tmp_dir	do_functions.php	/^    $tmp_dir = $dlpath . TMP_PATH;$/;"	v
to	do_functions.php	/^    $to = $item->get_dlpath();$/;"	v
to	urdd_functions.php	/^        $to = $user_dlpath;$/;"	v
to	urdd_functions.php	/^        $to = find_unique_name($user_dlpath, '', $dlpath);$/;"	v
to	urdd_functions.php	/^    $to = find_unique_name($user_dlpath, '', $basename, $ext, TRUE);$/;"	v
tofile	download_functions.php	/^            $tofile = $destination . basename($file, $ext) . '.' . $language . $ext;$/;"	v
top	queue.php	/^    public function top($mayhave_nntp=TRUE, array $not_these=array(), $mayhave_db_intensive= TRUE)$/;"	f
top	urdd_usenet_servers.php	/^            $top = self::NNTP_ABS_MAX;$/;"	v
top	urdd_usenet_servers.php	/^        $top = $this->max_threads;$/;"	v
total	download_functions.php	/^    $total = get_download_articles_count($db, $dlid);$/;"	v
total	group_functions.php	/^    $total = $res[0]['total'];$/;"	v
total	nntp.class.php	/^            $total = $headers_count;$/;"	v
total	nntp.class.php	/^        $total = gmp_div($last, $first);$/;"	v
total	urdd_extsetdata.php	/^    $total = $sql_arr[0][1] + $sql_arr[1][1] + $sql_arr[2][1];$/;"	v
total	urdd_usenet_servers.php	/^        $total = count($this->servers);$/;"	v
total_count	do_functions.php	/^        $total_count = count($res);$/;"	v
total_count	nntp.class.php	/^                $total_count = $this->get_headers($groupArr, $first1, $last1, $dbid, $mindate, $total, gmp_init(0), FALSE, $total_max, gmp_init(0), $compressed_headers);$/;"	v
total_count	nntp.class.php	/^            $total_count = gmp_init(0);$/;"	v
total_count	post_functions.php	/^        $total_count = get_post_articles_count($db, $postid);$/;"	v
total_count	urdd_usenet_servers.php	/^        $total_count = $total * $tp_count * $e_count;$/;"	v
total_counter	nntp.class.php	/^                $total_counter = gmp_add($total_counter, count($msgs));$/;"	v
total_counter_1	nntp.class.php	/^        $total_counter_1 = count($msgs);$/;"	v
total_counter_2	nntp.class.php	/^        $total_counter_2 = count($allParts);$/;"	v
total_max	nntp.class.php	/^        $total_max = gmp_init(get_config($this->db, 'total_max_articles'));$/;"	v
total_parts	do_functions.php	/^    $total_parts = $bin_data['totalParts'];$/;"	v
total_ready	download_functions.php	/^    $total_ready = get_download_articles_count_status($db, $dlid, DOWNLOAD_READY);$/;"	v
total_ready	post_functions.php	/^        $total_ready = get_post_articles_count_status($db, $postid, DOWNLOAD_READY);$/;"	v
total_rows	do_functions.php	/^        $total_rows = count($res);$/;"	v
total_size	do_functions.php	/^    $total_size = $count = 0;$/;"	v
total_size	download_functions.php	/^    $total_size = get_download_size($db, $dlid);$/;"	v
total_threads	server_data.php	/^            $total_threads = $nntp_threads ++; \/\/ the default is we have always one slot available for other things$/;"	v
totalcount	do_functions.php	/^        $totalcount = $res[0]['cnt'];$/;"	v
totalcount	spots_functions.php	/^        $totalcount = $res[0]['cnt'];$/;"	v
totalparts	group_functions.php	/^    public $totalparts;$/;"	v
tp_count	urdd_usenet_servers.php	/^        $tp_count = count($test_ports);$/;"	v
ts	show_functions.php	/^    $ts = $servers->threads_size();$/;"	v
type	do_functions.php	/^        $type = $args[1];$/;"	v
type	do_functions.php	/^        $type = $res[0]['type'];$/;"	v
type	do_functions.php	/^    $type = $matches[2];$/;"	v
type	download_functions.php	/^            $type = download_type::get_download_type($art);$/;"	v
type	group_functions.php	/^    $type = USERSETTYPE_GROUP;$/;"	v
type	spots_functions.php	/^        $type = USERSETTYPE_SPOT;$/;"	v
type	urdd_command.php	/^        $this->type = $type;$/;"	v
type	urdd_command.php	/^    private $type; \/\/ type of the command (posting, groups, nzb, etc)$/;"	v
type	urdd_extsetdata.php	/^        $type = $row[3];$/;"	v
type	urdd_rss.php	/^        $type = USERSETTYPE_RSS;$/;"	v
u	urdd_functions.php	/^        $u = $perm[1];$/;"	v
uc	urdd_extsetdata.php	/^            $uc = new urdd_client($db, get_config($db, 'urdd_host'), get_config($db,'urdd_port'), $userid);$/;"	v
uc	urdd_extsetdata.php	/^        $uc = new urdd_client($db, get_config($db, 'urdd_host'), get_config($db, 'urdd_port'), $userid);$/;"	v
uinfo	urdd.php	/^            $uinfo = posix_getpwnam($urdd_uid);$/;"	v
uinfo	urdd_options.php	/^                $uinfo = posix_getpwnam($config['urdd_uid']);$/;"	v
unpar	download_functions.php	/^        $unpar = 0;$/;"	v
unpar	download_functions.php	/^        $unpar = FALSE;$/;"	v
unpar	download_functions.php	/^    $unpar = ($r !== FALSE) ? $r : 0; \/\/ default off?$/;"	v
unpar_unrar	urdd_client.php	/^    public function unpar_unrar($dlid='')$/;"	f
unpause	urdd_client.php	/^    public function unpause($id)$/;"	f
unrar	do_functions.php	/^                    $unrar = 0;$/;"	v
unrar	do_functions.php	/^            $unrar = 0;$/;"	v
unrar	download_functions.php	/^    $unrar = ($r !== FALSE) ? $r : 0; \/\/ default off?$/;"	v
unschedule	schedule.php	/^    public function unschedule(DatabaseConnection $db, $userid, $id)$/;"	f
unschedule	server_data.php	/^    public function unschedule(DatabaseConnection $db, $userid, $arg)$/;"	f
unschedule	urdd_client.php	/^    public function unschedule($cmd, $arg)$/;"	f
unschedule_all	schedule.php	/^    public function unschedule_all(DatabaseConnection $db, $userid)$/;"	f
unschedule_all	server_data.php	/^    public function unschedule_all(DatabaseConnection $db, $userid)$/;"	f
unschedule_cmd	schedule.php	/^    public function unschedule_cmd(DatabaseConnection $db, $userid, $cmd, $arg)$/;"	f
unschedule_cmd	server_data.php	/^    public function unschedule_cmd(DatabaseConnection $db, $userid, $cmd, $arg)$/;"	f
unsubscribe	group_functions.php	/^function unsubscribe(DatabaseConnection $db, $groupid) \/\/ set to inactive an remove the binaries table$/;"	f
unsubscribe	urdd_client.php	/^    public function unsubscribe($id, $type= USERSETTYPE_GROUP)$/;"	f
unused_servers_available	server_data.php	/^    public function unused_servers_available(array $tried_servers, $must_to_have_free_slot = TRUE)$/;"	f
unused_servers_available	urdd_usenet_servers.php	/^    public function unused_servers_available(array $already_used_servers = array(), $must_to_have_free_slot = TRUE)$/;"	f
up	show_functions.php	/^        $up = $xml->addChild('uptime');$/;"	v
update	nntp.class.php	/^        $this->update = $this->insert = 0;$/;"	v
update	nntp.class.php	/^    private $update;$/;"	v
update	urdd_client.php	/^    public function update($msg_id='', $type=USERSETTYPE_GROUP)$/;"	f
update	urdd_connection.php	/^    public function update($sock) \/\/ update the last receive time$/;"	f
update	urdd_connection.php	/^    public function update()$/;"	f
update_all_download_position	queue.php	/^    public function update_all_download_position(DatabaseConnection $db)$/;"	f
update_binary_data	group_functions.php	/^function update_binary_data(DatabaseConnection $db, $groupID, $id)$/;"	f
update_binary_info	group_functions.php	/^function update_binary_info(DatabaseConnection $db, $group_id, $group_name, $do_expire, $expire, action $item, $minsetsize, $maxsetsize)$/;"	f
update_blacklist	urdd_client.php	/^    public function update_blacklist()$/;"	f
update_dl_status	server_data.php	/^    protected function update_dl_status(DatabaseConnection $db, array $q_ids, $dl_status, $post_status)$/;"	f
update_dlinfo	download_functions.php	/^function update_dlinfo(DatabaseConnection $db, $dlid, $bytes)$/;"	f
update_download_position	queue.php	/^    static private function update_download_position(DatabaseConnection $db, action $item, $position)$/;"	f
update_feed_timestamp	do_functions.php	/^function update_feed_timestamp(DatabaseConnection $db, $name, $timestamp)$/;"	f
update_feedcount	urdd_rss.php	/^    public function update_feedcount(DatabaseConnection $db, $rss_id)$/;"	f
update_group_list	nntp.class.php	/^    public function update_group_list()$/;"	f
update_group_timestamp	do_functions.php	/^function update_group_timestamp(DatabaseConnection $db, $name, $timestamp)$/;"	f
update_headers	do_functions.php	/^function update_headers(DatabaseConnection $db, &$nzb, array &$groupArr, action $item, $server_id)$/;"	f
update_newsgroup	nntp.class.php	/^    public function update_newsgroup(array $groupArr, action $item)$/;"	f
update_newsgroups	urdd_client.php	/^    public function update_newsgroups()$/;"	f
update_postcount	group_functions.php	/^function update_postcount(DatabaseConnection $db, $groupid)$/;"	f
update_postinfo	post_functions.php	/^function update_postinfo(DatabaseConnection $db, $postid, $status=NULL, $tmp_dir=NULL, $file_count= NULL)$/;"	f
update_rss_set	urdd_rss.php	/^    public function update_rss_set(DatabaseConnection $db, $setid, $title, $timestamp, $description, $summary)$/;"	f
update_rss_status	do_functions.php	/^function update_rss_status(DatabaseConnection $db, $id, $last_updated)$/;"	f
update_server	server_data.php	/^        $update_server = get_config($db, 'preferred_server');$/;"	v
update_server	urdd_usenet_servers.php	/^            $this->update_server = $server_id;$/;"	v
update_server	urdd_usenet_servers.php	/^        $this->update_server = 0;$/;"	v
update_server	urdd_usenet_servers.php	/^    private $update_server;$/;"	v
update_server	urdd_usenet_servers.php	/^    public function update_server($maxt=NULL, $port=NULL, $hostname=NULL, $encr=NULL, $username=NULL, $pw=NULL, $prio=NULL, $posting= NULL)$/;"	f
update_server	urdd_usenet_servers.php	/^    public function update_server(array $srv, $id)$/;"	f
update_set_data	group_functions.php	/^function update_set_data(DatabaseConnection $db, $groupID, $id, $minsetsize, $maxsetsize)$/;"	f
update_settings	urdd_command.php	/^    public function update_settings (array $settings)$/;"	f
update_spot_comment_ratings	spots_functions.php	/^    private static function update_spot_comment_ratings(DatabaseConnection$db, array $ratings)$/;"	f
update_spots_comment_count	spots_functions.php	/^    static private function update_spots_comment_count(DatabaseConnection $db)$/;"	f
update_spots_report_count	spots_functions.php	/^    static private function update_spots_report_count(DatabaseConnection $db)$/;"	f
update_spotscomments	urdd_client.php	/^    public function update_spotscomments()$/;"	f
update_spotsimages	urdd_client.php	/^    public function update_spotsimages()$/;"	f
update_thread_status	urdd_functions.php	/^function update_thread_status(DatabaseConnection $db, action $item, $dl_status, $post_status)$/;"	f
update_user_last_seen_group	urdd.php	/^function update_user_last_seen_group(DatabaseConnection $db, $group_id)$/;"	f
update_whitelist	urdd_client.php	/^    public function update_whitelist()$/;"	f
uptime	show_functions.php	/^    $uptime = time () - $start_time;$/;"	v
uptime	show_functions.php	/^    $uptime = time() - $start_time;$/;"	v
uptime	urdd_client.php	/^    public function uptime($output_type='text')$/;"	f
urd_classes	show_functions.php	/^    $urd_classes = urd_modules::get_urd_classes();$/;"	v
urd_cli_options	urdd_options.php	/^class urd_cli_options$/;"	c
urd_db	group_functions.php	/^        $urd_db = new urd_database($db->get_databaseengine());$/;"	v
urd_help	urdd_help.php	/^class urd_help$/;"	c
urd_path	download_functions.php	/^    $urd_path = my_escapeshellcmd(realpath(dirname(__FILE__) . '\/..'));$/;"	v
urd_spots	spots_functions.php	/^class urd_spots$/;"	c
urd_version	urdd_extsetdata.php	/^    $urd_version = urd_version::get_version();$/;"	v
urdd_client	urdd_client.php	/^class urdd_client$/;"	c
urdd_error_handler	urdd_error.php	/^function urdd_error_handler($errno, $errstr, $errfile, $errline)$/;"	f
urdd_exit	urdd_error.php	/^function urdd_exit($errno)$/;"	f
urdd_gid	urdd.php	/^    $urdd_gid = get_config($db, 'urdd_gid');$/;"	v
urdd_kill	urdd_functions.php	/^function urdd_kill($pid, $signal)$/;"	f
urdd_maxthreads	urdd.php	/^    $urdd_maxthreads = get_config($db, 'urdd_maxthreads'); \/\/ total number of threads allowed$/;"	v
urdd_protocol	urdd_protocol.php	/^class urdd_protocol$/;"	c
urdd_rss	urdd_rss.php	/^class urdd_rss$/;"	c
urdd_sockets	urdd_sockets.php	/^class urdd_sockets$/;"	c
urdd_uid	urdd.php	/^    $urdd_uid = get_config($db, 'urdd_uid');$/;"	v
url	do_functions.php	/^    $url = $arg_list[1];$/;"	v
url	queue_functions.php	/^                $url = $arg_list[1];$/;"	v
url	queue_functions.php	/^            $url = $arg_list[0];$/;"	v
url	queue_functions.php	/^    $url = $dlid = NULL;$/;"	v
url	show_functions.php	/^        $url = $row['url'];$/;"	v
url	urdd_client.php	/^        $url = addslashes($url);$/;"	v
url	urdd_rss.php	/^        $url = $rss_info['url'];$/;"	v
us	server_data.php	/^            $us = new usenet_server($s['id'], $s['threads'], $s['port'], $s['hostname'], $s['connection'], $s['username'], $s['password'], $s['priority'], $s['posting']);$/;"	v
us	server_data.php	/^        $us = new usenet_server($s['id'], $s['threads'], $s['port'], $s['hostname'], $s['connection'], $s['username'], $s['password'], $s['priority'], $s['posting']);$/;"	v
us	show_functions.php	/^    $us = $conn_list->size();$/;"	v
use_newsgroup	urdd_extsetdata.php	/^        $use_newsgroup = TRUE;$/;"	v
use_newsgroup	urdd_extsetdata.php	/^    $use_newsgroup = FALSE;$/;"	v
used_threads	urdd_usenet_servers.php	/^        $this->used_threads = (int) 0;$/;"	v
used_threads	urdd_usenet_servers.php	/^    private $used_threads; \/\/ int$/;"	v
usenet_config	urdd_functions.php	/^    $usenet_config = get_usenet_server($db, $usenet_server, FALSE);$/;"	v
usenet_server	urdd_functions.php	/^    $usenet_server = $id;$/;"	v
usenet_server	urdd_usenet_servers.php	/^class usenet_server$/;"	c
usenet_servers	urdd_usenet_servers.php	/^class usenet_servers$/;"	c
userIdTmp	spots_functions.php	/^        $userIdTmp =$/;"	v
userSignCrc	spots_functions.php	/^        $userSignCrc = crc32(base64_decode($userkey));$/;"	v
user_dlpath	urdd_functions.php	/^        $user_dlpath = $base_dlpath . $dl_dir;$/;"	v
user_dlpath	urdd_functions.php	/^    $user_dlpath = $dlpath . NZB_PATH . $username . DIRECTORY_SEPARATOR;$/;"	v
user_id	do_functions.php	/^        $user_id = $item->get_userid();$/;"	v
user_scripts	download_functions.php	/^    $user_scripts = get_config($db, 'allow_user_scripts', 0);$/;"	v
useragent	do_functions.php	/^        $useragent = urd_version::get_urd_name() . ' ' . urd_version::get_version();$/;"	v
useragent	post_functions.php	/^        $useragent = urd_version::get_urd_name() . ' ' . urd_version::get_version();$/;"	v
userid	action.php	/^        $this->userid = $action->get_userid();$/;"	v
userid	action.php	/^        $this->userid = $userid;$/;"	v
userid	action.php	/^    private $userid; \/\/ the user id of the user that created the action$/;"	v
userid	do_functions.php	/^        $userid = $item->get_userid();$/;"	v
userid	do_functions.php	/^    $userid =  $item->get_userid();$/;"	v
userid	do_functions.php	/^    $userid = $item->get_userid();$/;"	v
userid	download_functions.php	/^            $userid = $item->get_userid();$/;"	v
userid	download_functions.php	/^    $userid = $item->get_userid();$/;"	v
userid	nzb_poller.class.php	/^                            $userid = get_userid($db, $user);$/;"	v
userid	post_functions.php	/^    $userid = $item->get_userid();$/;"	v
userid	schedule.php	/^        $userid = $action->get_userid();$/;"	v
userid	server_data.php	/^                    $userid = $item->get_userid();$/;"	v
userid	server_data.php	/^            $userid = $sched['userid'];$/;"	v
userid	spots_functions.php	/^                    $userid = $comment['userid'] = $spotSigning->calculate_userid($comment['user-key']['modulo']);$/;"	v
userid	urdd.php	/^                    $userid = $row['userid'];$/;"	v
userid	urdd.php	/^            $userid = get_userid($db, $username);$/;"	v
userid	urdd_command.php	/^            $userid = get_userid($db, $username);$/;"	v
userid	urdd_connection.php	/^        $this->userid = $uid;$/;"	v
userid	urdd_connection.php	/^    private $userid;$/;"	v
userid	urdd_extsetdata.php	/^            $userid = get_admin_userid($db); \/\/ get admin user$/;"	v
userid	urdd_extsetdata.php	/^    $userid = get_admin_userid($db); \/\/ get an admin user$/;"	v
username	do_functions.php	/^    $username = get_username($db, $userid);$/;"	v
username	download_functions.php	/^        $username = get_username($db, $userid);$/;"	v
username	download_functions.php	/^    $username = get_username($db, $userid);$/;"	v
username	nntp.class.php	/^        $this->username = $this->password = '';$/;"	v
username	nntp.class.php	/^        $this->username = $username;$/;"	v
username	nntp.class.php	/^    private $username;          \/\/ username for authenticating to the server$/;"	v
username	post_functions.php	/^    $username = get_username($db, $userid);$/;"	v
username	show_functions.php	/^            $username = get_username($db, $j['userid']);$/;"	v
username	show_functions.php	/^            $username = get_username($db, $q['userid']);$/;"	v
username	show_functions.php	/^            $username = get_username($db, $t['userid']);$/;"	v
username	urdd.php	/^    $username = get_config($db, 'run_update');$/;"	v
username	urdd_client.php	/^        $this->username = $username;$/;"	v
username	urdd_client.php	/^    private $username;$/;"	v
username	urdd_command.php	/^            $username = $conn_list->get_username($sock);$/;"	v
username	urdd_command.php	/^        $username = get_username($db, $userid);$/;"	v
username	urdd_command.php	/^        $username = trim($arg);$/;"	v
username	urdd_connection.php	/^                $username = $conn->get_username();$/;"	v
username	urdd_connection.php	/^        $this->username = $username;$/;"	v
username	urdd_connection.php	/^        $this->username = '';$/;"	v
username	urdd_connection.php	/^    private $username;$/;"	v
username	urdd_functions.php	/^    $username = get_username($db, $userid);$/;"	v
username	urdd_rss.php	/^        $username = $rss_info['username'];$/;"	v
username	urdd_usenet_servers.php	/^            $this->username = $username;$/;"	v
username	urdd_usenet_servers.php	/^        $this->username = $username;$/;"	v
username	urdd_usenet_servers.php	/^    private $username; \/\/ string$/;"	v
users	nzb_poller.class.php	/^            $users = get_all_users($db);$/;"	v
users	show_functions.php	/^    $users = $conn_list->get_usernames();$/;"	v
users	urdd_connection.php	/^        $users = array();$/;"	v
usr	show_functions.php	/^            $usr = $usrs->addChild('user');$/;"	v
usrs	show_functions.php	/^        $usrs = $xml->addChild('users');$/;"	v
uu_error	do_functions.php	/^    $uu_error = $par_error = $concat_error = $comp_error = $dir_error = $sfv_error = FALSE;$/;"	v
uu_str	urdd_extsetdata.php	/^    $uu_str = "\\r\\nbegin 644 $basename\\r\\n";$/;"	v
uudecode	do_functions.php	/^        $uudecode = 1;$/;"	v
uudecode	download_functions.php	/^function uudecode(DatabaseConnection $db, pr_list $files, $dlid, $dir, &$error, &$dl_status, &$counter)$/;"	f
v	show_functions.php	/^        $v = is_bool($value) ? ($value ? 'TRUE' : 'FALSE') : $value;$/;"	v
vals	do_functions.php	/^            $vals = array($dlid, $groupid, $part_number, $cleansubject, $status, $messageID, $binaryID, $size);$/;"	v
vals	group_functions.php	/^                $vals = array();$/;"	v
vals	group_functions.php	/^            $vals = array();$/;"	v
vals	group_functions.php	/^        $vals = $vals_nfo = array();$/;"	v
vals	group_functions.php	/^    $vals = array();$/;"	v
vals	post_functions.php	/^            $vals = array($postid, $filename, $yy_cnt, basename($rarfile), $rar_cnt, POST_READY);$/;"	v
vals	spots_functions.php	/^                    $vals = array($spotid, $from, $body, $userid, $date);$/;"	v
vals	spots_functions.php	/^        $vals = array ($/;"	v
vals_nfo	group_functions.php	/^                    $vals_nfo = array();$/;"	v
vals_nfo	group_functions.php	/^            $vals_nfo = array();$/;"	v
value	urdd_extsetdata.php	/^        $value = substr($row[2], 0, 255);$/;"	v
var	yydecode.php	/^                $var = fseek($file, $begin, SEEK_SET);$/;"	v
ver	urdd_config.php	/^    $ver = get_config($db, 'URD_version');$/;"	v
ver2	urdd_config.php	/^    $ver2 = urd_version::get_version();$/;"	v
verify_bool	urdd_config.php	/^function verify_bool($entry, array $config)$/;"	f
verify_cksfv	download_functions.php	/^function verify_cksfv(DatabaseConnection $db, $dir, $dlid, pr_list $files, action $item, &$error)$/;"	f
verify_config	urdd_config.php	/^function verify_config(DatabaseConnection $db, test_result_list &$test_results)$/;"	f
verify_dlpaths	urdd_config.php	/^function verify_dlpaths(DatabaseConnection $db, $path, test_result_list &$test_results)$/;"	f
verify_installed	urdd.php	/^function verify_installed()$/;"	f
verify_isnumeric	urdd_config.php	/^function verify_isnumeric($entry, array $config)$/;"	f
verify_logfile	urdd_config.php	/^function verify_logfile()$/;"	f
verify_magpie_cache_dir	urdd_config.php	/^function verify_magpie_cache_dir(DatabaseConnection $db, test_result_list &$test_results)$/;"	f
verify_memory_limit	urdd_config.php	/^function verify_memory_limit(test_result_list &$test_results)$/;"	f
verify_par	download_functions.php	/^function verify_par(DatabaseConnection $db, $dir, $dlid, pr_list $files, action $item, &$error, &$unpar)$/;"	f
verify_password_db	urdd_connection.php	/^    public function verify_password_db(DatabaseConnection $db, $sock, $password)$/;"	f
verify_spot	spots_functions.php	/^    private static function verify_spot(array &$spot_data)$/;"	f
version	do_functions.php	/^    $version = $matches[1];$/;"	v
version	do_functions.php	/^    $version = file_get_contents(VERSION_CHECK_URL. '?version=' . urd_version::get_version());$/;"	v
version	show_functions.php	/^    $version = urd_version::get_version();$/;"	v
version	urdd_client.php	/^    public function version($output_type='text')$/;"	f
w	urdd_functions.php	/^        $w = $perm[3];$/;"	v
whitelist	do_functions.php	/^    $whitelist = load_whitelist($db, whitelist::WHITELIST_EXTERNAL, NULL);$/;"	v
whitelist	urdd_functions.php	/^    $whitelist = array();$/;"	v
whitelist_url	do_functions.php	/^    $whitelist_url = get_config($db, 'spots_whitelist', '');$/;"	v
write_binary	do_functions.php	/^function write_binary(DatabaseConnection $db, $binaryid, $groupid, $total_parts, $subject, $file, $dlid)$/;"	f
write_setinfo	urdd_extsetdata.php	/^function write_setinfo(DatabaseConnection $db, array $setinfo)$/;"	f
x	group_functions.php	/^                $x = (int) 1;$/;"	v
x	group_functions.php	/^    $x = (int) 1;$/;"	v
x	group_functions.php	/^    $x = 1;$/;"	v
xml	show_functions.php	/^        $xml = $test_results->get_all_as_xml($xml);$/;"	v
xml	show_functions.php	/^        $xml = new SimpleXMLElement('<' . '?xml version="1.0" standalone="yes"?' . '><show><\/show>');$/;"	v
xml	show_functions.php	/^        $xml = new SimpleXMLElement('<?xml version="1.0" standalone="yes"?' . '><show><\/show>');$/;"	v
xml	show_functions.php	/^        $xml = new SimpleXMLElement('<?xml version="1.0" standalone="yes"?'. '><show><\/show>');$/;"	v
xml	spots_functions.php	/^                    $xml = simplexml_load_string($key);$/;"	v
xml	spots_functions.php	/^                    $xml = simplexml_load_string(substr($line, 12));$/;"	v
xml	urdd_extsetdata.php	/^            $xml = new urd_xml_reader();$/;"	v
xml	urdd_extsetdata.php	/^    $xml = new XMLWriter();$/;"	v
xover_bytes	nntp.class.php	/^        $this->xover_bytes	    = 6;$/;"	v
xover_bytes	nntp.class.php	/^        $this->xover_bytes	= array_search('Bytes',$temp);$/;"	v
xover_bytes	nntp.class.php	/^        $this->xover_bytes == FALSE)$/;"	v
xover_bytes	nntp.class.php	/^    private $xover_bytes;$/;"	v
xover_date	nntp.class.php	/^        $this->xover_date	    = 3;$/;"	v
xover_date	nntp.class.php	/^        $this->xover_date	= array_search('Date',$temp);$/;"	v
xover_date	nntp.class.php	/^        $this->xover_date == FALSE ||$/;"	v
xover_date	nntp.class.php	/^    private $xover_date;$/;"	v
xover_from	nntp.class.php	/^        $this->xover_from	    = 2;$/;"	v
xover_from	nntp.class.php	/^        $this->xover_from	= array_search('From',$temp);$/;"	v
xover_from	nntp.class.php	/^        $this->xover_from == FALSE ||$/;"	v
xover_from	nntp.class.php	/^    private $xover_from;$/;"	v
xover_lines	nntp.class.php	/^        $this->xover_lines	= array_search('Lines',$temp);$/;"	v
xover_lines	nntp.class.php	/^        $this->xover_lines  	= 7;$/;"	v
xover_lines	nntp.class.php	/^    private	$xover_lines;$/;"	v
xover_messageid	nntp.class.php	/^        $this->xover_messageid	= 4;$/;"	v
xover_messageid	nntp.class.php	/^        $this->xover_messageid	= array_search('Message-ID',$temp);$/;"	v
xover_messageid	nntp.class.php	/^        $this->xover_messageid == FALSE ||$/;"	v
xover_messageid	nntp.class.php	/^    private $xover_messageid;$/;"	v
xover_number	nntp.class.php	/^        $this->xover_number	    = 0;$/;"	v
xover_number	nntp.class.php	/^        $this->xover_number = 0;$/;"	v
xover_number	nntp.class.php	/^    private $xover_number;     \/\/ store location of fields$/;"	v
xover_references	nntp.class.php	/^        $this->xover_references = 5;$/;"	v
xover_subject	nntp.class.php	/^        $this->xover_subject	= 1;$/;"	v
xover_subject	nntp.class.php	/^        $this->xover_subject	= array_search('Subject',$temp);$/;"	v
xover_subject	nntp.class.php	/^    private $xover_subject;$/;"	v
xover_xref	nntp.class.php	/^        $this->xover_xref	= array_search('Xref',$temp);$/;"	v
xover_xref	nntp.class.php	/^        $this->xover_xref   	= 8;$/;"	v
xover_xref	nntp.class.php	/^    private $xover_xref;$/;"	v
xoverformat	nntp.class.php	/^        $this->xoverformat = $this->nntp->getOverviewFormat(TRUE, TRUE);$/;"	v
ydecode_line	yydecode.php	/^function ydecode_line(&$line)$/;"	f
yenc_decode	urdd_functions.php	/^function yenc_decode($string)$/;"	f
yy_cnt	post_functions.php	/^        $yy_cnt = 0;$/;"	v
yy_path	post_functions.php	/^        $yy_path = my_escapeshellarg($dl_path3);$/;"	v
yy_rarfile	post_functions.php	/^        $yy_rarfile = my_escapeshellarg($rarfile);$/;"	v
yydecode	download_functions.php	/^    $yydecode = my_escapeshellcmd (get_config($db, 'yydecode_path'));$/;"	v
yydecode	download_functions.php	/^    $yydecode = my_escapeshellcmd(get_config($db, 'yydecode_path', ''));$/;"	v
yydecode_pars	download_functions.php	/^    $yydecode_pars = my_escapeshellarg(get_config($db, 'yydecode_pars', ''), FALSE);$/;"	v
yyencode_cmd	post_functions.php	/^    $yyencode_cmd = get_config ($db, 'yyencode_path');$/;"	v
yyencode_opt	post_functions.php	/^    $yyencode_opt = get_config ($db, 'yyencode_pars');$/;"	v
zip_arg	download_functions.php	/^    $zip_arg = get_config($db, 'unzip_pars', '');$/;"	v
zip_cmd	download_functions.php	/^    $zip_cmd = get_config($db, 'unzip_path', '');$/;"	v
zip_file	do_functions.php	/^        $zip_file = find_unique_name($dlpath, '', $file_name, '.nzb.gz', TRUE);$/;"	v
zr7_arg	download_functions.php	/^    $zr7_arg = get_config($db, 'un7zr_pars', '');$/;"	v
zr7_cmd	download_functions.php	/^    $zr7_cmd = get_config($db, 'un7zr_path', '');$/;"	v
