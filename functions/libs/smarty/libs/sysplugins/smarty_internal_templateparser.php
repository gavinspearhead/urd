<?php

/**
 * Smarty Internal Plugin Templateparser
 * This is the template parser.
 * It is generated from the internal.templateparser.y file
 *
 * @package    Smarty
 * @subpackage Compiler
 * @author     Uwe Tews
 */
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;

#line 13 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 80 "smarty_internal_templateparser.php"
{
    #line 15 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public static $prefix_number = 0;
    private $_string;
    public $yymajor;
    public $last_index;
    public $last_variable;
    public $root_buffer;
    public $current_buffer;
    private $lex;
    private $internalError = false;
    private $strip = false;

    function __construct($lex, $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->block_nesting_level = 0;
        if ($this->security = isset($this->smarty->security_policy)) {
            $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->smarty->php_handling;
        }
        $this->is_xml = false;
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public static function escape_start_tag($tag_text)
    {
        $tag = preg_replace(array('/\A<\?(.*)\z/', '/(language\s*=\s*[\"\']?\s*php\s*[\"\']?)/'), array('<<?php ?>?\1', '<?php echo \'\1\'; ?>'), addcslashes($tag_text, "'"), - 1, $count); //Escape tag
        return $tag;
    }

    public static function escape_end_tag($tag_text)
    {
        return '?<?php ?>>';
    }

    public function compileVariable($variable)
    {
        if (strpos($variable, '(') == 0) {
            // not a variable variable
            $var = trim($variable, '\'');
            $this->compiler->tag_nocache = $this->compiler->tag_nocache | $this->template->getVariable($var, null, true, false)->nocache;
            $this->template->properties['variables'][$var] = $this->compiler->tag_nocache | $this->compiler->nocache;
        }
        //       return '(isset($_smarty_tpl->tpl_vars['. $variable .'])?$_smarty_tpl->tpl_vars['. $variable .']->value:$_smarty_tpl->getVariable('. $variable .')->value)';
        return '$_smarty_tpl->tpl_vars[' . $variable . ']->value';
    }

    #line 139 "smarty_internal_templateparser.php"

    const TP_VERT = 1;
    const TP_COLON = 2;
    const TP_RDEL = 3;
    const TP_COMMENT = 4;
    const TP_PHPSTARTTAG = 5;
    const TP_PHPENDTAG = 6;
    const TP_PHPENDSCRIPT = 7;
    const TP_ASPSTARTTAG = 8;
    const TP_ASPENDTAG = 9;
    const TP_FAKEPHPSTARTTAG = 10;
    const TP_XMLTAG = 11;
    const TP_TEXT = 12;
    const TP_STRIPON = 13;
    const TP_STRIPOFF = 14;
    const TP_BLOCKSOURCE = 15;
    const TP_LITERALSTART = 16;
    const TP_LITERALEND = 17;
    const TP_LITERAL = 18;
    const TP_LDEL = 19;
    const TP_DOLLAR = 20;
    const TP_ID = 21;
    const TP_EQUAL = 22;
    const TP_PTR = 23;
    const TP_LDELIF = 24;
    const TP_LDELFOR = 25;
    const TP_SEMICOLON = 26;
    const TP_INCDEC = 27;
    const TP_TO = 28;
    const TP_STEP = 29;
    const TP_LDELFOREACH = 30;
    const TP_SPACE = 31;
    const TP_AS = 32;
    const TP_APTR = 33;
    const TP_LDELSETFILTER = 34;
    const TP_SMARTYBLOCKCHILDPARENT = 35;
    const TP_LDELSLASH = 36;
    const TP_ATTR = 37;
    const TP_INTEGER = 38;
    const TP_COMMA = 39;
    const TP_OPENP = 40;
    const TP_CLOSEP = 41;
    const TP_MATH = 42;
    const TP_UNIMATH = 43;
    const TP_ANDSYM = 44;
    const TP_ISIN = 45;
    const TP_ISDIVBY = 46;
    const TP_ISNOTDIVBY = 47;
    const TP_ISEVEN = 48;
    const TP_ISNOTEVEN = 49;
    const TP_ISEVENBY = 50;
    const TP_ISNOTEVENBY = 51;
    const TP_ISODD = 52;
    const TP_ISNOTODD = 53;
    const TP_ISODDBY = 54;
    const TP_ISNOTODDBY = 55;
    const TP_INSTANCEOF = 56;
    const TP_QMARK = 57;
    const TP_NOT = 58;
    const TP_TYPECAST = 59;
    const TP_HEX = 60;
    const TP_DOT = 61;
    const TP_SINGLEQUOTESTRING = 62;
    const TP_DOUBLECOLON = 63;
    const TP_AT = 64;
    const TP_HATCH = 65;
    const TP_OPENB = 66;
    const TP_CLOSEB = 67;
    const TP_EQUALS = 68;
    const TP_NOTEQUALS = 69;
    const TP_GREATERTHAN = 70;
    const TP_LESSTHAN = 71;
    const TP_GREATEREQUAL = 72;
    const TP_LESSEQUAL = 73;
    const TP_IDENTITY = 74;
    const TP_NONEIDENTITY = 75;
    const TP_MOD = 76;
    const TP_LAND = 77;
    const TP_LOR = 78;
    const TP_LXOR = 79;
    const TP_QUOTE = 80;
    const TP_BACKTICK = 81;
    const TP_DOLLARID = 82;
    const YY_NO_ACTION = 572;
    const YY_ACCEPT_ACTION = 571;
    const YY_ERROR_ACTION = 570;

    const YY_SZ_ACTTAB = 2314;
    static public $yy_action = array(
        /*     0 */
        216, 3, 322, 202, 323, 309, 305, 301, 302, 303,
        /*    10 */
        304, 310, 311, 317, 318, 319, 316, 196, 200, 323,
        /*    20 */
        9, 23, 251, 281, 138, 4, 107, 216, 273, 436,
        /*    30 */
        18, 136, 216, 18, 398, 232, 24, 234, 289, 24,
        /*    40 */
        296, 46, 48, 52, 45, 20, 28, 354, 360, 39,
        /*    50 */
        37, 278, 361, 40, 43, 216, 216, 436, 237, 216,
        /*    60 */
        5, 430, 23, 436, 281, 12, 201, 362, 359, 358,
        /*    70 */
        355, 356, 357, 343, 342, 328, 329, 330, 327, 11,
        /*    80 */
        25, 229, 49, 41, 18, 18, 18, 49, 335, 18,
        /*    90 */
        24, 24, 24, 204, 341, 24, 46, 48, 52, 45,
        /*   100 */
        20, 28, 354, 360, 39, 37, 278, 361, 40, 43,
        /*   110 */
        216, 571, 95, 265, 238, 306, 22, 140, 350, 31,
        /*   120 */
        129, 185, 362, 359, 358, 355, 356, 357, 343, 342,
        /*   130 */
        328, 329, 330, 327, 23, 351, 281, 15, 233, 23,
        /*   140 */
        18, 281, 266, 34, 3, 33, 24, 271, 216, 195,
        /*   150 */
        3, 46, 48, 52, 45, 20, 28, 354, 360, 39,
        /*   160 */
        37, 278, 361, 40, 43, 14, 158, 138, 23, 158,
        /*   170 */
        281, 12, 353, 138, 109, 334, 204, 362, 359, 358,
        /*   180 */
        355, 356, 357, 343, 342, 328, 329, 330, 327, 46,
        /*   190 */
        48, 52, 45, 20, 28, 354, 360, 39, 37, 278,
        /*   200 */
        361, 40, 43, 216, 207, 274, 124, 216, 216, 393,
        /*   210 */
        307, 238, 306, 249, 270, 362, 359, 358, 355, 356,
        /*   220 */
        357, 343, 342, 328, 329, 330, 327, 299, 286, 216,
        /*   230 */
        287, 284, 285, 216, 180, 436, 325, 18, 196, 312,
        /*   240 */
        300, 26, 158, 24, 46, 48, 52, 45, 20, 28,
        /*   250 */
        354, 360, 39, 37, 278, 361, 40, 43, 216, 32,
        /*   260 */
        296, 36, 49, 436, 293, 193, 203, 323, 16, 436,
        /*   270 */
        362, 359, 358, 355, 356, 357, 343, 342, 328, 329,
        /*   280 */
        330, 327, 124, 19, 49, 254, 255, 223, 49, 6,
        /*   290 */
        194, 344, 23, 23, 281, 281, 137, 231, 153, 46,
        /*   300 */
        48, 52, 45, 20, 28, 354, 360, 39, 37, 278,
        /*   310 */
        361, 40, 43, 216, 216, 208, 433, 204, 282, 197,
        /*   320 */
        172, 33, 245, 264, 99, 362, 359, 358, 355, 356,
        /*   330 */
        357, 343, 342, 328, 329, 330, 327, 244, 249, 321,
        /*   340 */
        211, 105, 497, 108, 433, 8, 204, 497, 199, 33,
        /*   350 */
        433, 276, 142, 247, 46, 48, 52, 45, 20, 28,
        /*   360 */
        354, 360, 39, 37, 278, 361, 40, 43, 216, 49,
        /*   370 */
        263, 250, 128, 27, 235, 253, 174, 291, 280, 101,
        /*   380 */
        362, 359, 358, 355, 356, 357, 343, 342, 328, 329,
        /*   390 */
        330, 327, 192, 158, 321, 254, 230, 104, 161, 162,
        /*   400 */
        23, 23, 246, 226, 182, 139, 280, 279, 279, 46,
        /*   410 */
        48, 52, 45, 20, 28, 354, 360, 39, 37, 278,
        /*   420 */
        361, 40, 43, 216, 204, 207, 216, 44, 314, 23,
        /*   430 */
        313, 241, 98, 124, 117, 362, 359, 358, 355, 356,
        /*   440 */
        357, 343, 342, 328, 329, 330, 327, 321, 173, 321,
        /*   450 */
        216, 233, 103, 160, 254, 268, 23, 279, 220, 216,
        /*   460 */
        261, 292, 279, 260, 46, 48, 52, 45, 20, 28,
        /*   470 */
        354, 360, 39, 37, 278, 361, 40, 43, 216, 204,
        /*   480 */
        183, 256, 191, 247, 298, 295, 320, 131, 339, 279,
        /*   490 */
        362, 359, 358, 355, 356, 357, 343, 342, 328, 329,
        /*   500 */
        330, 327, 321, 294, 123, 49, 207, 100, 181, 204,
        /*   510 */
        153, 269, 245, 296, 94, 132, 42, 279, 280, 46,
        /*   520 */
        48, 52, 45, 20, 28, 354, 360, 39, 37, 278,
        /*   530 */
        361, 40, 43, 216, 204, 205, 151, 13, 14, 35,
        /*   540 */
        29, 6, 97, 24, 115, 362, 359, 358, 355, 356,
        /*   550 */
        357, 343, 342, 328, 329, 330, 327, 321, 340, 321,
        /*   560 */
        168, 175, 277, 189, 164, 206, 288, 179, 346, 279,
        /*   570 */
        279, 7, 279, 279, 46, 48, 52, 45, 20, 28,
        /*   580 */
        354, 360, 39, 37, 278, 361, 40, 43, 216, 207,
        /*   590 */
        207, 171, 337, 133, 122, 145, 308, 159, 116, 114,
        /*   600 */
        362, 359, 358, 355, 356, 357, 343, 342, 328, 329,
        /*   610 */
        330, 327, 321, 321, 321, 125, 283, 198, 126, 169,
        /*   620 */
        44, 293, 184, 282, 178, 280, 275, 21, 242, 46,
        /*   630 */
        48, 52, 45, 20, 28, 354, 360, 39, 37, 278,
        /*   640 */
        361, 40, 43, 216, 272, 106, 315, 110, 259, 333,
        /*   650 */
        333, 333, 333, 333, 333, 362, 359, 358, 355, 356,
        /*   660 */
        357, 343, 342, 328, 329, 330, 327, 333, 190, 333,
        /*   670 */
        333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
        /*   680 */
        333, 333, 333, 333, 46, 48, 52, 45, 20, 28,
        /*   690 */
        354, 360, 39, 37, 278, 361, 40, 43, 216, 333,
        /*   700 */
        333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
        /*   710 */
        362, 359, 358, 355, 356, 357, 343, 342, 328, 329,
        /*   720 */
        330, 327, 333, 333, 333, 333, 333, 333, 333, 239,
        /*   730 */
        333, 333, 333, 333, 333, 333, 333, 333, 333, 46,
        /*   740 */
        48, 52, 45, 20, 28, 354, 360, 39, 37, 278,
        /*   750 */
        361, 40, 43, 216, 333, 333, 333, 333, 333, 333,
        /*   760 */
        333, 333, 333, 333, 333, 362, 359, 358, 355, 356,
        /*   770 */
        357, 343, 342, 328, 329, 330, 327, 333, 333, 333,
        /*   780 */
        333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
        /*   790 */
        333, 333, 333, 333, 46, 48, 52, 45, 20, 28,
        /*   800 */
        354, 360, 39, 37, 278, 361, 40, 43, 333, 333,
        /*   810 */
        333, 333, 333, 333, 333, 333, 333, 333, 333, 158,
        /*   820 */
        362, 359, 358, 355, 356, 357, 343, 342, 328, 329,
        /*   830 */
        330, 327, 333, 333, 333, 333, 333, 46, 48, 52,
        /*   840 */
        45, 20, 28, 354, 360, 39, 37, 278, 361, 40,
        /*   850 */
        43, 333, 333, 333, 333, 333, 333, 211, 333, 333,
        /*   860 */
        333, 333, 8, 362, 359, 358, 355, 356, 357, 343,
        /*   870 */
        342, 328, 329, 330, 327, 333, 333, 333, 333, 333,
        /*   880 */
        333, 333, 333, 9, 134, 92, 333, 333, 4, 107,
        /*   890 */
        333, 333, 186, 333, 136, 333, 177, 333, 232, 324,
        /*   900 */
        234, 279, 252, 333, 38, 279, 333, 51, 333, 333,
        /*   910 */
        333, 228, 333, 280, 333, 144, 333, 280, 86, 127,
        /*   920 */
        333, 333, 50, 47, 297, 243, 349, 290, 326, 105,
        /*   930 */
        1, 257, 352, 348, 188, 347, 333, 333, 333, 333,
        /*   940 */
        333, 333, 224, 279, 96, 9, 130, 212, 333, 333,
        /*   950 */
        4, 107, 333, 228, 333, 280, 136, 157, 333, 228,
        /*   960 */
        232, 127, 234, 146, 252, 333, 38, 127, 333, 51,
        /*   970 */
        267, 333, 333, 257, 352, 348, 345, 347, 333, 257,
        /*   980 */
        352, 348, 333, 347, 50, 47, 297, 243, 349, 333,
        /*   990 */
        333, 105, 1, 262, 333, 228, 333, 333, 155, 154,
        /*  1000 */
        333, 333, 333, 127, 333, 333, 96, 9, 130, 214,
        /*  1010 */
        227, 176, 4, 107, 347, 257, 352, 348, 136, 347,
        /*  1020 */
        279, 333, 232, 333, 234, 333, 252, 333, 38, 333,
        /*  1030 */
        333, 51, 280, 333, 333, 228, 333, 333, 333, 144,
        /*  1040 */
        333, 333, 56, 120, 143, 333, 50, 47, 297, 243,
        /*  1050 */
        349, 290, 326, 105, 1, 257, 352, 348, 333, 347,
        /*  1060 */
        333, 333, 333, 333, 23, 333, 281, 333, 96, 9,
        /*  1070 */
        141, 214, 333, 333, 4, 107, 18, 23, 240, 281,
        /*  1080 */
        136, 333, 24, 333, 232, 333, 234, 333, 252, 18,
        /*  1090 */
        38, 236, 333, 51, 333, 24, 333, 228, 333, 333,
        /*  1100 */
        333, 144, 333, 333, 86, 127, 333, 333, 50, 47,
        /*  1110 */
        297, 243, 349, 290, 326, 105, 1, 257, 352, 348,
        /*  1120 */
        333, 347, 333, 333, 333, 333, 333, 333, 217, 333,
        /*  1130 */
        96, 9, 137, 214, 333, 333, 4, 107, 333, 333,
        /*  1140 */
        333, 333, 136, 333, 333, 333, 232, 333, 234, 333,
        /*  1150 */
        252, 333, 17, 333, 333, 51, 333, 333, 333, 228,
        /*  1160 */
        333, 333, 333, 144, 333, 333, 86, 127, 333, 333,
        /*  1170 */
        50, 47, 297, 243, 349, 290, 326, 105, 1, 257,
        /*  1180 */
        352, 348, 333, 347, 333, 333, 333, 333, 333, 333,
        /*  1190 */
        218, 333, 96, 9, 130, 213, 333, 333, 4, 107,
        /*  1200 */
        333, 333, 333, 333, 136, 333, 333, 333, 232, 333,
        /*  1210 */
        234, 333, 252, 333, 38, 333, 333, 51, 333, 333,
        /*  1220 */
        333, 228, 333, 333, 333, 144, 333, 333, 63, 120,
        /*  1230 */
        230, 333, 50, 47, 297, 243, 349, 290, 326, 105,
        /*  1240 */
        1, 257, 352, 348, 333, 347, 333, 333, 333, 333,
        /*  1250 */
        333, 333, 333, 333, 96, 9, 135, 214, 333, 333,
        /*  1260 */
        4, 107, 333, 333, 333, 333, 136, 333, 333, 333,
        /*  1270 */
        232, 333, 234, 333, 252, 333, 2, 333, 333, 51,
        /*  1280 */
        333, 333, 333, 228, 333, 333, 333, 93, 333, 333,
        /*  1290 */
        53, 118, 333, 333, 50, 47, 297, 243, 349, 290,
        /*  1300 */
        326, 105, 1, 222, 352, 348, 333, 347, 333, 333,
        /*  1310 */
        333, 333, 333, 333, 333, 333, 96, 9, 130, 210,
        /*  1320 */
        333, 333, 4, 107, 333, 333, 333, 333, 136, 333,
        /*  1330 */
        333, 333, 232, 333, 234, 333, 225, 333, 38, 333,
        /*  1340 */
        333, 51, 333, 333, 333, 228, 333, 333, 333, 144,
        /*  1350 */
        333, 333, 66, 127, 333, 333, 50, 47, 297, 243,
        /*  1360 */
        349, 290, 326, 105, 1, 257, 352, 348, 333, 347,
        /*  1370 */
        333, 333, 333, 333, 333, 333, 333, 333, 96, 9,
        /*  1380 */
        130, 209, 333, 333, 4, 107, 333, 333, 333, 333,
        /*  1390 */
        136, 333, 333, 333, 232, 333, 234, 333, 252, 333,
        /*  1400 */
        38, 333, 333, 51, 333, 333, 333, 228, 333, 333,
        /*  1410 */
        333, 144, 333, 333, 68, 127, 333, 333, 50, 47,
        /*  1420 */
        297, 243, 349, 290, 326, 105, 1, 257, 352, 348,
        /*  1430 */
        333, 347, 333, 333, 333, 333, 333, 333, 333, 333,
        /*  1440 */
        96, 9, 137, 214, 333, 333, 4, 107, 333, 333,
        /*  1450 */
        333, 333, 136, 333, 333, 333, 232, 333, 234, 333,
        /*  1460 */
        252, 333, 17, 333, 333, 51, 333, 333, 333, 228,
        /*  1470 */
        333, 333, 333, 144, 333, 333, 65, 127, 333, 333,
        /*  1480 */
        50, 47, 297, 243, 349, 290, 326, 105, 333, 257,
        /*  1490 */
        352, 348, 333, 347, 333, 333, 333, 333, 333, 333,
        /*  1500 */
        333, 333, 96, 9, 137, 221, 333, 333, 4, 107,
        /*  1510 */
        333, 333, 333, 228, 136, 333, 333, 148, 232, 333,
        /*  1520 */
        234, 127, 252, 333, 17, 333, 333, 51, 333, 333,
        /*  1530 */
        333, 479, 333, 257, 352, 348, 333, 347, 333, 333,
        /*  1540 */
        333, 333, 50, 47, 297, 243, 349, 333, 333, 105,
        /*  1550 */
        333, 333, 333, 333, 479, 333, 479, 479, 333, 479,
        /*  1560 */
        479, 333, 333, 333, 96, 479, 333, 479, 3, 479,
        /*  1570 */
        333, 333, 228, 333, 333, 333, 119, 333, 228, 84,
        /*  1580 */
        127, 333, 152, 333, 479, 333, 127, 333, 290, 326,
        /*  1590 */
        333, 138, 257, 352, 348, 479, 347, 228, 257, 352,
        /*  1600 */
        348, 119, 347, 333, 84, 127, 219, 363, 333, 479,
        /*  1610 */
        333, 333, 333, 290, 326, 201, 187, 257, 352, 348,
        /*  1620 */
        333, 347, 333, 333, 333, 279, 333, 333, 11, 25,
        /*  1630 */
        228, 333, 336, 333, 121, 333, 333, 57, 127, 333,
        /*  1640 */
        333, 333, 204, 333, 333, 333, 290, 326, 333, 333,
        /*  1650 */
        257, 352, 348, 228, 347, 333, 333, 144, 333, 333,
        /*  1660 */
        87, 127, 333, 333, 228, 333, 333, 333, 144, 290,
        /*  1670 */
        326, 89, 127, 257, 352, 348, 333, 347, 333, 333,
        /*  1680 */
        290, 326, 333, 228, 257, 352, 348, 93, 347, 333,
        /*  1690 */
        55, 118, 333, 333, 228, 333, 333, 333, 144, 290,
        /*  1700 */
        326, 80, 127, 257, 352, 348, 333, 347, 333, 228,
        /*  1710 */
        290, 326, 333, 147, 257, 352, 348, 127, 347, 333,
        /*  1720 */
        228, 333, 333, 333, 144, 333, 333, 60, 127, 257,
        /*  1730 */
        352, 348, 333, 347, 333, 333, 290, 326, 333, 228,
        /*  1740 */
        257, 352, 348, 144, 347, 333, 88, 127, 333, 333,
        /*  1750 */
        333, 333, 333, 333, 333, 290, 326, 333, 228, 257,
        /*  1760 */
        352, 348, 111, 347, 333, 67, 127, 333, 333, 228,
        /*  1770 */
        333, 333, 333, 144, 290, 326, 72, 127, 257, 352,
        /*  1780 */
        348, 333, 347, 333, 333, 290, 326, 333, 228, 257,
        /*  1790 */
        352, 348, 144, 347, 333, 90, 127, 333, 333, 228,
        /*  1800 */
        333, 333, 333, 144, 290, 326, 73, 127, 257, 352,
        /*  1810 */
        348, 333, 347, 333, 333, 290, 326, 333, 333, 257,
        /*  1820 */
        352, 348, 333, 347, 228, 333, 333, 333, 144, 333,
        /*  1830 */
        333, 91, 127, 333, 333, 228, 333, 333, 333, 144,
        /*  1840 */
        290, 326, 82, 127, 257, 352, 348, 333, 347, 333,
        /*  1850 */
        333, 290, 326, 333, 228, 257, 352, 348, 144, 347,
        /*  1860 */
        333, 58, 127, 333, 333, 228, 333, 333, 333, 144,
        /*  1870 */
        290, 326, 78, 127, 257, 352, 348, 333, 347, 333,
        /*  1880 */
        333, 290, 326, 333, 228, 257, 352, 348, 144, 347,
        /*  1890 */
        333, 64, 127, 333, 333, 228, 333, 333, 333, 144,
        /*  1900 */
        290, 326, 76, 127, 257, 352, 348, 333, 347, 333,
        /*  1910 */
        333, 290, 326, 333, 333, 257, 352, 348, 333, 347,
        /*  1920 */
        228, 333, 333, 333, 144, 333, 333, 63, 127, 333,
        /*  1930 */
        333, 228, 333, 333, 333, 144, 290, 326, 75, 127,
        /*  1940 */
        257, 352, 348, 333, 347, 333, 333, 290, 326, 333,
        /*  1950 */
        228, 257, 352, 348, 144, 347, 333, 70, 127, 333,
        /*  1960 */
        333, 228, 333, 333, 333, 113, 290, 326, 74, 127,
        /*  1970 */
        257, 352, 348, 333, 347, 333, 333, 290, 326, 333,
        /*  1980 */
        228, 257, 352, 348, 144, 347, 333, 59, 127, 333,
        /*  1990 */
        333, 228, 333, 333, 333, 144, 290, 326, 54, 127,
        /*  2000 */
        257, 352, 348, 333, 347, 333, 333, 290, 326, 333,
        /*  2010 */
        333, 257, 352, 348, 333, 347, 228, 333, 333, 333,
        /*  2020 */
        144, 333, 333, 62, 127, 333, 333, 228, 333, 333,
        /*  2030 */
        333, 144, 290, 326, 79, 127, 215, 352, 348, 333,
        /*  2040 */
        347, 333, 333, 290, 326, 333, 333, 257, 352, 348,
        /*  2050 */
        333, 347, 10, 333, 333, 333, 228, 4, 107, 333,
        /*  2060 */
        149, 333, 333, 136, 127, 333, 228, 232, 333, 234,
        /*  2070 */
        144, 333, 333, 71, 127, 333, 257, 352, 348, 333,
        /*  2080 */
        347, 333, 290, 326, 333, 228, 257, 352, 348, 144,
        /*  2090 */
        347, 333, 69, 127, 333, 333, 333, 333, 333, 333,
        /*  2100 */
        333, 290, 326, 333, 228, 257, 352, 348, 144, 347,
        /*  2110 */
        333, 77, 127, 331, 30, 338, 333, 333, 333, 333,
        /*  2120 */
        290, 326, 333, 228, 257, 352, 348, 144, 347, 333,
        /*  2130 */
        83, 127, 333, 333, 333, 333, 333, 333, 333, 290,
        /*  2140 */
        326, 333, 333, 257, 352, 348, 333, 347, 10, 333,
        /*  2150 */
        333, 333, 333, 4, 107, 333, 333, 333, 333, 136,
        /*  2160 */
        333, 333, 228, 232, 333, 234, 144, 333, 333, 81,
        /*  2170 */
        127, 333, 333, 228, 333, 333, 333, 144, 290, 326,
        /*  2180 */
        61, 127, 257, 352, 348, 216, 347, 403, 333, 290,
        /*  2190 */
        326, 333, 333, 257, 352, 348, 228, 347, 333, 333,
        /*  2200 */
        112, 333, 333, 85, 127, 333, 333, 258, 333, 332,
        /*  2210 */
        30, 338, 290, 326, 333, 18, 257, 352, 348, 228,
        /*  2220 */
        347, 24, 333, 156, 3, 434, 333, 127, 228, 333,
        /*  2230 */
        333, 333, 150, 333, 333, 333, 127, 333, 333, 257,
        /*  2240 */
        352, 348, 333, 347, 248, 333, 333, 138, 257, 352,
        /*  2250 */
        348, 333, 347, 434, 333, 201, 166, 333, 333, 434,
        /*  2260 */
        333, 333, 3, 201, 163, 279, 333, 333, 11, 25,
        /*  2270 */
        102, 165, 333, 279, 333, 333, 11, 25, 201, 170,
        /*  2280 */
        279, 333, 204, 11, 25, 138, 201, 167, 279, 333,
        /*  2290 */
        204, 11, 25, 333, 333, 333, 279, 204, 333, 11,
        /*  2300 */
        25, 333, 333, 333, 333, 204, 333, 333, 333, 333,
        /*  2310 */
        333, 333, 333, 204,
    );
    static public $yy_lookahead = array(
        /*     0 */
        1, 40, 3, 115, 116, 4, 5, 6, 7, 8,
        /*    10 */
        9, 10, 11, 12, 13, 14, 15, 16, 115, 116,
        /*    20 */
        19, 19, 61, 21, 63, 24, 25, 1, 67, 3,
        /*    30 */
        31, 30, 1, 31, 3, 34, 37, 36, 21, 37,
        /*    40 */
        27, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*    50 */
        51, 52, 53, 54, 55, 1, 1, 31, 32, 1,
        /*    60 */
        39, 3, 19, 37, 21, 22, 92, 68, 69, 70,
        /*    70 */
        71, 72, 73, 74, 75, 76, 77, 78, 79, 105,
        /*    80 */
        106, 64, 56, 29, 31, 31, 31, 56, 67, 31,
        /*    90 */
        37, 37, 37, 119, 81, 37, 42, 43, 44, 45,
        /*   100 */
        46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
        /*   110 */
        1, 84, 85, 86, 87, 88, 19, 20, 21, 19,
        /*   120 */
        20, 21, 68, 69, 70, 71, 72, 73, 74, 75,
        /*   130 */
        76, 77, 78, 79, 19, 38, 21, 22, 87, 19,
        /*   140 */
        31, 21, 27, 33, 40, 39, 37, 41, 1, 92,
        /*   150 */
        40, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*   160 */
        51, 52, 53, 54, 55, 22, 23, 63, 19, 23,
        /*   170 */
        21, 22, 116, 63, 123, 124, 119, 68, 69, 70,
        /*   180 */
        71, 72, 73, 74, 75, 76, 77, 78, 79, 42,
        /*   190 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   200 */
        53, 54, 55, 1, 119, 3, 63, 1, 1, 3,
        /*   210 */
        86, 87, 88, 64, 67, 68, 69, 70, 71, 72,
        /*   220 */
        73, 74, 75, 76, 77, 78, 79, 5, 6, 1,
        /*   230 */
        8, 9, 10, 1, 112, 3, 3, 31, 16, 17,
        /*   240 */
        18, 22, 23, 37, 42, 43, 44, 45, 46, 47,
        /*   250 */
        48, 49, 50, 51, 52, 53, 54, 55, 1, 2,
        /*   260 */
        27, 33, 56, 31, 113, 101, 115, 116, 19, 37,
        /*   270 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   280 */
        78, 79, 63, 22, 56, 95, 96, 97, 56, 40,
        /*   290 */
        92, 110, 19, 19, 21, 21, 20, 21, 117, 42,
        /*   300 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   310 */
        53, 54, 55, 1, 1, 3, 3, 119, 120, 92,
        /*   320 */
        112, 39, 61, 41, 99, 68, 69, 70, 71, 72,
        /*   330 */
        73, 74, 75, 76, 77, 78, 79, 64, 64, 114,
        /*   340 */
        61, 65, 61, 101, 31, 66, 119, 66, 101, 39,
        /*   350 */
        37, 41, 20, 2, 42, 43, 44, 45, 46, 47,
        /*   360 */
        48, 49, 50, 51, 52, 53, 54, 55, 1, 56,
        /*   370 */
        3, 21, 40, 22, 20, 21, 112, 21, 114, 99,
        /*   380 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   390 */
        78, 79, 26, 23, 114, 95, 96, 92, 93, 93,
        /*   400 */
        19, 19, 21, 21, 112, 39, 114, 102, 102, 42,
        /*   410 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   420 */
        53, 54, 55, 1, 119, 119, 1, 2, 88, 19,
        /*   430 */
        90, 21, 99, 63, 99, 68, 69, 70, 71, 72,
        /*   440 */
        73, 74, 75, 76, 77, 78, 79, 114, 93, 114,
        /*   450 */
        1, 87, 92, 93, 95, 96, 19, 102, 21, 1,
        /*   460 */
        21, 21, 102, 41, 42, 43, 44, 45, 46, 47,
        /*   470 */
        48, 49, 50, 51, 52, 53, 54, 55, 1, 119,
        /*   480 */
        93, 23, 92, 2, 38, 38, 21, 99, 124, 102,
        /*   490 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   500 */
        78, 79, 114, 110, 100, 56, 119, 92, 93, 119,
        /*   510 */
        117, 67, 61, 27, 21, 20, 28, 102, 114, 42,
        /*   520 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   530 */
        53, 54, 55, 1, 119, 3, 21, 31, 22, 57,
        /*   540 */
        2, 40, 99, 37, 99, 68, 69, 70, 71, 72,
        /*   550 */
        73, 74, 75, 76, 77, 78, 79, 114, 81, 114,
        /*   560 */
        93, 93, 41, 93, 93, 21, 21, 65, 3, 102,
        /*   570 */
        102, 40, 102, 102, 42, 43, 44, 45, 46, 47,
        /*   580 */
        48, 49, 50, 51, 52, 53, 54, 55, 1, 119,
        /*   590 */
        119, 65, 3, 21, 20, 20, 3, 99, 99, 99,
        /*   600 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   610 */
        78, 79, 114, 114, 114, 20, 102, 21, 20, 112,
        /*   620 */
        2, 113, 112, 120, 112, 114, 117, 98, 41, 42,
        /*   630 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   640 */
        53, 54, 55, 1, 31, 112, 17, 89, 98, 125,
        /*   650 */
        125, 125, 125, 125, 125, 68, 69, 70, 71, 72,
        /*   660 */
        73, 74, 75, 76, 77, 78, 79, 125, 26, 125,
        /*   670 */
        125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
        /*   680 */
        125, 125, 125, 125, 42, 43, 44, 45, 46, 47,
        /*   690 */
        48, 49, 50, 51, 52, 53, 54, 55, 1, 125,
        /*   700 */
        125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
        /*   710 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   720 */
        78, 79, 125, 125, 125, 125, 125, 125, 125, 32,
        /*   730 */
        125, 125, 125, 125, 125, 125, 125, 125, 125, 42,
        /*   740 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   750 */
        53, 54, 55, 1, 125, 125, 125, 125, 125, 125,
        /*   760 */
        125, 125, 125, 125, 125, 68, 69, 70, 71, 72,
        /*   770 */
        73, 74, 75, 76, 77, 78, 79, 125, 125, 125,
        /*   780 */
        125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
        /*   790 */
        125, 125, 125, 125, 42, 43, 44, 45, 46, 47,
        /*   800 */
        48, 49, 50, 51, 52, 53, 54, 55, 125, 125,
        /*   810 */
        125, 125, 125, 125, 125, 125, 125, 125, 125, 23,
        /*   820 */
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        /*   830 */
        78, 79, 125, 125, 125, 125, 125, 42, 43, 44,
        /*   840 */
        45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
        /*   850 */
        55, 125, 125, 125, 125, 125, 125, 61, 125, 125,
        /*   860 */
        125, 125, 66, 68, 69, 70, 71, 72, 73, 74,
        /*   870 */
        75, 76, 77, 78, 79, 125, 125, 125, 125, 125,
        /*   880 */
        125, 125, 125, 19, 20, 21, 125, 125, 24, 25,
        /*   890 */
        125, 125, 93, 125, 30, 125, 93, 125, 34, 35,
        /*   900 */
        36, 102, 38, 125, 40, 102, 125, 43, 125, 125,
        /*   910 */
        125, 87, 125, 114, 125, 91, 125, 114, 94, 95,
        /*   920 */
        125, 125, 58, 59, 60, 61, 62, 103, 104, 65,
        /*   930 */
        66, 107, 108, 109, 93, 111, 125, 125, 125, 125,
        /*   940 */
        125, 125, 118, 102, 80, 19, 20, 21, 125, 125,
        /*   950 */
        24, 25, 125, 87, 125, 114, 30, 91, 125, 87,
        /*   960 */
        34, 95, 36, 91, 38, 125, 40, 95, 125, 43,
        /*   970 */
        104, 125, 125, 107, 108, 109, 104, 111, 125, 107,
        /*   980 */
        108, 109, 125, 111, 58, 59, 60, 61, 62, 125,
        /*   990 */
        125, 65, 66, 67, 125, 87, 125, 125, 95, 91,
        /*  1000 */
        125, 125, 125, 95, 125, 125, 80, 19, 20, 21,
        /*  1010 */
        107, 93, 24, 25, 111, 107, 108, 109, 30, 111,
        /*  1020 */
        102, 125, 34, 125, 36, 125, 38, 125, 40, 125,
        /*  1030 */
        125, 43, 114, 125, 125, 87, 125, 125, 125, 91,
        /*  1040 */
        125, 125, 94, 95, 96, 125, 58, 59, 60, 61,
        /*  1050 */
        62, 103, 104, 65, 66, 107, 108, 109, 125, 111,
        /*  1060 */
        125, 125, 125, 125, 19, 125, 21, 125, 80, 19,
        /*  1070 */
        20, 21, 125, 125, 24, 25, 31, 19, 33, 21,
        /*  1080 */
        30, 125, 37, 125, 34, 125, 36, 125, 38, 31,
        /*  1090 */
        40, 33, 125, 43, 125, 37, 125, 87, 125, 125,
        /*  1100 */
        125, 91, 125, 125, 94, 95, 125, 125, 58, 59,
        /*  1110 */
        60, 61, 62, 103, 104, 65, 66, 107, 108, 109,
        /*  1120 */
        125, 111, 125, 125, 125, 125, 125, 125, 118, 125,
        /*  1130 */
        80, 19, 20, 21, 125, 125, 24, 25, 125, 125,
        /*  1140 */
        125, 125, 30, 125, 125, 125, 34, 125, 36, 125,
        /*  1150 */
        38, 125, 40, 125, 125, 43, 125, 125, 125, 87,
        /*  1160 */
        125, 125, 125, 91, 125, 125, 94, 95, 125, 125,
        /*  1170 */
        58, 59, 60, 61, 62, 103, 104, 65, 66, 107,
        /*  1180 */
        108, 109, 125, 111, 125, 125, 125, 125, 125, 125,
        /*  1190 */
        118, 125, 80, 19, 20, 21, 125, 125, 24, 25,
        /*  1200 */
        125, 125, 125, 125, 30, 125, 125, 125, 34, 125,
        /*  1210 */
        36, 125, 38, 125, 40, 125, 125, 43, 125, 125,
        /*  1220 */
        125, 87, 125, 125, 125, 91, 125, 125, 94, 95,
        /*  1230 */
        96, 125, 58, 59, 60, 61, 62, 103, 104, 65,
        /*  1240 */
        66, 107, 108, 109, 125, 111, 125, 125, 125, 125,
        /*  1250 */
        125, 125, 125, 125, 80, 19, 20, 21, 125, 125,
        /*  1260 */
        24, 25, 125, 125, 125, 125, 30, 125, 125, 125,
        /*  1270 */
        34, 125, 36, 125, 38, 125, 40, 125, 125, 43,
        /*  1280 */
        125, 125, 125, 87, 125, 125, 125, 91, 125, 125,
        /*  1290 */
        94, 95, 125, 125, 58, 59, 60, 61, 62, 103,
        /*  1300 */
        104, 65, 66, 107, 108, 109, 125, 111, 125, 125,
        /*  1310 */
        125, 125, 125, 125, 125, 125, 80, 19, 20, 21,
        /*  1320 */
        125, 125, 24, 25, 125, 125, 125, 125, 30, 125,
        /*  1330 */
        125, 125, 34, 125, 36, 125, 38, 125, 40, 125,
        /*  1340 */
        125, 43, 125, 125, 125, 87, 125, 125, 125, 91,
        /*  1350 */
        125, 125, 94, 95, 125, 125, 58, 59, 60, 61,
        /*  1360 */
        62, 103, 104, 65, 66, 107, 108, 109, 125, 111,
        /*  1370 */
        125, 125, 125, 125, 125, 125, 125, 125, 80, 19,
        /*  1380 */
        20, 21, 125, 125, 24, 25, 125, 125, 125, 125,
        /*  1390 */
        30, 125, 125, 125, 34, 125, 36, 125, 38, 125,
        /*  1400 */
        40, 125, 125, 43, 125, 125, 125, 87, 125, 125,
        /*  1410 */
        125, 91, 125, 125, 94, 95, 125, 125, 58, 59,
        /*  1420 */
        60, 61, 62, 103, 104, 65, 66, 107, 108, 109,
        /*  1430 */
        125, 111, 125, 125, 125, 125, 125, 125, 125, 125,
        /*  1440 */
        80, 19, 20, 21, 125, 125, 24, 25, 125, 125,
        /*  1450 */
        125, 125, 30, 125, 125, 125, 34, 125, 36, 125,
        /*  1460 */
        38, 125, 40, 125, 125, 43, 125, 125, 125, 87,
        /*  1470 */
        125, 125, 125, 91, 125, 125, 94, 95, 125, 125,
        /*  1480 */
        58, 59, 60, 61, 62, 103, 104, 65, 125, 107,
        /*  1490 */
        108, 109, 125, 111, 125, 125, 125, 125, 125, 125,
        /*  1500 */
        125, 125, 80, 19, 20, 21, 125, 125, 24, 25,
        /*  1510 */
        125, 125, 125, 87, 30, 125, 125, 91, 34, 125,
        /*  1520 */
        36, 95, 38, 125, 40, 125, 125, 43, 125, 125,
        /*  1530 */
        125, 3, 125, 107, 108, 109, 125, 111, 125, 125,
        /*  1540 */
        125, 125, 58, 59, 60, 61, 62, 125, 125, 65,
        /*  1550 */
        125, 125, 125, 125, 26, 125, 28, 29, 125, 31,
        /*  1560 */
        32, 125, 125, 125, 80, 37, 125, 39, 40, 41,
        /*  1570 */
        125, 125, 87, 125, 125, 125, 91, 125, 87, 94,
        /*  1580 */
        95, 125, 91, 125, 56, 125, 95, 125, 103, 104,
        /*  1590 */
        125, 63, 107, 108, 109, 67, 111, 87, 107, 108,
        /*  1600 */
        109, 91, 111, 125, 94, 95, 121, 122, 125, 81,
        /*  1610 */
        125, 125, 125, 103, 104, 92, 93, 107, 108, 109,
        /*  1620 */
        125, 111, 125, 125, 125, 102, 125, 125, 105, 106,
        /*  1630 */
        87, 125, 122, 125, 91, 125, 125, 94, 95, 125,
        /*  1640 */
        125, 125, 119, 125, 125, 125, 103, 104, 125, 125,
        /*  1650 */
        107, 108, 109, 87, 111, 125, 125, 91, 125, 125,
        /*  1660 */
        94, 95, 125, 125, 87, 125, 125, 125, 91, 103,
        /*  1670 */
        104, 94, 95, 107, 108, 109, 125, 111, 125, 125,
        /*  1680 */
        103, 104, 125, 87, 107, 108, 109, 91, 111, 125,
        /*  1690 */
        94, 95, 125, 125, 87, 125, 125, 125, 91, 103,
        /*  1700 */
        104, 94, 95, 107, 108, 109, 125, 111, 125, 87,
        /*  1710 */
        103, 104, 125, 91, 107, 108, 109, 95, 111, 125,
        /*  1720 */
        87, 125, 125, 125, 91, 125, 125, 94, 95, 107,
        /*  1730 */
        108, 109, 125, 111, 125, 125, 103, 104, 125, 87,
        /*  1740 */
        107, 108, 109, 91, 111, 125, 94, 95, 125, 125,
        /*  1750 */
        125, 125, 125, 125, 125, 103, 104, 125, 87, 107,
        /*  1760 */
        108, 109, 91, 111, 125, 94, 95, 125, 125, 87,
        /*  1770 */
        125, 125, 125, 91, 103, 104, 94, 95, 107, 108,
        /*  1780 */
        109, 125, 111, 125, 125, 103, 104, 125, 87, 107,
        /*  1790 */
        108, 109, 91, 111, 125, 94, 95, 125, 125, 87,
        /*  1800 */
        125, 125, 125, 91, 103, 104, 94, 95, 107, 108,
        /*  1810 */
        109, 125, 111, 125, 125, 103, 104, 125, 125, 107,
        /*  1820 */
        108, 109, 125, 111, 87, 125, 125, 125, 91, 125,
        /*  1830 */
        125, 94, 95, 125, 125, 87, 125, 125, 125, 91,
        /*  1840 */
        103, 104, 94, 95, 107, 108, 109, 125, 111, 125,
        /*  1850 */
        125, 103, 104, 125, 87, 107, 108, 109, 91, 111,
        /*  1860 */
        125, 94, 95, 125, 125, 87, 125, 125, 125, 91,
        /*  1870 */
        103, 104, 94, 95, 107, 108, 109, 125, 111, 125,
        /*  1880 */
        125, 103, 104, 125, 87, 107, 108, 109, 91, 111,
        /*  1890 */
        125, 94, 95, 125, 125, 87, 125, 125, 125, 91,
        /*  1900 */
        103, 104, 94, 95, 107, 108, 109, 125, 111, 125,
        /*  1910 */
        125, 103, 104, 125, 125, 107, 108, 109, 125, 111,
        /*  1920 */
        87, 125, 125, 125, 91, 125, 125, 94, 95, 125,
        /*  1930 */
        125, 87, 125, 125, 125, 91, 103, 104, 94, 95,
        /*  1940 */
        107, 108, 109, 125, 111, 125, 125, 103, 104, 125,
        /*  1950 */
        87, 107, 108, 109, 91, 111, 125, 94, 95, 125,
        /*  1960 */
        125, 87, 125, 125, 125, 91, 103, 104, 94, 95,
        /*  1970 */
        107, 108, 109, 125, 111, 125, 125, 103, 104, 125,
        /*  1980 */
        87, 107, 108, 109, 91, 111, 125, 94, 95, 125,
        /*  1990 */
        125, 87, 125, 125, 125, 91, 103, 104, 94, 95,
        /*  2000 */
        107, 108, 109, 125, 111, 125, 125, 103, 104, 125,
        /*  2010 */
        125, 107, 108, 109, 125, 111, 87, 125, 125, 125,
        /*  2020 */
        91, 125, 125, 94, 95, 125, 125, 87, 125, 125,
        /*  2030 */
        125, 91, 103, 104, 94, 95, 107, 108, 109, 125,
        /*  2040 */
        111, 125, 125, 103, 104, 12, 125, 107, 108, 109,
        /*  2050 */
        125, 111, 19, 125, 125, 125, 87, 24, 25, 125,
        /*  2060 */
        91, 125, 125, 30, 95, 125, 87, 34, 125, 36,
        /*  2070 */
        91, 125, 125, 94, 95, 125, 107, 108, 109, 125,
        /*  2080 */
        111, 125, 103, 104, 125, 87, 107, 108, 109, 91,
        /*  2090 */
        111, 125, 94, 95, 125, 125, 125, 125, 125, 125,
        /*  2100 */
        125, 103, 104, 125, 87, 107, 108, 109, 91, 111,
        /*  2110 */
        125, 94, 95, 80, 81, 82, 125, 125, 125, 125,
        /*  2120 */
        103, 104, 125, 87, 107, 108, 109, 91, 111, 125,
        /*  2130 */
        94, 95, 125, 125, 125, 125, 125, 125, 125, 103,
        /*  2140 */
        104, 12, 125, 107, 108, 109, 125, 111, 19, 125,
        /*  2150 */
        125, 125, 125, 24, 25, 125, 125, 125, 125, 30,
        /*  2160 */
        125, 125, 87, 34, 125, 36, 91, 125, 125, 94,
        /*  2170 */
        95, 125, 125, 87, 125, 125, 125, 91, 103, 104,
        /*  2180 */
        94, 95, 107, 108, 109, 1, 111, 3, 125, 103,
        /*  2190 */
        104, 125, 125, 107, 108, 109, 87, 111, 125, 125,
        /*  2200 */
        91, 125, 125, 94, 95, 125, 125, 23, 125, 80,
        /*  2210 */
        81, 82, 103, 104, 125, 31, 107, 108, 109, 87,
        /*  2220 */
        111, 37, 125, 91, 40, 3, 125, 95, 87, 125,
        /*  2230 */
        125, 125, 91, 125, 125, 125, 95, 125, 125, 107,
        /*  2240 */
        108, 109, 125, 111, 22, 125, 125, 63, 107, 108,
        /*  2250 */
        109, 125, 111, 31, 125, 92, 93, 125, 125, 37,
        /*  2260 */
        125, 125, 40, 92, 93, 102, 125, 125, 105, 106,
        /*  2270 */
        92, 93, 125, 102, 125, 125, 105, 106, 92, 93,
        /*  2280 */
        102, 125, 119, 105, 106, 63, 92, 93, 102, 125,
        /*  2290 */
        119, 105, 106, 125, 125, 125, 102, 119, 125, 105,
        /*  2300 */
        106, 125, 125, 125, 125, 119, 125, 125, 125, 125,
        /*  2310 */
        125, 125, 125, 119,
    );
    const YY_SHIFT_USE_DFLT = - 40;
    const YY_SHIFT_MAX = 259;
    static public $yy_shift_ofst = array(
        /*     0 */
        1, 1174, 1236, 988, 1236, 1174, 988, 988, 926, 864,
        /*    10 */
        864, 988, 988, 1298, 988, 988, 988, 988, 1298, 988,
        /*    20 */
        988, 988, 988, 988, 988, 988, 988, 988, 988, 1360,
        /*    30 */
        988, 988, 988, 988, 988, 1050, 988, 988, 988, 988,
        /*    40 */
        988, 988, 988, 988, 1112, 1112, 1422, 1422, 1422, 1484,
        /*    50 */
        1422, 1422, 1422, - 1, 54, 109, 109, 109, 109, 109,
        /*    60 */
        532, 642, 477, 587, 367, 147, 312, 697, 422, 257,
        /*    70 */
        202, 752, 752, 752, 752, 752, 752, 752, 752, 752,
        /*    80 */
        752, 752, 752, 752, 752, 752, 752, 752, 752, 752,
        /*    90 */
        795, 795, 2184, 206, 55, 1, 2033, 1045, 1058, 2,
        /*   100 */
        58, 2, 58, 55, 55, 276, 796, 332, 425, 2129,
        /*   110 */
        222, 26, 232, 313, 149, 115, 43, 274, 219, 228,
        /*   120 */
        143, 31, 120, 53, 354, 120, 120, 370, 332, 382,
        /*   130 */
        381, 120, 120, 458, 437, 381, 506, 120, 354, 332,
        /*   140 */
        120, 410, 120, 53, 449, 120, 207, 207, 207, 207,
        /*   150 */
        207, 207, 207, 146, 207, 146, 207, - 40, 100, 273,
        /*   160 */
        53, 53, 53, 53, 53, 53, 53, 53, 53, 279,
        /*   170 */
        53, 281, 279, 53, 279, 53, 53, 53, 279, 281,
        /*   180 */
        279, 53, 279, 53, 279, 249, 53, 53, 53, 53,
        /*   190 */
        613, 207, 613, 618, 207, 207, 629, 207, 531, 618,
        /*   200 */
        146, 207, 146, 146, - 40, - 40, - 40, - 40, - 40, 1528,
        /*   210 */
        2222, 97, - 39, 110, 104, 13, 17, 310, 282, 21,
        /*   220 */
        351, 104, 233, 366, 106, 261, 531, 526, 565, 545,
        /*   230 */
        521, 502, 544, 589, 572, 596, 598, 595, 593, 574,
        /*   240 */
        575, 538, 482, 447, 465, 446, 481, 356, 439, 440,
        /*   250 */
        444, 350, 451, 501, 516, 488, 515, 486, 493, 495,
    );
    const YY_REDUCE_USE_DFLT = - 113;
    const YY_REDUCE_MAX = 208;
    static public $yy_reduce_ofst = array(
        /*     0 */
        27, 1485, 1134, 1072, 948, 1510, 824, 1010, 1382, 1596,
        /*    10 */
        1196, 1682, 1652, 1671, 1712, 1748, 1258, 1320, 2109, 1979,
        /*    20 */
        2017, 2086, 1797, 1863, 1874, 1808, 1767, 1543, 1607, 1701,
        /*    30 */
        1929, 1633, 1737, 1577, 1566, 1998, 2036, 1940, 1833, 1778,
        /*    40 */
        2075, 1893, 1904, 1844, 866, 872, 1491, 1426, 908, 1622,
        /*    50 */
        1969, 2141, 2132, 2178, 1523, 2178, 2194, 2186, 2171, 2163,
        /*    60 */
        - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26,
        /*    70 */
        - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26,
        /*    80 */
        - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26, - 26,
        /*    90 */
        - 26, - 26, 360, 415, 305, 124, 51, 841, 918, 799,
        /*   100 */
        470, 803, 387, 471, 306, 903, 151, 190, 198, 364,
        /*   110 */
        340, 57, 57, 57, 292, 404, 292, 292, - 112, 57,
        /*   120 */
        - 112, 57, 443, 355, 181, 333, 280, - 112, 300, 388,
        /*   130 */
        335, 264, 445, 390, 335, 500, 468, 335, 393, 359,
        /*   140 */
        498, 335, 499, 467, 57, 225, 57, 57, 57, 57,
        /*   150 */
        57, 227, 57, - 97, 57, - 112, 57, 57, 509, 511,
        /*   160 */
        514, 514, 514, 514, 514, 514, 514, 514, 514, 508,
        /*   170 */
        514, 507, 508, 514, 508, 514, 514, 514, 508, 512,
        /*   180 */
        508, 514, 508, 514, 508, 510, 514, 514, 514, 514,
        /*   190 */
        550, 85, 529, 503, 85, 85, 558, 85, 533, 503,
        /*   200 */
        56, 85, 56, 56, 247, 122, 242, 164, 208,
    );
    static public $yyExpectedTokens = array(
        /* 0 */
        array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 24, 25, 30, 34, 36,),
        /* 1 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 2 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 3 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 4 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 5 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 6 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 7 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 8 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 67, 80,),
        /* 9 */
        array(19, 20, 21, 24, 25, 30, 34, 35, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 10 */
        array(19, 20, 21, 24, 25, 30, 34, 35, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 11 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 12 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 13 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 14 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 15 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 16 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 17 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 18 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 19 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 20 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 21 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 22 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 23 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 24 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 25 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 26 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 27 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 28 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 29 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 30 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 31 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 32 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 33 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 34 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 35 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 36 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 37 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 38 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 39 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 40 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 41 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 42 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 43 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 44 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 45 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 66, 80,),
        /* 46 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 80,),
        /* 47 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 80,),
        /* 48 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 80,),
        /* 49 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 80,),
        /* 50 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 80,),
        /* 51 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 80,),
        /* 52 */
        array(19, 20, 21, 24, 25, 30, 34, 36, 38, 40, 43, 58, 59, 60, 61, 62, 65, 80,),
        /* 53 */
        array(1, 3, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 54 */
        array(1, 29, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 55 */
        array(1, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 56 */
        array(1, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 57 */
        array(1, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 58 */
        array(1, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 59 */
        array(1, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 60 */
        array(1, 3, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 61 */
        array(1, 26, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 62 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81,),
        /* 63 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 64 */
        array(1, 3, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 65 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 66 */
        array(1, 3, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 67 */
        array(1, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 68 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 69 */
        array(1, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 70 */
        array(1, 3, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 71 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 72 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 73 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 74 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 75 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 76 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 77 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 78 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 79 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 80 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 81 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 82 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 83 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 84 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 85 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 86 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 87 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 88 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 89 */
        array(1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 90 */
        array(42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 91 */
        array(42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        /* 92 */
        array(1, 3, 23, 31, 37, 40, 63,),
        /* 93 */
        array(1, 3, 31, 37, 56,),
        /* 94 */
        array(1, 31, 37,),
        /* 95 */
        array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 24, 25, 30, 34, 36,),
        /* 96 */
        array(12, 19, 24, 25, 30, 34, 36, 80, 81, 82,),
        /* 97 */
        array(19, 21, 31, 33, 37,),
        /* 98 */
        array(19, 21, 31, 33, 37,),
        /* 99 */
        array(19, 21, 31, 37,),
        /* 100 */
        array(1, 3, 31, 37,),
        /* 101 */
        array(19, 21, 31, 37,),
        /* 102 */
        array(1, 3, 31, 37,),
        /* 103 */
        array(1, 31, 37,),
        /* 104 */
        array(1, 31, 37,),
        /* 105 */
        array(20, 21, 65,),
        /* 106 */
        array(23, 61, 66,),
        /* 107 */
        array(20, 40,),
        /* 108 */
        array(1, 2,),
        /* 109 */
        array(12, 19, 24, 25, 30, 34, 36, 80, 81, 82,),
        /* 110 */
        array(5, 6, 8, 9, 10, 16, 17, 18,),
        /* 111 */
        array(1, 3, 31, 32, 37, 56,),
        /* 112 */
        array(1, 3, 31, 37, 56,),
        /* 113 */
        array(1, 3, 31, 37, 56,),
        /* 114 */
        array(19, 21, 22, 64,),
        /* 115 */
        array(19, 21, 22, 27,),
        /* 116 */
        array(19, 21, 22,),
        /* 117 */
        array(19, 21, 64,),
        /* 118 */
        array(22, 23, 63,),
        /* 119 */
        array(1, 33, 56,),
        /* 120 */
        array(22, 23, 63,),
        /* 121 */
        array(1, 3, 56,),
        /* 122 */
        array(19, 21,),
        /* 123 */
        array(31, 37,),
        /* 124 */
        array(20, 21,),
        /* 125 */
        array(19, 21,),
        /* 126 */
        array(19, 21,),
        /* 127 */
        array(23, 63,),
        /* 128 */
        array(20, 40,),
        /* 129 */
        array(19, 21,),
        /* 130 */
        array(19, 21,),
        /* 131 */
        array(19, 21,),
        /* 132 */
        array(19, 21,),
        /* 133 */
        array(1, 23,),
        /* 134 */
        array(19, 21,),
        /* 135 */
        array(19, 21,),
        /* 136 */
        array(31, 37,),
        /* 137 */
        array(19, 21,),
        /* 138 */
        array(20, 21,),
        /* 139 */
        array(20, 40,),
        /* 140 */
        array(19, 21,),
        /* 141 */
        array(19, 21,),
        /* 142 */
        array(19, 21,),
        /* 143 */
        array(31, 37,),
        /* 144 */
        array(1, 56,),
        /* 145 */
        array(19, 21,),
        /* 146 */
        array(1,),
        /* 147 */
        array(1,),
        /* 148 */
        array(1,),
        /* 149 */
        array(1,),
        /* 150 */
        array(1,),
        /* 151 */
        array(1,),
        /* 152 */
        array(1,),
        /* 153 */
        array(23,),
        /* 154 */
        array(1,),
        /* 155 */
        array(23,),
        /* 156 */
        array(1,),
        /* 157 */
        array(),
        /* 158 */
        array(19, 20, 21,),
        /* 159 */
        array(19, 21, 64,),
        /* 160 */
        array(31, 37,),
        /* 161 */
        array(31, 37,),
        /* 162 */
        array(31, 37,),
        /* 163 */
        array(31, 37,),
        /* 164 */
        array(31, 37,),
        /* 165 */
        array(31, 37,),
        /* 166 */
        array(31, 37,),
        /* 167 */
        array(31, 37,),
        /* 168 */
        array(31, 37,),
        /* 169 */
        array(61, 66,),
        /* 170 */
        array(31, 37,),
        /* 171 */
        array(61, 66,),
        /* 172 */
        array(61, 66,),
        /* 173 */
        array(31, 37,),
        /* 174 */
        array(61, 66,),
        /* 175 */
        array(31, 37,),
        /* 176 */
        array(31, 37,),
        /* 177 */
        array(31, 37,),
        /* 178 */
        array(61, 66,),
        /* 179 */
        array(61, 66,),
        /* 180 */
        array(61, 66,),
        /* 181 */
        array(31, 37,),
        /* 182 */
        array(61, 66,),
        /* 183 */
        array(31, 37,),
        /* 184 */
        array(61, 66,),
        /* 185 */
        array(19, 40,),
        /* 186 */
        array(31, 37,),
        /* 187 */
        array(31, 37,),
        /* 188 */
        array(31, 37,),
        /* 189 */
        array(31, 37,),
        /* 190 */
        array(31,),
        /* 191 */
        array(1,),
        /* 192 */
        array(31,),
        /* 193 */
        array(2,),
        /* 194 */
        array(1,),
        /* 195 */
        array(1,),
        /* 196 */
        array(17,),
        /* 197 */
        array(1,),
        /* 198 */
        array(40,),
        /* 199 */
        array(2,),
        /* 200 */
        array(23,),
        /* 201 */
        array(1,),
        /* 202 */
        array(23,),
        /* 203 */
        array(23,),
        /* 204 */
        array(),
        /* 205 */
        array(),
        /* 206 */
        array(),
        /* 207 */
        array(),
        /* 208 */
        array(),
        /* 209 */
        array(3, 26, 28, 29, 31, 32, 37, 39, 40, 41, 56, 63, 67, 81,),
        /* 210 */
        array(3, 22, 31, 37, 40, 63,),
        /* 211 */
        array(19, 20, 21, 38,),
        /* 212 */
        array(40, 61, 63, 67,),
        /* 213 */
        array(33, 40, 63,),
        /* 214 */
        array(40, 63,),
        /* 215 */
        array(27, 81,),
        /* 216 */
        array(21, 64,),
        /* 217 */
        array(39, 41,),
        /* 218 */
        array(39, 41,),
        /* 219 */
        array(39, 67,),
        /* 220 */
        array(2, 22,),
        /* 221 */
        array(40, 63,),
        /* 222 */
        array(3, 27,),
        /* 223 */
        array(26, 39,),
        /* 224 */
        array(39, 41,),
        /* 225 */
        array(22, 61,),
        /* 226 */
        array(40,),
        /* 227 */
        array(65,),
        /* 228 */
        array(3,),
        /* 229 */
        array(21,),
        /* 230 */
        array(41,),
        /* 231 */
        array(65,),
        /* 232 */
        array(21,),
        /* 233 */
        array(3,),
        /* 234 */
        array(21,),
        /* 235 */
        array(21,),
        /* 236 */
        array(20,),
        /* 237 */
        array(20,),
        /* 238 */
        array(3,),
        /* 239 */
        array(20,),
        /* 240 */
        array(20,),
        /* 241 */
        array(2,),
        /* 242 */
        array(57,),
        /* 243 */
        array(38,),
        /* 244 */
        array(21,),
        /* 245 */
        array(38,),
        /* 246 */
        array(2,),
        /* 247 */
        array(21,),
        /* 248 */
        array(21,),
        /* 249 */
        array(21,),
        /* 250 */
        array(67,),
        /* 251 */
        array(21,),
        /* 252 */
        array(61,),
        /* 253 */
        array(40,),
        /* 254 */
        array(22,),
        /* 255 */
        array(28,),
        /* 256 */
        array(21,),
        /* 257 */
        array(27,),
        /* 258 */
        array(21,),
        /* 259 */
        array(20,),
        /* 260 */
        array(),
        /* 261 */
        array(),
        /* 262 */
        array(),
        /* 263 */
        array(),
        /* 264 */
        array(),
        /* 265 */
        array(),
        /* 266 */
        array(),
        /* 267 */
        array(),
        /* 268 */
        array(),
        /* 269 */
        array(),
        /* 270 */
        array(),
        /* 271 */
        array(),
        /* 272 */
        array(),
        /* 273 */
        array(),
        /* 274 */
        array(),
        /* 275 */
        array(),
        /* 276 */
        array(),
        /* 277 */
        array(),
        /* 278 */
        array(),
        /* 279 */
        array(),
        /* 280 */
        array(),
        /* 281 */
        array(),
        /* 282 */
        array(),
        /* 283 */
        array(),
        /* 284 */
        array(),
        /* 285 */
        array(),
        /* 286 */
        array(),
        /* 287 */
        array(),
        /* 288 */
        array(),
        /* 289 */
        array(),
        /* 290 */
        array(),
        /* 291 */
        array(),
        /* 292 */
        array(),
        /* 293 */
        array(),
        /* 294 */
        array(),
        /* 295 */
        array(),
        /* 296 */
        array(),
        /* 297 */
        array(),
        /* 298 */
        array(),
        /* 299 */
        array(),
        /* 300 */
        array(),
        /* 301 */
        array(),
        /* 302 */
        array(),
        /* 303 */
        array(),
        /* 304 */
        array(),
        /* 305 */
        array(),
        /* 306 */
        array(),
        /* 307 */
        array(),
        /* 308 */
        array(),
        /* 309 */
        array(),
        /* 310 */
        array(),
        /* 311 */
        array(),
        /* 312 */
        array(),
        /* 313 */
        array(),
        /* 314 */
        array(),
        /* 315 */
        array(),
        /* 316 */
        array(),
        /* 317 */
        array(),
        /* 318 */
        array(),
        /* 319 */
        array(),
        /* 320 */
        array(),
        /* 321 */
        array(),
        /* 322 */
        array(),
        /* 323 */
        array(),
        /* 324 */
        array(),
        /* 325 */
        array(),
        /* 326 */
        array(),
        /* 327 */
        array(),
        /* 328 */
        array(),
        /* 329 */
        array(),
        /* 330 */
        array(),
        /* 331 */
        array(),
        /* 332 */
        array(),
        /* 333 */
        array(),
        /* 334 */
        array(),
        /* 335 */
        array(),
        /* 336 */
        array(),
        /* 337 */
        array(),
        /* 338 */
        array(),
        /* 339 */
        array(),
        /* 340 */
        array(),
        /* 341 */
        array(),
        /* 342 */
        array(),
        /* 343 */
        array(),
        /* 344 */
        array(),
        /* 345 */
        array(),
        /* 346 */
        array(),
        /* 347 */
        array(),
        /* 348 */
        array(),
        /* 349 */
        array(),
        /* 350 */
        array(),
        /* 351 */
        array(),
        /* 352 */
        array(),
        /* 353 */
        array(),
        /* 354 */
        array(),
        /* 355 */
        array(),
        /* 356 */
        array(),
        /* 357 */
        array(),
        /* 358 */
        array(),
        /* 359 */
        array(),
        /* 360 */
        array(),
        /* 361 */
        array(),
        /* 362 */
        array(),
        /* 363 */
        array(),
    );
    static public $yy_default = array(
        /*     0 */
        367, 553, 570, 524, 570, 570, 524, 524, 570, 570,
        /*    10 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*    20 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*    30 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*    40 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*    50 */
        570, 570, 570, 570, 430, 430, 407, 399, 430, 430,
        /*    60 */
        570, 570, 570, 570, 570, 570, 570, 435, 570, 570,
        /*    70 */
        570, 437, 451, 441, 432, 464, 454, 455, 459, 460,
        /*    80 */
        456, 463, 412, 554, 556, 435, 523, 555, 440, 522,
        /*    90 */
        467, 468, 479, 443, 430, 364, 570, 430, 430, 430,
        /*   100 */
        487, 430, 450, 430, 430, 570, 536, 570, 421, 570,
        /*   110 */
        570, 443, 443, 443, 497, 570, 497, 497, 488, 443,
        /*   120 */
        488, 443, 570, 430, 570, 570, 570, 488, 570, 570,
        /*   130 */
        570, 497, 570, 424, 570, 570, 430, 570, 570, 570,
        /*   140 */
        570, 570, 570, 409, 443, 570, 453, 466, 472, 471,
        /*   150 */
        470, 426, 446, 533, 447, 488, 448, 531, 570, 498,
        /*   160 */
        402, 404, 406, 401, 405, 397, 415, 408, 410, 494,
        /*   170 */
        400, 493, 517, 411, 515, 416, 417, 418, 492, 491,
        /*   180 */
        516, 395, 495, 396, 514, 497, 420, 414, 419, 394,
        /*   190 */
        569, 425, 569, 525, 422, 487, 385, 427, 497, 526,
        /*   200 */
        534, 450, 511, 537, 530, 497, 530, 530, 497, 445,
        /*   210 */
        479, 570, 479, 479, 479, 469, 570, 570, 570, 570,
        /*   220 */
        509, 465, 469, 570, 570, 475, 509, 570, 570, 570,
        /*   230 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*   240 */
        570, 509, 481, 570, 570, 477, 509, 570, 570, 570,
        /*   250 */
        570, 570, 475, 535, 570, 438, 570, 469, 570, 570,
        /*   260 */
        481, 431, 506, 502, 519, 365, 413, 532, 439, 504,
        /*   270 */
        505, 520, 568, 503, 510, 518, 521, 442, 461, 429,
        /*   280 */
        508, 509, 529, 428, 392, 389, 390, 391, 527, 528,
        /*   290 */
        444, 445, 489, 496, 484, 478, 473, 474, 476, 388,
        /*   300 */
        387, 372, 373, 374, 375, 371, 370, 366, 368, 369,
        /*   310 */
        376, 377, 383, 384, 386, 382, 381, 378, 379, 380,
        /*   320 */
        499, 507, 565, 512, 423, 564, 449, 549, 546, 547,
        /*   330 */
        548, 557, 558, 567, 560, 550, 552, 566, 563, 559,
        /*   340 */
        562, 561, 545, 544, 485, 452, 486, 490, 483, 482,
        /*   350 */
        500, 501, 480, 513, 457, 541, 542, 543, 540, 539,
        /*   360 */
        458, 462, 538, 551,
    );
    const YYNOCODE = 126;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 364;
    const YYNRULE = 206;
    const YYERRORSYMBOL = 83;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array();

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
        '$', 'VERT', 'COLON', 'RDEL',
        'COMMENT', 'PHPSTARTTAG', 'PHPENDTAG', 'PHPENDSCRIPT',
        'ASPSTARTTAG', 'ASPENDTAG', 'FAKEPHPSTARTTAG', 'XMLTAG',
        'TEXT', 'STRIPON', 'STRIPOFF', 'BLOCKSOURCE',
        'LITERALSTART', 'LITERALEND', 'LITERAL', 'LDEL',
        'DOLLAR', 'ID', 'EQUAL', 'PTR',
        'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC',
        'TO', 'STEP', 'LDELFOREACH', 'SPACE',
        'AS', 'APTR', 'LDELSETFILTER', 'SMARTYBLOCKCHILDPARENT',
        'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA',
        'OPENP', 'CLOSEP', 'MATH', 'UNIMATH',
        'ANDSYM', 'ISIN', 'ISDIVBY', 'ISNOTDIVBY',
        'ISEVEN', 'ISNOTEVEN', 'ISEVENBY', 'ISNOTEVENBY',
        'ISODD', 'ISNOTODD', 'ISODDBY', 'ISNOTODDBY',
        'INSTANCEOF', 'QMARK', 'NOT', 'TYPECAST',
        'HEX', 'DOT', 'SINGLEQUOTESTRING', 'DOUBLECOLON',
        'AT', 'HATCH', 'OPENB', 'CLOSEB',
        'EQUALS', 'NOTEQUALS', 'GREATERTHAN', 'LESSTHAN',
        'GREATEREQUAL', 'LESSEQUAL', 'IDENTITY', 'NONEIDENTITY',
        'MOD', 'LAND', 'LOR', 'LXOR',
        'QUOTE', 'BACKTICK', 'DOLLARID', 'error',
        'start', 'template', 'template_element', 'smartytag',
        'literal', 'literal_elements', 'literal_element', 'value',
        'modifierlist', 'attributes', 'expr', 'varindexed',
        'statement', 'statements', 'optspace', 'varvar',
        'foraction', 'modparameters', 'attribute', 'ternary',
        'array', 'ifcond', 'lop', 'variable',
        'function', 'doublequoted_with_quotes', 'static_class_access', 'object',
        'arrayindex', 'indexdef', 'varvarele', 'objectchain',
        'objectelement', 'method', 'params', 'modifier',
        'modparameter', 'arrayelements', 'arrayelement', 'doublequoted',
        'doublequotedcontent',
    );

    public static $yyRuleName = array(
        /*   0 */
        "start ::= template",
        /*   1 */
        "template ::= template_element",
        /*   2 */
        "template ::= template template_element",
        /*   3 */
        "template ::=",
        /*   4 */
        "template_element ::= smartytag RDEL",
        /*   5 */
        "template_element ::= COMMENT",
        /*   6 */
        "template_element ::= literal",
        /*   7 */
        "template_element ::= PHPSTARTTAG",
        /*   8 */
        "template_element ::= PHPENDTAG",
        /*   9 */
        "template_element ::= PHPENDSCRIPT",
        /*  10 */
        "template_element ::= ASPSTARTTAG",
        /*  11 */
        "template_element ::= ASPENDTAG",
        /*  12 */
        "template_element ::= FAKEPHPSTARTTAG",
        /*  13 */
        "template_element ::= XMLTAG",
        /*  14 */
        "template_element ::= TEXT",
        /*  15 */
        "template_element ::= STRIPON",
        /*  16 */
        "template_element ::= STRIPOFF",
        /*  17 */
        "template_element ::= BLOCKSOURCE",
        /*  18 */
        "literal ::= LITERALSTART LITERALEND",
        /*  19 */
        "literal ::= LITERALSTART literal_elements LITERALEND",
        /*  20 */
        "literal_elements ::= literal_elements literal_element",
        /*  21 */
        "literal_elements ::=",
        /*  22 */
        "literal_element ::= literal",
        /*  23 */
        "literal_element ::= LITERAL",
        /*  24 */
        "literal_element ::= PHPSTARTTAG",
        /*  25 */
        "literal_element ::= FAKEPHPSTARTTAG",
        /*  26 */
        "literal_element ::= PHPENDTAG",
        /*  27 */
        "literal_element ::= ASPSTARTTAG",
        /*  28 */
        "literal_element ::= ASPENDTAG",
        /*  29 */
        "smartytag ::= LDEL value",
        /*  30 */
        "smartytag ::= LDEL value modifierlist attributes",
        /*  31 */
        "smartytag ::= LDEL value attributes",
        /*  32 */
        "smartytag ::= LDEL expr modifierlist attributes",
        /*  33 */
        "smartytag ::= LDEL expr attributes",
        /*  34 */
        "smartytag ::= LDEL DOLLAR ID EQUAL value",
        /*  35 */
        "smartytag ::= LDEL DOLLAR ID EQUAL expr",
        /*  36 */
        "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes",
        /*  37 */
        "smartytag ::= LDEL varindexed EQUAL expr attributes",
        /*  38 */
        "smartytag ::= LDEL ID attributes",
        /*  39 */
        "smartytag ::= LDEL ID",
        /*  40 */
        "smartytag ::= LDEL ID PTR ID attributes",
        /*  41 */
        "smartytag ::= LDEL ID modifierlist attributes",
        /*  42 */
        "smartytag ::= LDEL ID PTR ID modifierlist attributes",
        /*  43 */
        "smartytag ::= LDELIF expr",
        /*  44 */
        "smartytag ::= LDELIF expr attributes",
        /*  45 */
        "smartytag ::= LDELIF statement",
        /*  46 */
        "smartytag ::= LDELIF statement attributes",
        /*  47 */
        "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes",
        /*  48 */
        "foraction ::= EQUAL expr",
        /*  49 */
        "foraction ::= INCDEC",
        /*  50 */
        "smartytag ::= LDELFOR statement TO expr attributes",
        /*  51 */
        "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
        /*  52 */
        "smartytag ::= LDELFOREACH attributes",
        /*  53 */
        "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes",
        /*  54 */
        "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes",
        /*  55 */
        "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes",
        /*  56 */
        "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes",
        /*  57 */
        "smartytag ::= LDELSETFILTER ID modparameters",
        /*  58 */
        "smartytag ::= LDELSETFILTER ID modparameters modifierlist",
        /*  59 */
        "smartytag ::= LDEL SMARTYBLOCKCHILDPARENT",
        /*  60 */
        "smartytag ::= LDELSLASH ID",
        /*  61 */
        "smartytag ::= LDELSLASH ID modifierlist",
        /*  62 */
        "smartytag ::= LDELSLASH ID PTR ID",
        /*  63 */
        "smartytag ::= LDELSLASH ID PTR ID modifierlist",
        /*  64 */
        "attributes ::= attributes attribute",
        /*  65 */
        "attributes ::= attribute",
        /*  66 */
        "attributes ::=",
        /*  67 */
        "attribute ::= SPACE ID EQUAL ID",
        /*  68 */
        "attribute ::= ATTR expr",
        /*  69 */
        "attribute ::= ATTR value",
        /*  70 */
        "attribute ::= SPACE ID",
        /*  71 */
        "attribute ::= SPACE expr",
        /*  72 */
        "attribute ::= SPACE value",
        /*  73 */
        "attribute ::= SPACE INTEGER EQUAL expr",
        /*  74 */
        "statements ::= statement",
        /*  75 */
        "statements ::= statements COMMA statement",
        /*  76 */
        "statement ::= DOLLAR varvar EQUAL expr",
        /*  77 */
        "statement ::= varindexed EQUAL expr",
        /*  78 */
        "statement ::= OPENP statement CLOSEP",
        /*  79 */
        "expr ::= value",
        /*  80 */
        "expr ::= ternary",
        /*  81 */
        "expr ::= DOLLAR ID COLON ID",
        /*  82 */
        "expr ::= expr MATH value",
        /*  83 */
        "expr ::= expr UNIMATH value",
        /*  84 */
        "expr ::= expr ANDSYM value",
        /*  85 */
        "expr ::= array",
        /*  86 */
        "expr ::= expr modifierlist",
        /*  87 */
        "expr ::= expr ifcond expr",
        /*  88 */
        "expr ::= expr ISIN array",
        /*  89 */
        "expr ::= expr ISIN value",
        /*  90 */
        "expr ::= expr lop expr",
        /*  91 */
        "expr ::= expr ISDIVBY expr",
        /*  92 */
        "expr ::= expr ISNOTDIVBY expr",
        /*  93 */
        "expr ::= expr ISEVEN",
        /*  94 */
        "expr ::= expr ISNOTEVEN",
        /*  95 */
        "expr ::= expr ISEVENBY expr",
        /*  96 */
        "expr ::= expr ISNOTEVENBY expr",
        /*  97 */
        "expr ::= expr ISODD",
        /*  98 */
        "expr ::= expr ISNOTODD",
        /*  99 */
        "expr ::= expr ISODDBY expr",
        /* 100 */
        "expr ::= expr ISNOTODDBY expr",
        /* 101 */
        "expr ::= value INSTANCEOF ID",
        /* 102 */
        "expr ::= value INSTANCEOF value",
        /* 103 */
        "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
        /* 104 */
        "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
        /* 105 */
        "value ::= variable",
        /* 106 */
        "value ::= UNIMATH value",
        /* 107 */
        "value ::= NOT value",
        /* 108 */
        "value ::= TYPECAST value",
        /* 109 */
        "value ::= variable INCDEC",
        /* 110 */
        "value ::= HEX",
        /* 111 */
        "value ::= INTEGER",
        /* 112 */
        "value ::= INTEGER DOT INTEGER",
        /* 113 */
        "value ::= INTEGER DOT",
        /* 114 */
        "value ::= DOT INTEGER",
        /* 115 */
        "value ::= ID",
        /* 116 */
        "value ::= function",
        /* 117 */
        "value ::= OPENP expr CLOSEP",
        /* 118 */
        "value ::= SINGLEQUOTESTRING",
        /* 119 */
        "value ::= doublequoted_with_quotes",
        /* 120 */
        "value ::= ID DOUBLECOLON static_class_access",
        /* 121 */
        "value ::= varindexed DOUBLECOLON static_class_access",
        /* 122 */
        "value ::= smartytag RDEL",
        /* 123 */
        "value ::= value modifierlist",
        /* 124 */
        "variable ::= varindexed",
        /* 125 */
        "variable ::= DOLLAR varvar AT ID",
        /* 126 */
        "variable ::= object",
        /* 127 */
        "variable ::= HATCH ID HATCH",
        /* 128 */
        "variable ::= HATCH ID HATCH arrayindex",
        /* 129 */
        "variable ::= HATCH variable HATCH",
        /* 130 */
        "variable ::= HATCH variable HATCH arrayindex",
        /* 131 */
        "varindexed ::= DOLLAR varvar arrayindex",
        /* 132 */
        "arrayindex ::= arrayindex indexdef",
        /* 133 */
        "arrayindex ::=",
        /* 134 */
        "indexdef ::= DOT DOLLAR varvar",
        /* 135 */
        "indexdef ::= DOT DOLLAR varvar AT ID",
        /* 136 */
        "indexdef ::= DOT ID",
        /* 137 */
        "indexdef ::= DOT INTEGER",
        /* 138 */
        "indexdef ::= DOT LDEL expr RDEL",
        /* 139 */
        "indexdef ::= OPENB ID CLOSEB",
        /* 140 */
        "indexdef ::= OPENB ID DOT ID CLOSEB",
        /* 141 */
        "indexdef ::= OPENB expr CLOSEB",
        /* 142 */
        "indexdef ::= OPENB CLOSEB",
        /* 143 */
        "varvar ::= varvarele",
        /* 144 */
        "varvar ::= varvar varvarele",
        /* 145 */
        "varvarele ::= ID",
        /* 146 */
        "varvarele ::= LDEL expr RDEL",
        /* 147 */
        "object ::= varindexed objectchain",
        /* 148 */
        "objectchain ::= objectelement",
        /* 149 */
        "objectchain ::= objectchain objectelement",
        /* 150 */
        "objectelement ::= PTR ID arrayindex",
        /* 151 */
        "objectelement ::= PTR DOLLAR varvar arrayindex",
        /* 152 */
        "objectelement ::= PTR LDEL expr RDEL arrayindex",
        /* 153 */
        "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
        /* 154 */
        "objectelement ::= PTR method",
        /* 155 */
        "function ::= ID OPENP params CLOSEP",
        /* 156 */
        "method ::= ID OPENP params CLOSEP",
        /* 157 */
        "method ::= DOLLAR ID OPENP params CLOSEP",
        /* 158 */
        "params ::= params COMMA expr",
        /* 159 */
        "params ::= expr",
        /* 160 */
        "params ::=",
        /* 161 */
        "modifierlist ::= modifierlist modifier modparameters",
        /* 162 */
        "modifierlist ::= modifier modparameters",
        /* 163 */
        "modifier ::= VERT AT ID",
        /* 164 */
        "modifier ::= VERT ID",
        /* 165 */
        "modparameters ::= modparameters modparameter",
        /* 166 */
        "modparameters ::=",
        /* 167 */
        "modparameter ::= COLON value",
        /* 168 */
        "modparameter ::= COLON array",
        /* 169 */
        "static_class_access ::= method",
        /* 170 */
        "static_class_access ::= method objectchain",
        /* 171 */
        "static_class_access ::= ID",
        /* 172 */
        "static_class_access ::= DOLLAR ID arrayindex",
        /* 173 */
        "static_class_access ::= DOLLAR ID arrayindex objectchain",
        /* 174 */
        "ifcond ::= EQUALS",
        /* 175 */
        "ifcond ::= NOTEQUALS",
        /* 176 */
        "ifcond ::= GREATERTHAN",
        /* 177 */
        "ifcond ::= LESSTHAN",
        /* 178 */
        "ifcond ::= GREATEREQUAL",
        /* 179 */
        "ifcond ::= LESSEQUAL",
        /* 180 */
        "ifcond ::= IDENTITY",
        /* 181 */
        "ifcond ::= NONEIDENTITY",
        /* 182 */
        "ifcond ::= MOD",
        /* 183 */
        "lop ::= LAND",
        /* 184 */
        "lop ::= LOR",
        /* 185 */
        "lop ::= LXOR",
        /* 186 */
        "array ::= OPENB arrayelements CLOSEB",
        /* 187 */
        "arrayelements ::= arrayelement",
        /* 188 */
        "arrayelements ::= arrayelements COMMA arrayelement",
        /* 189 */
        "arrayelements ::=",
        /* 190 */
        "arrayelement ::= value APTR expr",
        /* 191 */
        "arrayelement ::= ID APTR expr",
        /* 192 */
        "arrayelement ::= expr",
        /* 193 */
        "doublequoted_with_quotes ::= QUOTE QUOTE",
        /* 194 */
        "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
        /* 195 */
        "doublequoted ::= doublequoted doublequotedcontent",
        /* 196 */
        "doublequoted ::= doublequotedcontent",
        /* 197 */
        "doublequotedcontent ::= BACKTICK variable BACKTICK",
        /* 198 */
        "doublequotedcontent ::= BACKTICK expr BACKTICK",
        /* 199 */
        "doublequotedcontent ::= DOLLARID",
        /* 200 */
        "doublequotedcontent ::= LDEL variable RDEL",
        /* 201 */
        "doublequotedcontent ::= LDEL expr RDEL",
        /* 202 */
        "doublequotedcontent ::= smartytag RDEL",
        /* 203 */
        "doublequotedcontent ::= TEXT",
        /* 204 */
        "optspace ::= SPACE",
        /* 205 */
        "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                   $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                   "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx --;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                        if (in_array($token,
                                     self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                        in_array($token, self::$yyExpectedTokens[$nextstate], true)
                    ) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                && ($iFallback = self::$yyFallback[$iLookAhead]) != 0
            ) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE, $this->yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx ++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx --;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 91 "smarty_internal_templateparser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");
            #line 1699 "smarty_internal_templateparser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt,
                    $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i ++) {
                fprintf($this->yyTraceFILE, " %s",
                        $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    public static $yyRuleInfo = array(
        array('lhs' => 84, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 85, 'rhs' => 2),
        array('lhs' => 85, 'rhs' => 0),
        array('lhs' => 86, 'rhs' => 2),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 89, 'rhs' => 2),
        array('lhs' => 89, 'rhs' => 0),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 90, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 4),
        array('lhs' => 87, 'rhs' => 3),
        array('lhs' => 87, 'rhs' => 4),
        array('lhs' => 87, 'rhs' => 3),
        array('lhs' => 87, 'rhs' => 5),
        array('lhs' => 87, 'rhs' => 5),
        array('lhs' => 87, 'rhs' => 6),
        array('lhs' => 87, 'rhs' => 5),
        array('lhs' => 87, 'rhs' => 3),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 5),
        array('lhs' => 87, 'rhs' => 4),
        array('lhs' => 87, 'rhs' => 6),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 3),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 3),
        array('lhs' => 87, 'rhs' => 11),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 5),
        array('lhs' => 87, 'rhs' => 7),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 7),
        array('lhs' => 87, 'rhs' => 10),
        array('lhs' => 87, 'rhs' => 7),
        array('lhs' => 87, 'rhs' => 10),
        array('lhs' => 87, 'rhs' => 3),
        array('lhs' => 87, 'rhs' => 4),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 3),
        array('lhs' => 87, 'rhs' => 4),
        array('lhs' => 87, 'rhs' => 5),
        array('lhs' => 93, 'rhs' => 2),
        array('lhs' => 93, 'rhs' => 1),
        array('lhs' => 93, 'rhs' => 0),
        array('lhs' => 102, 'rhs' => 4),
        array('lhs' => 102, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 4),
        array('lhs' => 97, 'rhs' => 1),
        array('lhs' => 97, 'rhs' => 3),
        array('lhs' => 96, 'rhs' => 4),
        array('lhs' => 96, 'rhs' => 3),
        array('lhs' => 96, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 1),
        array('lhs' => 94, 'rhs' => 1),
        array('lhs' => 94, 'rhs' => 4),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 1),
        array('lhs' => 94, 'rhs' => 2),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 2),
        array('lhs' => 94, 'rhs' => 2),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 2),
        array('lhs' => 94, 'rhs' => 2),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 94, 'rhs' => 3),
        array('lhs' => 103, 'rhs' => 8),
        array('lhs' => 103, 'rhs' => 7),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 91, 'rhs' => 3),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 91, 'rhs' => 3),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 91, 'rhs' => 3),
        array('lhs' => 91, 'rhs' => 3),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 91, 'rhs' => 2),
        array('lhs' => 107, 'rhs' => 1),
        array('lhs' => 107, 'rhs' => 4),
        array('lhs' => 107, 'rhs' => 1),
        array('lhs' => 107, 'rhs' => 3),
        array('lhs' => 107, 'rhs' => 4),
        array('lhs' => 107, 'rhs' => 3),
        array('lhs' => 107, 'rhs' => 4),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 112, 'rhs' => 2),
        array('lhs' => 112, 'rhs' => 0),
        array('lhs' => 113, 'rhs' => 3),
        array('lhs' => 113, 'rhs' => 5),
        array('lhs' => 113, 'rhs' => 2),
        array('lhs' => 113, 'rhs' => 2),
        array('lhs' => 113, 'rhs' => 4),
        array('lhs' => 113, 'rhs' => 3),
        array('lhs' => 113, 'rhs' => 5),
        array('lhs' => 113, 'rhs' => 3),
        array('lhs' => 113, 'rhs' => 2),
        array('lhs' => 99, 'rhs' => 1),
        array('lhs' => 99, 'rhs' => 2),
        array('lhs' => 114, 'rhs' => 1),
        array('lhs' => 114, 'rhs' => 3),
        array('lhs' => 111, 'rhs' => 2),
        array('lhs' => 115, 'rhs' => 1),
        array('lhs' => 115, 'rhs' => 2),
        array('lhs' => 116, 'rhs' => 3),
        array('lhs' => 116, 'rhs' => 4),
        array('lhs' => 116, 'rhs' => 5),
        array('lhs' => 116, 'rhs' => 6),
        array('lhs' => 116, 'rhs' => 2),
        array('lhs' => 108, 'rhs' => 4),
        array('lhs' => 117, 'rhs' => 4),
        array('lhs' => 117, 'rhs' => 5),
        array('lhs' => 118, 'rhs' => 3),
        array('lhs' => 118, 'rhs' => 1),
        array('lhs' => 118, 'rhs' => 0),
        array('lhs' => 92, 'rhs' => 3),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 119, 'rhs' => 3),
        array('lhs' => 119, 'rhs' => 2),
        array('lhs' => 101, 'rhs' => 2),
        array('lhs' => 101, 'rhs' => 0),
        array('lhs' => 120, 'rhs' => 2),
        array('lhs' => 120, 'rhs' => 2),
        array('lhs' => 110, 'rhs' => 1),
        array('lhs' => 110, 'rhs' => 2),
        array('lhs' => 110, 'rhs' => 1),
        array('lhs' => 110, 'rhs' => 3),
        array('lhs' => 110, 'rhs' => 4),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 104, 'rhs' => 3),
        array('lhs' => 121, 'rhs' => 1),
        array('lhs' => 121, 'rhs' => 3),
        array('lhs' => 121, 'rhs' => 0),
        array('lhs' => 122, 'rhs' => 3),
        array('lhs' => 122, 'rhs' => 3),
        array('lhs' => 122, 'rhs' => 1),
        array('lhs' => 109, 'rhs' => 2),
        array('lhs' => 109, 'rhs' => 3),
        array('lhs' => 123, 'rhs' => 2),
        array('lhs' => 123, 'rhs' => 1),
        array('lhs' => 124, 'rhs' => 3),
        array('lhs' => 124, 'rhs' => 3),
        array('lhs' => 124, 'rhs' => 1),
        array('lhs' => 124, 'rhs' => 3),
        array('lhs' => 124, 'rhs' => 3),
        array('lhs' => 124, 'rhs' => 2),
        array('lhs' => 124, 'rhs' => 1),
        array('lhs' => 98, 'rhs' => 1),
        array('lhs' => 98, 'rhs' => 0),
    );

    public static $yyReduceMap = array(
        0   => 0,
        1   => 1,
        2   => 1,
        4   => 4,
        5   => 5,
        6   => 6,
        7   => 7,
        8   => 8,
        9   => 9,
        10  => 10,
        11  => 11,
        12  => 12,
        13  => 13,
        14  => 14,
        15  => 15,
        16  => 16,
        17  => 17,
        18  => 18,
        21  => 18,
        205 => 18,
        19  => 19,
        78  => 19,
        20  => 20,
        106 => 20,
        108 => 20,
        109 => 20,
        132 => 20,
        170 => 20,
        22  => 22,
        23  => 22,
        49  => 22,
        71  => 22,
        72  => 22,
        79  => 22,
        80  => 22,
        85  => 22,
        105 => 22,
        110 => 22,
        111 => 22,
        116 => 22,
        118 => 22,
        119 => 22,
        126 => 22,
        143 => 22,
        169 => 22,
        171 => 22,
        187 => 22,
        192 => 22,
        204 => 22,
        24  => 24,
        25  => 24,
        26  => 26,
        27  => 27,
        28  => 28,
        29  => 29,
        30  => 30,
        31  => 31,
        33  => 31,
        32  => 32,
        34  => 34,
        35  => 34,
        36  => 36,
        37  => 37,
        38  => 38,
        39  => 39,
        40  => 40,
        41  => 41,
        42  => 42,
        43  => 43,
        44  => 44,
        46  => 44,
        45  => 45,
        47  => 47,
        48  => 48,
        50  => 50,
        51  => 51,
        52  => 52,
        53  => 53,
        55  => 53,
        54  => 54,
        56  => 54,
        57  => 57,
        58  => 58,
        59  => 59,
        60  => 60,
        61  => 61,
        62  => 62,
        63  => 63,
        64  => 64,
        65  => 65,
        74  => 65,
        159 => 65,
        163 => 65,
        167 => 65,
        168 => 65,
        66  => 66,
        160 => 66,
        166 => 66,
        67  => 67,
        68  => 68,
        69  => 68,
        70  => 70,
        73  => 73,
        75  => 75,
        76  => 76,
        77  => 76,
        81  => 81,
        82  => 82,
        83  => 82,
        84  => 82,
        86  => 86,
        123 => 86,
        87  => 87,
        90  => 87,
        101 => 87,
        88  => 88,
        89  => 89,
        91  => 91,
        92  => 92,
        93  => 93,
        98  => 93,
        94  => 94,
        97  => 94,
        95  => 95,
        100 => 95,
        96  => 96,
        99  => 96,
        102 => 102,
        103 => 103,
        104 => 104,
        107 => 107,
        112 => 112,
        113 => 113,
        114 => 114,
        115 => 115,
        117 => 117,
        120 => 120,
        121 => 121,
        122 => 122,
        124 => 124,
        125 => 125,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        133 => 133,
        189 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        141 => 138,
        139 => 139,
        140 => 140,
        142 => 142,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        161 => 161,
        162 => 162,
        164 => 164,
        165 => 165,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        188 => 188,
        190 => 190,
        191 => 191,
        193 => 193,
        194 => 194,
        195 => 195,
        196 => 196,
        197 => 197,
        198 => 197,
        200 => 197,
        199 => 199,
        201 => 201,
        202 => 202,
        203 => 203,
    );

    #line 102 "smarty_internal_templateparser.y"
    function yy_r0()
    {
        $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
    #line 2140 "smarty_internal_templateparser.php"
    #line 110 "smarty_internal_templateparser.y"
    function yy_r1()
    {
        if ($this->yystack[$this->yyidx + 0]->minor != null) {
            $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
        }
    }
    #line 2147 "smarty_internal_templateparser.php"
    #line 130 "smarty_internal_templateparser.y"
    function yy_r4()
    {
        if ($this->compiler->has_code) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp . $this->yystack[$this->yyidx + - 1]->minor, true));
        } else {
            $this->_retvalue = null;
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
    #line 2159 "smarty_internal_templateparser.php"
    #line 142 "smarty_internal_templateparser.y"
    function yy_r5()
    {
        $this->_retvalue = null;
    }
    #line 2164 "smarty_internal_templateparser.php"
    #line 147 "smarty_internal_templateparser.y"
    function yy_r6()
    {
        $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2169 "smarty_internal_templateparser.php"
    #line 152 "smarty_internal_templateparser.y"
    function yy_r7()
    {
        if (strpos($this->yystack[$this->yyidx + 0]->minor, '<s') === 0) {
            $this->lex->is_phpScript = true;
        }
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error(self::Err3);
            }
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php ', true));
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            $this->_retvalue = null;
        }
    }
    #line 2188 "smarty_internal_templateparser.php"
    #line 171 "smarty_internal_templateparser.y"
    function yy_r8()
    {
        if ($this->is_xml) {
            $this->compiler->tag_nocache = true;
            $this->is_xml = false;
            $save = $this->template->has_nocache_code;
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>\n", $this->compiler, true));
            $this->template->has_nocache_code = $save;
        } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            $this->_retvalue = null;
        }
    }
    #line 2207 "smarty_internal_templateparser.php"
    #line 189 "smarty_internal_templateparser.y"
    function yy_r9()
    {
        if (!$this->lex->is_phpScript) {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        } else {
            $this->lex->is_phpScript = false;
            if ($this->php_handling == Smarty::PHP_PASSTHRU) {
                $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
            } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
            } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
            } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                $this->_retvalue = null;
            }
        }
    }
    #line 2225 "smarty_internal_templateparser.php"
    #line 207 "smarty_internal_templateparser.y"
    function yy_r10()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                if (!($this->smarty instanceof SmartyBC)) {
                    $this->compiler->trigger_template_error(self::Err3);
                }
                $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
            } else {
                $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if ($this->asp_tags) {
                $this->_retvalue = null;
            } else {
                $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
            }
        }
    }
    #line 2249 "smarty_internal_templateparser.php"
    #line 231 "smarty_internal_templateparser.y"
    function yy_r11()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
            } else {
                $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if ($this->asp_tags) {
                $this->_retvalue = null;
            } else {
                $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
            }
        }
    }
    #line 2270 "smarty_internal_templateparser.php"
    #line 251 "smarty_internal_templateparser.y"
    function yy_r12()
    {
        if ($this->strip) {
            $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));
        } else {
            $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
        }
    }
    #line 2279 "smarty_internal_templateparser.php"
    #line 260 "smarty_internal_templateparser.y"
    function yy_r13()
    {
        $this->compiler->tag_nocache = true;
        $this->is_xml = true;
        $save = $this->template->has_nocache_code;
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));
        $this->template->has_nocache_code = $save;
    }
    #line 2288 "smarty_internal_templateparser.php"
    #line 269 "smarty_internal_templateparser.y"
    function yy_r14()
    {
        if ($this->strip) {
            $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        }
    }
    #line 2297 "smarty_internal_templateparser.php"
    #line 278 "smarty_internal_templateparser.y"
    function yy_r15()
    {
        $this->strip = true;
    }
    #line 2302 "smarty_internal_templateparser.php"
    #line 282 "smarty_internal_templateparser.y"
    function yy_r16()
    {
        $this->strip = false;
    }
    #line 2307 "smarty_internal_templateparser.php"
    #line 286 "smarty_internal_templateparser.y"
    function yy_r17()
    {
        if ($this->strip) {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, $this->yystack[$this->yyidx + 0]->minor);
        }
    }
    #line 2316 "smarty_internal_templateparser.php"
    #line 295 "smarty_internal_templateparser.y"
    function yy_r18()
    {
        $this->_retvalue = '';
    }
    #line 2321 "smarty_internal_templateparser.php"
    #line 299 "smarty_internal_templateparser.y"
    function yy_r19()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
    }
    #line 2326 "smarty_internal_templateparser.php"
    #line 303 "smarty_internal_templateparser.y"
    function yy_r20()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2331 "smarty_internal_templateparser.php"
    #line 311 "smarty_internal_templateparser.y"
    function yy_r22()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2336 "smarty_internal_templateparser.php"
    #line 319 "smarty_internal_templateparser.y"
    function yy_r24()
    {
        $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2341 "smarty_internal_templateparser.php"
    #line 327 "smarty_internal_templateparser.y"
    function yy_r26()
    {
        $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2346 "smarty_internal_templateparser.php"
    #line 331 "smarty_internal_templateparser.y"
    function yy_r27()
    {
        $this->_retvalue = '<<?php ?>%';
    }
    #line 2351 "smarty_internal_templateparser.php"
    #line 335 "smarty_internal_templateparser.y"
    function yy_r28()
    {
        $this->_retvalue = '%<?php ?>>';
    }
    #line 2356 "smarty_internal_templateparser.php"
    #line 344 "smarty_internal_templateparser.y"
    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(), array('value' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2361 "smarty_internal_templateparser.php"
    #line 348 "smarty_internal_templateparser.y"
    function yy_r30()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 2]->minor, 'modifierlist' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2366 "smarty_internal_templateparser.php"
    #line 352 "smarty_internal_templateparser.y"
    function yy_r31()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2371 "smarty_internal_templateparser.php"
    #line 356 "smarty_internal_templateparser.y"
    function yy_r32()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 2]->minor, 'modifierlist' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2376 "smarty_internal_templateparser.php"
    #line 369 "smarty_internal_templateparser.y"
    function yy_r34()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array(array('value' => $this->yystack[$this->yyidx + 0]->minor), array('var' => "'" . $this->yystack[$this->yyidx + - 2]->minor . "'")));
    }
    #line 2381 "smarty_internal_templateparser.php"
    #line 377 "smarty_internal_templateparser.y"
    function yy_r36()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + - 1]->minor), array('var' => "'" . $this->yystack[$this->yyidx + - 3]->minor . "'")), $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2386 "smarty_internal_templateparser.php"
    #line 381 "smarty_internal_templateparser.y"
    function yy_r37()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + - 1]->minor), array('var' => $this->yystack[$this->yyidx + - 3]->minor['var'])), $this->yystack[$this->yyidx + 0]->minor), array('smarty_internal_index' => $this->yystack[$this->yyidx + - 3]->minor['smarty_internal_index']));
    }
    #line 2391 "smarty_internal_templateparser.php"
    #line 386 "smarty_internal_templateparser.y"
    function yy_r38()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2396 "smarty_internal_templateparser.php"
    #line 390 "smarty_internal_templateparser.y"
    function yy_r39()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor, array());
    }
    #line 2401 "smarty_internal_templateparser.php"
    #line 395 "smarty_internal_templateparser.y"
    function yy_r40()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 3]->minor, $this->yystack[$this->yyidx + 0]->minor, array('object_method' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2406 "smarty_internal_templateparser.php"
    #line 400 "smarty_internal_templateparser.y"
    function yy_r41()
    {
        $this->_retvalue = '<?php ob_start();?>' . $this->compiler->compileTag($this->yystack[$this->yyidx + - 2]->minor, $this->yystack[$this->yyidx + 0]->minor) . '<?php echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(), array('modifierlist' => $this->yystack[$this->yyidx + - 1]->minor, 'value' => 'ob_get_clean()')) . '?>';
    }
    #line 2412 "smarty_internal_templateparser.php"
    #line 406 "smarty_internal_templateparser.y"
    function yy_r42()
    {
        $this->_retvalue = '<?php ob_start();?>' . $this->compiler->compileTag($this->yystack[$this->yyidx + - 4]->minor, $this->yystack[$this->yyidx + 0]->minor, array('object_method' => $this->yystack[$this->yyidx + - 2]->minor)) . '<?php echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(), array('modifierlist' => $this->yystack[$this->yyidx + - 1]->minor, 'value' => 'ob_get_clean()')) . '?>';
    }
    #line 2418 "smarty_internal_templateparser.php"
    #line 412 "smarty_internal_templateparser.y"
    function yy_r43()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 1]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(), array('if condition' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2424 "smarty_internal_templateparser.php"
    #line 417 "smarty_internal_templateparser.y"
    function yy_r44()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 2]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, $this->yystack[$this->yyidx + 0]->minor, array('if condition' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2430 "smarty_internal_templateparser.php"
    #line 422 "smarty_internal_templateparser.y"
    function yy_r45()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 1]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(), array('if condition' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2436 "smarty_internal_templateparser.php"
    #line 433 "smarty_internal_templateparser.y"
    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 9]->minor), array('ifexp' => $this->yystack[$this->yyidx + - 6]->minor), array('var' => $this->yystack[$this->yyidx + - 2]->minor), array('step' => $this->yystack[$this->yyidx + - 1]->minor))), 1);
    }
    #line 2441 "smarty_internal_templateparser.php"
    #line 437 "smarty_internal_templateparser.y"
    function yy_r48()
    {
        $this->_retvalue = '=' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2446 "smarty_internal_templateparser.php"
    #line 445 "smarty_internal_templateparser.y"
    function yy_r50()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 3]->minor), array('to' => $this->yystack[$this->yyidx + - 1]->minor))), 0);
    }
    #line 2451 "smarty_internal_templateparser.php"
    #line 449 "smarty_internal_templateparser.y"
    function yy_r51()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 5]->minor), array('to' => $this->yystack[$this->yyidx + - 3]->minor), array('step' => $this->yystack[$this->yyidx + - 1]->minor))), 0);
    }
    #line 2456 "smarty_internal_templateparser.php"
    #line 454 "smarty_internal_templateparser.y"
    function yy_r52()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2461 "smarty_internal_templateparser.php"
    #line 459 "smarty_internal_templateparser.y"
    function yy_r53()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('from' => $this->yystack[$this->yyidx + - 4]->minor), array('item' => $this->yystack[$this->yyidx + - 1]->minor))));
    }
    #line 2466 "smarty_internal_templateparser.php"
    #line 463 "smarty_internal_templateparser.y"
    function yy_r54()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('from' => $this->yystack[$this->yyidx + - 7]->minor), array('item' => $this->yystack[$this->yyidx + - 1]->minor), array('key' => $this->yystack[$this->yyidx + - 4]->minor))));
    }
    #line 2471 "smarty_internal_templateparser.php"
    #line 476 "smarty_internal_templateparser.y"
    function yy_r57()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array(array_merge(array($this->yystack[$this->yyidx + - 1]->minor), $this->yystack[$this->yyidx + 0]->minor))));
    }
    #line 2476 "smarty_internal_templateparser.php"
    #line 480 "smarty_internal_templateparser.y"
    function yy_r58()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array_merge(array(array_merge(array($this->yystack[$this->yyidx + - 2]->minor), $this->yystack[$this->yyidx + - 1]->minor)), $this->yystack[$this->yyidx + 0]->minor)));
    }
    #line 2481 "smarty_internal_templateparser.php"
    #line 485 "smarty_internal_templateparser.y"
    function yy_r59()
    {
        $j = strrpos($this->yystack[$this->yyidx + 0]->minor, '.');
        if ($this->yystack[$this->yyidx + 0]->minor[$j + 1] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
        } else {
            // {$smarty.block.parent}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler);
        }
    }
    #line 2493 "smarty_internal_templateparser.php"
    #line 498 "smarty_internal_templateparser.y"
    function yy_r60()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor . 'close', array());
    }
    #line 2498 "smarty_internal_templateparser.php"
    #line 502 "smarty_internal_templateparser.y"
    function yy_r61()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 1]->minor . 'close', array(), array('modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2503 "smarty_internal_templateparser.php"
    #line 507 "smarty_internal_templateparser.y"
    function yy_r62()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 2]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2508 "smarty_internal_templateparser.php"
    #line 511 "smarty_internal_templateparser.y"
    function yy_r63()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 3]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + - 1]->minor, 'modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2513 "smarty_internal_templateparser.php"
    #line 519 "smarty_internal_templateparser.y"
    function yy_r64()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
        $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2519 "smarty_internal_templateparser.php"
    #line 525 "smarty_internal_templateparser.y"
    function yy_r65()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2524 "smarty_internal_templateparser.php"
    #line 530 "smarty_internal_templateparser.y"
    function yy_r66()
    {
        $this->_retvalue = array();
    }
    #line 2529 "smarty_internal_templateparser.php"
    #line 535 "smarty_internal_templateparser.y"
    function yy_r67()
    {
        if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => 'true');
        } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => 'false');
        } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => 'null');
        } else {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => "'" . $this->yystack[$this->yyidx + 0]->minor . "'");
        }
    }
    #line 2542 "smarty_internal_templateparser.php"
    #line 547 "smarty_internal_templateparser.y"
    function yy_r68()
    {
        $this->_retvalue = array(trim($this->yystack[$this->yyidx + - 1]->minor, " =\n\r\t") => $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2547 "smarty_internal_templateparser.php"
    #line 555 "smarty_internal_templateparser.y"
    function yy_r70()
    {
        $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
    }
    #line 2552 "smarty_internal_templateparser.php"
    #line 567 "smarty_internal_templateparser.y"
    function yy_r73()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2557 "smarty_internal_templateparser.php"
    #line 580 "smarty_internal_templateparser.y"
    function yy_r75()
    {
        $this->yystack[$this->yyidx + - 2]->minor[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor;
    }
    #line 2563 "smarty_internal_templateparser.php"
    #line 585 "smarty_internal_templateparser.y"
    function yy_r76()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + - 2]->minor, 'value' => $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2568 "smarty_internal_templateparser.php"
    #line 613 "smarty_internal_templateparser.y"
    function yy_r81()
    {
        $this->_retvalue = '$_smarty_tpl->getStreamVariable(\'' . $this->yystack[$this->yyidx + - 2]->minor . '://' . $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
    #line 2573 "smarty_internal_templateparser.php"
    #line 618 "smarty_internal_templateparser.y"
    function yy_r82()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . trim($this->yystack[$this->yyidx + - 1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2578 "smarty_internal_templateparser.php"
    #line 637 "smarty_internal_templateparser.y"
    function yy_r86()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier', array(), array('value' => $this->yystack[$this->yyidx + - 1]->minor, 'modifierlist' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2583 "smarty_internal_templateparser.php"
    #line 643 "smarty_internal_templateparser.y"
    function yy_r87()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2588 "smarty_internal_templateparser.php"
    #line 647 "smarty_internal_templateparser.y"
    function yy_r88()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + - 2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2593 "smarty_internal_templateparser.php"
    #line 651 "smarty_internal_templateparser.y"
    function yy_r89()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + - 2]->minor . ',(array)' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2598 "smarty_internal_templateparser.php"
    #line 659 "smarty_internal_templateparser.y"
    function yy_r91()
    {
        $this->_retvalue = '!(' . $this->yystack[$this->yyidx + - 2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2603 "smarty_internal_templateparser.php"
    #line 663 "smarty_internal_templateparser.y"
    function yy_r92()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + - 2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2608 "smarty_internal_templateparser.php"
    #line 667 "smarty_internal_templateparser.y"
    function yy_r93()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 2613 "smarty_internal_templateparser.php"
    #line 671 "smarty_internal_templateparser.y"
    function yy_r94()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 2618 "smarty_internal_templateparser.php"
    #line 675 "smarty_internal_templateparser.y"
    function yy_r95()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + - 2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2623 "smarty_internal_templateparser.php"
    #line 679 "smarty_internal_templateparser.y"
    function yy_r96()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + - 2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2628 "smarty_internal_templateparser.php"
    #line 703 "smarty_internal_templateparser.y"
    function yy_r102()
    {
        self::$prefix_number ++;
        $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . '=' . $this->yystack[$this->yyidx + 0]->minor . ';?>';
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + - 1]->minor . '$_tmp' . self::$prefix_number;
    }
    #line 2635 "smarty_internal_templateparser.php"
    #line 712 "smarty_internal_templateparser.y"
    function yy_r103()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 6]->minor . ' ? ' . $this->compileVariable("'" . $this->yystack[$this->yyidx + - 2]->minor . "'") . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2640 "smarty_internal_templateparser.php"
    #line 716 "smarty_internal_templateparser.y"
    function yy_r104()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 5]->minor . ' ? ' . $this->yystack[$this->yyidx + - 2]->minor . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2645 "smarty_internal_templateparser.php"
    #line 731 "smarty_internal_templateparser.y"
    function yy_r107()
    {
        $this->_retvalue = '!' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2650 "smarty_internal_templateparser.php"
    #line 752 "smarty_internal_templateparser.y"
    function yy_r112()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2655 "smarty_internal_templateparser.php"
    #line 756 "smarty_internal_templateparser.y"
    function yy_r113()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . '.';
    }
    #line 2660 "smarty_internal_templateparser.php"
    #line 760 "smarty_internal_templateparser.y"
    function yy_r114()
    {
        $this->_retvalue = '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2665 "smarty_internal_templateparser.php"
    #line 765 "smarty_internal_templateparser.y"
    function yy_r115()
    {
        if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'true';
        } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'false';
        } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'null';
        } else {
            $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
        }
    }
    #line 2678 "smarty_internal_templateparser.php"
    #line 783 "smarty_internal_templateparser.y"
    function yy_r117()
    {
        $this->_retvalue = "(" . $this->yystack[$this->yyidx + - 1]->minor . ")";
    }
    #line 2683 "smarty_internal_templateparser.php"
    #line 798 "smarty_internal_templateparser.y"
    function yy_r120()
    {
        if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + - 2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + - 2]->minor, $this->compiler)) {
            if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + - 2]->minor])) {
                $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + - 2]->minor] . '::' . $this->yystack[$this->yyidx + 0]->minor;
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '::' . $this->yystack[$this->yyidx + 0]->minor;
            }
        } else {
            $this->compiler->trigger_template_error("static class '" . $this->yystack[$this->yyidx + - 2]->minor . "' is undefined or not allowed by security setting");
        }
    }
    #line 2696 "smarty_internal_templateparser.php"
    #line 810 "smarty_internal_templateparser.y"
    function yy_r121()
    {
        if ($this->yystack[$this->yyidx + - 2]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + - 2]->minor['smarty_internal_index']) . '::' . $this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + - 2]->minor['var']) . $this->yystack[$this->yyidx + - 2]->minor['smarty_internal_index'] . '::' . $this->yystack[$this->yyidx + 0]->minor;
        }
    }
    #line 2705 "smarty_internal_templateparser.php"
    #line 819 "smarty_internal_templateparser.y"
    function yy_r122()
    {
        self::$prefix_number ++;
        $this->compiler->prefix_code[] = '<?php ob_start();?>' . $this->yystack[$this->yyidx + - 1]->minor . '<?php $_tmp' . self::$prefix_number . '=ob_get_clean();?>';
        $this->_retvalue = '$_tmp' . self::$prefix_number;
    }
    #line 2712 "smarty_internal_templateparser.php"
    #line 834 "smarty_internal_templateparser.y"
    function yy_r124()
    {
        if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current 
            $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
            $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
            $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']) . $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        }
    }
    #line 2725 "smarty_internal_templateparser.php"
    #line 847 "smarty_internal_templateparser.y"
    function yy_r125()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[$this->yyidx + - 2]->minor . ']->' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2730 "smarty_internal_templateparser.php"
    #line 857 "smarty_internal_templateparser.y"
    function yy_r127()
    {
        $this->_retvalue = '$_smarty_tpl->getConfigVariable(\'' . $this->yystack[$this->yyidx + - 1]->minor . '\')';
    }
    #line 2735 "smarty_internal_templateparser.php"
    #line 861 "smarty_internal_templateparser.y"
    function yy_r128()
    {
        $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable(\'' . $this->yystack[$this->yyidx + - 2]->minor . '\')) ? $tmp' . $this->yystack[$this->yyidx + 0]->minor . ' :null)';
    }
    #line 2740 "smarty_internal_templateparser.php"
    #line 865 "smarty_internal_templateparser.y"
    function yy_r129()
    {
        $this->_retvalue = '$_smarty_tpl->getConfigVariable(' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 2745 "smarty_internal_templateparser.php"
    #line 869 "smarty_internal_templateparser.y"
    function yy_r130()
    {
        $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable(' . $this->yystack[$this->yyidx + - 2]->minor . ')) ? $tmp' . $this->yystack[$this->yyidx + 0]->minor . ' : null)';
    }
    #line 2750 "smarty_internal_templateparser.php"
    #line 873 "smarty_internal_templateparser.y"
    function yy_r131()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + - 1]->minor, 'smarty_internal_index' => $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2755 "smarty_internal_templateparser.php"
    #line 886 "smarty_internal_templateparser.y"
    function yy_r133()
    {
        return;
    }
    #line 2760 "smarty_internal_templateparser.php"
    #line 892 "smarty_internal_templateparser.y"
    function yy_r134()
    {
        $this->_retvalue = '[' . $this->compileVariable($this->yystack[$this->yyidx + 0]->minor) . ']';
    }
    #line 2765 "smarty_internal_templateparser.php"
    #line 896 "smarty_internal_templateparser.y"
    function yy_r135()
    {
        $this->_retvalue = '[' . $this->compileVariable($this->yystack[$this->yyidx + - 2]->minor) . '->' . $this->yystack[$this->yyidx + 0]->minor . ']';
    }
    #line 2770 "smarty_internal_templateparser.php"
    #line 900 "smarty_internal_templateparser.y"
    function yy_r136()
    {
        $this->_retvalue = "['" . $this->yystack[$this->yyidx + 0]->minor . "']";
    }
    #line 2775 "smarty_internal_templateparser.php"
    #line 904 "smarty_internal_templateparser.y"
    function yy_r137()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + 0]->minor . "]";
    }
    #line 2780 "smarty_internal_templateparser.php"
    #line 908 "smarty_internal_templateparser.y"
    function yy_r138()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + - 1]->minor . "]";
    }
    #line 2785 "smarty_internal_templateparser.php"
    #line 913 "smarty_internal_templateparser.y"
    function yy_r139()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + - 1]->minor . '\'][\'index\']') . ']';
    }
    #line 2790 "smarty_internal_templateparser.php"
    #line 917 "smarty_internal_templateparser.y"
    function yy_r140()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + - 3]->minor . '\'][\'' . $this->yystack[$this->yyidx + - 1]->minor . '\']') . ']';
    }
    #line 2795 "smarty_internal_templateparser.php"
    #line 927 "smarty_internal_templateparser.y"
    function yy_r142()
    {
        $this->_retvalue = '[]';
    }
    #line 2800 "smarty_internal_templateparser.php"
    #line 940 "smarty_internal_templateparser.y"
    function yy_r144()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2805 "smarty_internal_templateparser.php"
    #line 945 "smarty_internal_templateparser.y"
    function yy_r145()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + 0]->minor . '\'';
    }
    #line 2810 "smarty_internal_templateparser.php"
    #line 950 "smarty_internal_templateparser.y"
    function yy_r146()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 2815 "smarty_internal_templateparser.php"
    #line 957 "smarty_internal_templateparser.y"
    function yy_r147()
    {
        if ($this->yystack[$this->yyidx + - 1]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + - 1]->minor['smarty_internal_index']) . $this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + - 1]->minor['var']) . $this->yystack[$this->yyidx + - 1]->minor['smarty_internal_index'] . $this->yystack[$this->yyidx + 0]->minor;
        }
    }
    #line 2824 "smarty_internal_templateparser.php"
    #line 966 "smarty_internal_templateparser.y"
    function yy_r148()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2829 "smarty_internal_templateparser.php"
    #line 971 "smarty_internal_templateparser.y"
    function yy_r149()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2834 "smarty_internal_templateparser.php"
    #line 976 "smarty_internal_templateparser.y"
    function yy_r150()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + - 1]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2842 "smarty_internal_templateparser.php"
    #line 983 "smarty_internal_templateparser.y"
    function yy_r151()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compileVariable($this->yystack[$this->yyidx + - 1]->minor) . $this->yystack[$this->yyidx + 0]->minor . '}';
    }
    #line 2850 "smarty_internal_templateparser.php"
    #line 990 "smarty_internal_templateparser.y"
    function yy_r152()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }
    #line 2858 "smarty_internal_templateparser.php"
    #line 997 "smarty_internal_templateparser.y"
    function yy_r153()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{\'' . $this->yystack[$this->yyidx + - 4]->minor . '\'.' . $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }
    #line 2866 "smarty_internal_templateparser.php"
    #line 1005 "smarty_internal_templateparser.y"
    function yy_r154()
    {
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2871 "smarty_internal_templateparser.php"
    #line 1013 "smarty_internal_templateparser.y"
    function yy_r155()
    {
        if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + - 3]->minor, $this->compiler)) {
            if (strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'array') === 0 || is_callable($this->yystack[$this->yyidx + - 3]->minor)) {
                $func_name = strtolower($this->yystack[$this->yyidx + - 3]->minor);
                if ($func_name == 'isset') {
                    if (count($this->yystack[$this->yyidx + - 1]->minor) == 0) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "isset()"');
                    }
                    $par = implode(',', $this->yystack[$this->yyidx + - 1]->minor);
                    if (strncasecmp($par, '$_smarty_tpl->getConfigVariable', strlen('$_smarty_tpl->getConfigVariable')) === 0) {
                        self::$prefix_number ++;
                        $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . '=' . str_replace(')', ', false)', $par) . ';?>';
                        $isset_par = '$_tmp' . self::$prefix_number;
                    } else {
                        $isset_par = str_replace("')->value", "',null,true,false)->value", $par);
                    }
                    $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . $isset_par . ")";
                } elseif (in_array($func_name, array('empty', 'reset', 'current', 'end', 'prev', 'next'))) {
                    if (count($this->yystack[$this->yyidx + - 1]->minor) != 1) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "empty()"');
                    }
                    if ($func_name == 'empty') {
                        $this->_retvalue = $func_name . '(' . str_replace("')->value", "',null,true,false)->value", $this->yystack[$this->yyidx + - 1]->minor[0]) . ')';
                    } else {
                        $this->_retvalue = $func_name . '(' . $this->yystack[$this->yyidx + - 1]->minor[0] . ')';
                    }
                } else {
                    $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ")";
                }
            } else {
                $this->compiler->trigger_template_error("unknown function \"" . $this->yystack[$this->yyidx + - 3]->minor . "\"");
            }
        }
    }
    #line 2907 "smarty_internal_templateparser.php"
    #line 1051 "smarty_internal_templateparser.y"
    function yy_r156()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + - 3]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ")";
    }
    #line 2915 "smarty_internal_templateparser.php"
    #line 1058 "smarty_internal_templateparser.y"
    function yy_r157()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        self::$prefix_number ++;
        $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . '=' . $this->compileVariable("'" . $this->yystack[$this->yyidx + - 3]->minor . "'") . ';?>';
        $this->_retvalue = '$_tmp' . self::$prefix_number . '(' . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ')';
    }
    #line 2925 "smarty_internal_templateparser.php"
    #line 1069 "smarty_internal_templateparser.y"
    function yy_r158()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 2]->minor, array($this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2930 "smarty_internal_templateparser.php"
    #line 1086 "smarty_internal_templateparser.y"
    function yy_r161()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 2]->minor, array(array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor)));
    }
    #line 2935 "smarty_internal_templateparser.php"
    #line 1090 "smarty_internal_templateparser.y"
    function yy_r162()
    {
        $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2940 "smarty_internal_templateparser.php"
    #line 1098 "smarty_internal_templateparser.y"
    function yy_r164()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2945 "smarty_internal_templateparser.php"
    #line 1106 "smarty_internal_templateparser.y"
    function yy_r165()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2950 "smarty_internal_templateparser.php"
    #line 1140 "smarty_internal_templateparser.y"
    function yy_r172()
    {
        $this->_retvalue = '$' . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2955 "smarty_internal_templateparser.php"
    #line 1145 "smarty_internal_templateparser.y"
    function yy_r173()
    {
        $this->_retvalue = '$' . $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2960 "smarty_internal_templateparser.php"
    #line 1151 "smarty_internal_templateparser.y"
    function yy_r174()
    {
        $this->_retvalue = '==';
    }
    #line 2965 "smarty_internal_templateparser.php"
    #line 1155 "smarty_internal_templateparser.y"
    function yy_r175()
    {
        $this->_retvalue = '!=';
    }
    #line 2970 "smarty_internal_templateparser.php"
    #line 1159 "smarty_internal_templateparser.y"
    function yy_r176()
    {
        $this->_retvalue = '>';
    }
    #line 2975 "smarty_internal_templateparser.php"
    #line 1163 "smarty_internal_templateparser.y"
    function yy_r177()
    {
        $this->_retvalue = '<';
    }
    #line 2980 "smarty_internal_templateparser.php"
    #line 1167 "smarty_internal_templateparser.y"
    function yy_r178()
    {
        $this->_retvalue = '>=';
    }
    #line 2985 "smarty_internal_templateparser.php"
    #line 1171 "smarty_internal_templateparser.y"
    function yy_r179()
    {
        $this->_retvalue = '<=';
    }
    #line 2990 "smarty_internal_templateparser.php"
    #line 1175 "smarty_internal_templateparser.y"
    function yy_r180()
    {
        $this->_retvalue = '===';
    }
    #line 2995 "smarty_internal_templateparser.php"
    #line 1179 "smarty_internal_templateparser.y"
    function yy_r181()
    {
        $this->_retvalue = '!==';
    }
    #line 3000 "smarty_internal_templateparser.php"
    #line 1183 "smarty_internal_templateparser.y"
    function yy_r182()
    {
        $this->_retvalue = '%';
    }
    #line 3005 "smarty_internal_templateparser.php"
    #line 1187 "smarty_internal_templateparser.y"
    function yy_r183()
    {
        $this->_retvalue = '&&';
    }
    #line 3010 "smarty_internal_templateparser.php"
    #line 1191 "smarty_internal_templateparser.y"
    function yy_r184()
    {
        $this->_retvalue = '||';
    }
    #line 3015 "smarty_internal_templateparser.php"
    #line 1195 "smarty_internal_templateparser.y"
    function yy_r185()
    {
        $this->_retvalue = ' XOR ';
    }
    #line 3020 "smarty_internal_templateparser.php"
    #line 1202 "smarty_internal_templateparser.y"
    function yy_r186()
    {
        $this->_retvalue = 'array(' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 3025 "smarty_internal_templateparser.php"
    #line 1210 "smarty_internal_templateparser.y"
    function yy_r188()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 3030 "smarty_internal_templateparser.php"
    #line 1218 "smarty_internal_templateparser.y"
    function yy_r190()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '=>' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 3035 "smarty_internal_templateparser.php"
    #line 1222 "smarty_internal_templateparser.y"
    function yy_r191()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + - 2]->minor . '\'=>' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 3040 "smarty_internal_templateparser.php"
    #line 1234 "smarty_internal_templateparser.y"
    function yy_r193()
    {
        $this->_retvalue = "''";
    }
    #line 3045 "smarty_internal_templateparser.php"
    #line 1238 "smarty_internal_templateparser.y"
    function yy_r194()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor->to_smarty_php();
    }
    #line 3050 "smarty_internal_templateparser.php"
    #line 1243 "smarty_internal_templateparser.y"
    function yy_r195()
    {
        $this->yystack[$this->yyidx + - 1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
    }
    #line 3056 "smarty_internal_templateparser.php"
    #line 1248 "smarty_internal_templateparser.y"
    function yy_r196()
    {
        $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 3061 "smarty_internal_templateparser.php"
    #line 1252 "smarty_internal_templateparser.y"
    function yy_r197()
    {
        $this->_retvalue = new _smarty_code($this, '(string)' . $this->yystack[$this->yyidx + - 1]->minor);
    }
    #line 3066 "smarty_internal_templateparser.php"
    #line 1260 "smarty_internal_templateparser.y"
    function yy_r199()
    {
        $this->_retvalue = new _smarty_code($this, '(string)$_smarty_tpl->tpl_vars[\'' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '\']->value');
    }
    #line 3071 "smarty_internal_templateparser.php"
    #line 1268 "smarty_internal_templateparser.y"
    function yy_r201()
    {
        $this->_retvalue = new _smarty_code($this, '(string)(' . $this->yystack[$this->yyidx + - 1]->minor . ')');
    }
    #line 3076 "smarty_internal_templateparser.php"
    #line 1272 "smarty_internal_templateparser.y"
    function yy_r202()
    {
        $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + - 1]->minor);
    }
    #line 3081 "smarty_internal_templateparser.php"
    #line 1276 "smarty_internal_templateparser.y"
    function yy_r203()
    {
        $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 3086 "smarty_internal_templateparser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if ($this->yyTraceFILE && $yyruleno >= 0
            && $yyruleno < count(self::$yyRuleName)
        ) {
            fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n",
                    $this->yyTracePrompt, $yyruleno,
                    self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i --) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx ++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 84 "smarty_internal_templateparser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
        #line 3148 "smarty_internal_templateparser.php"
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
        #line 76 "smarty_internal_templateparser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
        //echo $this->retvalue."\n\n";
        #line 3165 "smarty_internal_templateparser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = - 1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor == 0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sInput %s\n",
                    $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                !$this->yy_is_expected_token($yymajor)
            ) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt --;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE, "%sSyntax Error!\n",
                            $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE, "%sDiscard input token %s\n",
                                    $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                            $yymx != self::YYERRORSYMBOL &&
                            ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
